#! /usr/bin/python
###########################################################################################################################
# Created - 20/July/21, Author - Muhammad Junaid (mjo147@uregina.ca), University of Regina, Canada (Copyright (c) junaid) #
###########################################################################################################################
# Python version of the pion plotting script. Now utilises uproot to select event of each type and writes them to a root file.
# Python should allow for easier reading of databases storing diferent variables.
# This version of script is for physics analysis experts
# To run this script, execute: python3 scriptname runnumber

# SJDK 09/10/21 - Given how long the script for pions took on longer runs, I'm not neccessarily sure we want to process over all three types in a single script
# Looping over large trees is relatively time consuming in python

###################################################################################################################################################

# Import relevant packages
import uproot as up
import numpy as np
import root_numpy as rnp
import pandas as pd
import root_pandas as rpd
import ROOT
import scipy
import scipy.integrate as integrate
import matplotlib.pyplot as plt
import sys, math, os, subprocess
import array
from ROOT import TCanvas, TColor, TGaxis, TH1F, TH2F, TPad, TStyle, gStyle, gPad, TGaxis, TLine, TMath, TPaveText, TArc, TGraphPolar 
from ROOT import kBlack, kBlue, kRed
sys.path.insert(0, 'python/')

##################################################################################################################################################

# Defining some constants here
minbin = 0.92 # minimum bin for selecting neutrons events in missing mass distribution
maxbin = 0.98 # maximum bin for selecting neutrons events in missing mass distribution
minrangeuser = 0 # min range for -t vs phi plot
maxrangeuser = 1.2 #  max range for -t vs phi plot

##################################################################################################################################################

# Check the number of arguments provided to the script
FilenameOverride=False # Added a secret 4th argument so that a full kinematic can be processed, the run number is needed for cuts, but for the kinematic analysis, the filename is not by run number
if len(sys.argv)-1!=3:
    if len(sys.argv)-1!=4:
        print("!!!!! ERROR !!!!!\n Expected 3 arguments\n Usage is with - ROOTfileSuffix RunNumber MaxEvents \n!!!!! ERROR !!!!!")
        sys.exit(1)
    else:
        print ("!!!!! Running with secret 4th argument - FilenameOverride - Taking file name to process as stated EXACTLY in 4th arg !!!!!")
        FilenameOverride=sys.argv[4] # If 4 arguments provided, set the FilenameOverride value to be arg 4

##################################################################################################################################################

# Input params - run number and max number of events
ROOTSuffix = sys.argv[1]
runNum = sys.argv[2]
MaxEvent = sys.argv[3]

USER = subprocess.getstatusoutput("whoami") # Grab user info for file finding
HOST = subprocess.getstatusoutput("hostname")

if ("farm" in HOST[1]):
    REPLAYPATH = "/group/c-pionlt/online_analysis/hallc_replay_lt"
elif ("qcd" in HOST[1]):
    REPLAYPATH = "/group/c-pionlt/USERS/%s/hallc_replay_lt" % USER[1]
elif ("cdaq" in HOST[1]):
    REPLAYPATH = "/home/cdaq/hallc-online/hallc_replay_lt"
elif ("phys.uregina" in HOST[1]):
    REPLAYPATH = "/home/%s/work/JLab/hallc_replay_lt" % USER[1]
elif("skynet" in HOST[1]):
    REPLAYPATH = "/home/%s/Work/JLab/hallc_replay_lt" % USER[1]


#################################################################################################################################################

# Add more path setting as needed in a similar manner                                                                                                                                                          
OUTPATH = "%s/UTIL_PION/OUTPUT/Analysis/PionLT" % REPLAYPATH        # Output folder location                                                                                                     
sys.path.insert(0, '%s/UTIL_PION/bin/python/' % REPLAYPATH)
import kaonlt as klt # Import kaonlt module, need the path setting line above prior to importing this                                                                                                         
print("Running as %s on %s, hallc_replay_lt path assumed as %s" % (USER[1], HOST[1], REPLAYPATH))
if (FilenameOverride == False):
    Pion_Analysis_Distributions = "%s/%s_%s_Full_Pion_Analysis_Distributions.pdf" % (OUTPATH, runNum, MaxEvent)
    Kaon_Analysis_Distributions = "%s/%s_%s_Full_Kaon_Analysis_Distributions.pdf" % (OUTPATH, runNum, MaxEvent)
    Proton_Analysis_Distributions = "%s/%s_%s_Full_Proton_Analysis_Distributions.pdf" % (OUTPATH, runNum, MaxEvent)
elif (FilenameOverride != False): # If filename override set, format the file name based upon the override file name
    Pion_Analysis_Distributions = "%s/%s_Full_Pion_Analysis_Distributions.pdf" %(OUTPATH, (FilenameOverride.split("_Analysed_Data.root",1)[0]))
    Kaon_Analysis_Distributions = "%s/%s_Full_Kaon_Analysis_Distributions.pdf" %(OUTPATH, (FilenameOverride.split("_Analysed_Data.root",1)[0]))
    Proton_Analysis_Distributions = "%s/%s_Full_Proton_Analysis_Distributions.pdf" %(OUTPATH, (FilenameOverride.split("_Analysed_Data.root",1)[0]))

if (FilenameOverride != False):
    # Split string on W value, replace p with . and strip the leading Q before converting to a float
    Q2Val = float(((FilenameOverride.split("W")[0]).replace("p",".")).lstrip("Q"))
    # Split string on W, replace p with . and strip leading W, THEN split based on numeric characters and non numeric characters. Select the first entry and convert it to a float with 1 DP precision
    WVal = round(float(re.split('[a-zAZ]',((FilenameOverride.split("W")[1]).replace("p",".")).lstrip("W"))[0]),1)
    Q2min = Q2Val - 2 # Minimum value of Q2 on the Q2 vs W plot
    Q2max = Q2Val + 2 # Maximum value of Q2 on the Q2 vs W plot
    Wmin = WVal - 0.5 # min y-range for Q2vsW plot
    Wmax = WVal + 0.5 # max y-range for Q2vsW plot

#################################################################################################################################################

# Construct the name of the rootfile based upon the info we provided
if (FilenameOverride == False): # Standard running condition, construct file name from run number and max events e.t.c.
    rootName = "%s/UTIL_PION/OUTPUT/Analysis/PionLT/%s_%s_%s.root" % (REPLAYPATH, runNum, MaxEvent, ROOTSuffix)     # Input file location and variables taking
elif (FilenameOverride != False): # Special condition, with 4th arg, use 4th arg as file name
    rootName = "%s/UTIL_PION/OUTPUT/Analysis/PionLT/%s" % (REPLAYPATH, FilenameOverride)
print ("Attempting to process %s" %(rootName))
if os.path.exists(OUTPATH):
    if os.path.islink(OUTPATH):
        pass
    elif os.path.isdir(OUTPATH):
        pass
    else:
        print ("%s exists but is not a directory or sym link, check your directory/link and try again" % (OUTPATH))
        sys.exit(2)
else:
    print("Output path not found, please make a sym link or directory called OUTPUT in UTIL_PION to store output")
    sys.exit(3)
if os.path.isfile(rootName):
    print ("%s exists, processing" % (rootName))
else:
    print ("%s not found - do you have the correct sym link/folder set up?" % (rootName))
    sys.exit(4)
print("Output path checks out, outputting to %s" % (OUTPATH))

###############################################################################################################################################
ROOT.gROOT.SetBatch(ROOT.kTRUE) # Set ROOT to batch mode explicitly, does not splash anything to screen
###############################################################################################################################################

# Section for grabing Prompt/Random selection parameters from PARAM file
PARAMPATH = "%s/UTIL_PION/DB/PARAM" % REPLAYPATH
print("Running as %s on %s, hallc_replay_lt path assumed as %s" % (USER[1], HOST[1], REPLAYPATH))
TimingCutFile = "%s/Timing_Parameters.csv" % PARAMPATH # This should match the param file actually being used!
TimingCutf = open(TimingCutFile)
try:
    TimingCutFile
except NameError:
    print("!!!!! ERRROR !!!!!\n One (or more) of the cut files not found!\n!!!!! ERRORR !!!!!")
    sys.exit(2)
print("Reading timing cuts from %s" % TimingCutFile)
PromptWindow = [0, 0]
RandomWindows = [0, 0, 0, 0]
linenum = 0 # Count line number we're on
TempPar = -1 # To check later
for line in TimingCutf: # Read all lines in the cut file
    linenum += 1 # Add one to line number at start of loop
    if(linenum > 1): # Skip first line
        line = line.partition('#')[0] # Treat anything after a # as a comment and ignore it
        line = line.rstrip()
        array = line.split(",") # Convert line into an array, anything after a comma is a new entry 
        if(int(runNum) in range (int(array[0]), int(array[1])+1)): # Check if run number for file is within any of the ranges specified in the cut file
            TempPar += 2 # If run number is in range, set to non -1 value
            BunchSpacing = float(array[2])
            CoinOffset = float(array[3]) # Coin offset value
            nSkip = float(array[4]) # Number of random windows skipped 
            nWindows = float(array[5]) # Total number of random windows
            PromptPeak = float(array[6]) # Pion CT prompt peak positon 
TimingCutf.close() # After scanning all lines in file, close file

if(TempPar == -1): # If value is still -1, run number provided din't match any ranges specified so exit 
    print("!!!!! ERROR !!!!!\n Run number specified does not fall within a set of runs for which cuts are defined in %s\n!!!!! ERROR !!!!!" % TimingCutFile)
    sys.exit(3)
elif(TempPar > 1):
    print("!!! WARNING!!! Run number was found within the range of two (or more) line entries of %s !!! WARNING !!!" % TimingCutFile)
    print("The last matching entry will be treated as the input, you should ensure this is what you want")

# From our values from the file, reconstruct our windows 
PromptWindow[0] = PromptPeak - (BunchSpacing/2) - CoinOffset
PromptWindow[1] = PromptPeak + (BunchSpacing/2) + CoinOffset
RandomWindows[0] = PromptPeak - (BunchSpacing/2) - CoinOffset - (nSkip*BunchSpacing) - ((nWindows/2)*BunchSpacing)
RandomWindows[1] = PromptPeak - (BunchSpacing/2) - CoinOffset - (nSkip*BunchSpacing)
RandomWindows[2] = PromptPeak + (BunchSpacing/2) + CoinOffset + (nSkip*BunchSpacing)
RandomWindows[3] = PromptPeak + (BunchSpacing/2) + CoinOffset + (nSkip*BunchSpacing) + ((nWindows/2)*BunchSpacing)

###############################################################################################################################################

# Read stuff from the main event tree
infile = ROOT.TFile.Open(rootName, "READ")
Uncut_Pion_Events_tree = infile.Get("Uncut_Pion_Events")
Cut_Pion_Events_All_tree = infile.Get("Cut_Pion_Events_All")
Cut_Pion_Events_Prompt_tree = infile.Get("Cut_Pion_Events_Prompt")
Cut_Pion_Events_Random_tree = infile.Get("Cut_Pion_Events_Random")

Uncut_Kaon_Events_tree = infile.Get("Uncut_Kaon_Events")
Cut_Kaon_Events_All_tree = infile.Get("Cut_Kaon_Events_All")
Cut_Kaon_Events_Prompt_tree = infile.Get("Cut_Kaon_Events_Prompt")
Cut_Kaon_Events_Random_tree = infile.Get("Cut_Kaon_Events_Random")

Uncut_Proton_Events_tree = infile.Get("Uncut_Proton_Events")
Cut_Proton_Events_All_tree = infile.Get("Cut_Proton_Events_All")
Cut_Proton_Events_Prompt_tree = infile.Get("Cut_Proton_Events_Prompt")
Cut_Proton_Events_Random_tree = infile.Get("Cut_Proton_Events_Random")

###############################################################################################################################################

# Defining Histograms for Pions
H_beta_pions_uncut = ROOT.TH1D("H_beta_pions_uncut", "HMS #beta; HMS_gtr_#beta; Counts", 200, 0.5, 1.5)
H_xp_pions_uncut = ROOT.TH1D("H_xp_pions_uncut", "HMS x'; HMS_gtr_xp; Counts", 200, -0.2, 0.2)
H_yp_pions_uncut = ROOT.TH1D("H_yp_pions_uncut", "HMS y'; HMS_gtr_yp; Counts", 200, -0.2, 0.2)
H_dp_pions_uncut = ROOT.TH1D("H_dp_pions_uncut", "HMS #delta; HMS_gtr_dp; Counts", 200, -12, 12)
H_hod_goodscinhit_pions_uncut = ROOT.TH1D("H_hod_goodscinhit_pions_uncut", "HMS hod goodscinhit; HMS_hod_goodscinhi; Counts", 200, 0.7, 1.3)
H_hod_goodstarttime_pions_uncut = ROOT.TH1D("H_hod_goodstarttime_pions_uncut", "HMS hod goodstarttime; HMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
H_cal_etotnorm_pions_uncut = ROOT.TH1D("H_cal_etotnorm_pions_uncut", "HMS cal etotnorm; HMS_cal_etotnorm; Counts", 200, 0.2, 1.8)
H_cal_etottracknorm_pions_uncut = ROOT.TH1D("H_cal_etottracknorm_pions_uncut", "HMS cal etottracknorm; HMS_cal_etottracknorm; Counts", 300, 0.2, 1.8)
H_cer_npe_pions_uncut = ROOT.TH1D("H_cer_npe_pions_uncut", "HMS cer npeSum; HMS_cer_npeSum; Counts", 200, 0, 50)
H_RFTime_pions_uncut = ROOT.TH1D("H_RFTime_pions_uncut", "HMS RFTime; HMS_RFTime; Counts", 200, 0, 4)
P_beta_pions_uncut = ROOT.TH1D("P_beta_pions_uncut", "SHMS #beta; SHMS_gtr_#beta; Counts", 200, 0.5, 1.5)
P_xp_pions_uncut = ROOT.TH1D("P_xp_pions_uncut", "SHMS x'; SHMS_gtr_xp; Counts", 200, -0.2, 0.2)
P_yp_pions_uncut = ROOT.TH1D("P_yp_pions_uncut", "SHMS y'; SHMS_gtr_yp; Counts", 200, -0.2, 0.2)
P_dp_pions_uncut = ROOT.TH1D("P_dp_pions_uncut", "SHMS #delta; SHMS_gtr_dp; Counts", 200, -30, 30)
P_p_pions_uncut = ROOT.TH1D("P_p_pions_uncut", "SHMS p; SHMS_gtr_p; Counts", 200, 4, 8)
P_hod_goodscinhit_pions_uncut = ROOT.TH1D("P_hod_goodscinhit_pions_uncut", "SHMS hod goodscinhit; SHMS_hod_goodscinhit; Counts", 200, 0.7, 1.3)
P_hod_goodstarttime_pions_uncut = ROOT.TH1D("P_hod_goodstarttime_pions_uncut", "SHMS hod goodstarttime; SHMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
P_cal_etotnorm_pions_uncut = ROOT.TH1D("P_cal_etotnorm_pions_uncut", "SHMS cal etotnorm; SHMS_cal_etotnorm; Counts", 200, 0, 1)
P_cal_etottracknorm_pions_uncut = ROOT.TH1D("P_cal_etottracknorm_pions_uncut", "SHMS cal etottracknorm; SHMS_cal_etottracknorm; Counts", 200, 0, 1.6)
P_hgcer_npe_pions_uncut = ROOT.TH1D("P_hgcer_npe_pions_uncut", "SHMS HGC npeSum; SHMS_hgcer_npeSum; Counts", 200, 0, 50)
P_xhgcer_pions_uncut = ROOT.TH1D("P_xhgcer_pions_uncut", "SHMS HGC xAtCer; SHMS_hgcer_xAtCer; Counts", 200, -60, 60)
P_yhgcer_pions_uncut = ROOT.TH1D("P_yhgcer_pions_uncut", "SHMS HGC yAtCer; SHMS_hgcer_yAtCer; Counts", 200, -50, 50)
P_aero_npe_pions_uncut = ROOT.TH1D("P_aero_npe_pions_uncut", "SHMS aero npeSum; SHMS_aero_npeSum; Counts", 200, 0, 50)
P_xaero_pions_uncut = ROOT.TH1D("P_xacero_pions_uncut", "SHMS aero xAtAero; SHMS_aero_xAtAero; Counts", 200, -60, 60)
P_yaero_pions_uncut = ROOT.TH1D("P_yaero_pions_uncut", "SHMS aero yAtAero; SHMS_aero_yAtAero; Counts", 200, -50, 50)
P_ngcer_npe_pions_uncut = ROOT.TH1D("P_ngcer_npe_pions_uncut", "SHMS NGC npeSum; SHMS_ngcer_npeSum; Counts", 200, 0, 50)
P_xngcer_pions_uncut = ROOT.TH1D("P_xngcer_pions_uncut", "SHMS NGC xAtCer; SHMS_ngcer_xAtCer; Counts", 200, -70, 50)
P_yngcer_pions_uncut = ROOT.TH1D("P_yngcer_pions_uncut", "SHMS NGC yAtCer; SHMS_ngcer_yAtCer; Counts", 200, -50, 50)
P_MMpi_pions_uncut = ROOT.TH1D("P_MMpi_pions_uncut", "MIssing Mass (no cuts); MM_{#pi}; Counts", 200, 0.5, 1.8)
P_RFTime_pions_uncut = ROOT.TH1D("P_RFTime_pions_uncut", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
ePiCoinTime_pions_uncut = ROOT.TH1D("ePiCoinTime_pions_uncut", "Electron-Pion CTime (no cuts); e #pi Coin_Time; Counts", 200, -50, 50)
Q2_pions_uncut = ROOT.TH1D("Q2_pions_uncut", "Q2; Q2; Counts", 200, 0, 6)
W_pions_uncut = ROOT.TH1D("W_pions_uncut", "W; W; Counts", 200, 2, 4)
epsilon_pions_uncut = ROOT.TH1D("epsilon_pions_uncut", "epsilon; epsilon; Counts", 200, 0, 1.0)
phiq_pions_uncut = ROOT.TH1D("phiq_pions_uncut", "phiq; #phi; Counts", 200, -10, 10)
# SJDK 09/10/21 - Iassume this is mandelstam t?
t_pions_uncut = ROOT.TH1D("t_pions_uncut", "t; t; Counts", 200, -1.5, 1)

H_beta_pions_cut = ROOT.TH1D("H_beta_pions_cut", "HMS #beta; HMS_gtr_#beta; Counts", 200, 0.5, 1.5)
H_xp_pions_cut = ROOT.TH1D("H_xp_pions_cut", "HMS x'; HMS_gtr_xp; Counts", 200, -0.2, 0.2)
H_yp_pions_cut = ROOT.TH1D("H_yp_pions_cut", "HMS y'; HMS_gtr_yp; Counts", 200, -0.2, 0.2)
H_dp_pions_cut = ROOT.TH1D("H_dp_pions_cut", "HMS #delta; HMS_gtr_dp; Counts", 200, -12, 12)
H_hod_goodscinhit_pions_cut = ROOT.TH1D("H_hod_goodscinhit_pions_cut", "HMS hod goodscinhit; HMS_hod_goodscinhit; Counts", 200, 0.7, 1.3)
H_hod_goodstarttime_pions_cut = ROOT.TH1D("H_hod_goodstarttime_pions_cut", "HMS hod goodstarttime; HMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
H_cal_etotnorm_pions_cut = ROOT.TH1D("H_cal_etotnorm_pions_cut", "HMS cal etotnorm; HMS_cal_etotnorm; Counts", 200, 0.6, 1.4)
H_cal_etottracknorm_pions_cut = ROOT.TH1D("H_cal_etottracknorm_pions_cut", "HMS cal etottracknorm; HMS_cal_etottracknorm; Counts", 200, 0.6, 1.4)
H_cer_npe_pions_cut = ROOT.TH1D("H_cer_npe_pions_cut", "HMS cer npeSum; HMS_cer_npeSum; Counts", 200, 0, 50)
H_RFTime_pions_cut = ROOT.TH1D("H_RFTime_pions_cut", "HMS RFTime; HMS_RFTime; Counts", 200, 0, 4)
P_beta_pions_cut = ROOT.TH1D("P_beta_pions_cut", "SHMS #beta; SHMS_gtr_#beta; Counts", 200, 0.5, 1.5)
P_xp_pions_cut = ROOT.TH1D("P_xp_pions_cut", "SHMS x'; SHMS_gtr_xp; Counts", 200, -0.2, 0.2)
P_yp_pions_cut = ROOT.TH1D("P_yp_pions_cut", "SHMS y'; SHMS_gtr_yp; Counts", 200, -0.2, 0.2)
P_dp_pions_cut = ROOT.TH1D("P_dp_pions_cut", "SHMS #delta; SHMS_gtr_dp; Counts", 200, -15, 15)
P_p_pions_cut = ROOT.TH1D("P_p_pions_cut", "SHMS p; SHMS_gtr_p; Counts", 200, 4, 8)
P_hod_goodscinhit_pions_cut = ROOT.TH1D("P_hod_goodscinhit_pions_cut", "SHMS hod goodscinhit; SHMS_hod_goodscinhit; Counts", 200, 0.7, 1.3)
P_hod_goodstarttime_pions_cut = ROOT.TH1D("P_hod_goodstarttime_pions_cut", "SHMS hod goodstarttime; SHMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
P_cal_etotnorm_pions_cut = ROOT.TH1D("P_cal_etotnorm_pions_cut", "SHMS cal etotnorm; SHMS_cal_etotnorm; Counts", 200, 0, 1.2)
P_cal_etottracknorm_pions_cut = ROOT.TH1D("P_cal_etottracknorm_pions_cut", "SHMS cal etottracknorm; SHMS_cal_etottracknorm; Counts", 200, 0, 1.6)
P_hgcer_npe_pions_cut = ROOT.TH1D("P_hgcer_npe_pions_cut", "SHMS HGC npeSum; SHMS_hgcer_npeSum; Counts", 200, 0, 50)
P_xhgcer_pions_cut = ROOT.TH1D("P_xhgcer_pions_cut", "SHMS HGC xAtCer; SHMS_hgcer_xAtCer; Counts", 200, -40, 30)
P_yhgcer_pions_cut = ROOT.TH1D("P_yhgcer_pions_cut", "SHMS HGC yAtCer; SHMS_hgcer_yAtCer; Counts", 200, -30, 30)
P_aero_npe_pions_cut = ROOT.TH1D("P_aero_npe_pions_cut", "SHMS aero npeSum; SHMS_aero_npeSum; Counts", 200, 0, 50)
P_xaero_pions_cut = ROOT.TH1D("P_xaero_pions_cut", "SHMS aero xAtAero; SHMS_aero_xAtAero; Counts", 200, -40, 30)
P_yaero_pions_cut = ROOT.TH1D("P_yaero_pions_cut", "SHMS aero yAtAero; SHMS_aero_yAtAero; Counts", 200, -30, 30)
P_ngcer_npe_pions_cut = ROOT.TH1D("P_ngcer_npe_pions_cut", "SHMS NGC npeSum; SHMS_ngcer_npeSum; Counts", 200, 0, 50)
P_xngcer_pions_cut = ROOT.TH1D("P_xngcer_pions_cut", "SHMS NGC xAtCer; SHMS_ngcer_xAtCer; Counts", 200, -40, 30)
P_yngcer_pions_cut = ROOT.TH1D("P_yngcer_pions_cut", "SHMS NGC yAtCer; SHMS_ngcer_yAtCer; Counts", 200, -30, 30)
P_MMpi_pions_cut = ROOT.TH1D("P_MMpi_pions_cut", "Missing Mass (with cuts); MM_{#pi}; Counts", 200, 0.5, 1.8)
P_RFTime_pions_cut = ROOT.TH1D("P_RFTime_pions_cut", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
ePiCoinTime_pions_cut = ROOT.TH1D("ePiCoinTime_pions_cut", "Electron-Pion CTime (with cuts); e #pi Coin_Time; Counts", 200, -50, 50)
Q2_pions_cut = ROOT.TH1D("Q2_pions_cut", "Q2; Q2; Counts", 200, 2, 4)
W_pions_cut = ROOT.TH1D("W_pions_cut", "W; W; Counts", 200, 2.2, 4)
epsilon_pions_cut = ROOT.TH1D("epsilon_pions_cut", "epsilon; epsilon; Counts", 200, 0, 1.0)
phiq_pions_cut = ROOT.TH1D("phiq_pions_cut", "phiq; #phi; Counts", 200, -10, 10)
t_pions_cut = ROOT.TH1D("t_pions_cut", "t; t; Counts", 200, -1, 0.5)

P_beta_pions_cut_prompt = ROOT.TH1D("P_beta_pions_cut_prompt", "SHMS beta; SHMS_#beta; Counts", 200, 0.8, 1.2)
P_RFTime_pions_cut_prompt = ROOT.TH1D("P_RFTime_pions_cut_prompt", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
ePiCoinTime_pions_cut_prompt = ROOT.TH1D("ePiCoinTime_pions_cut_prompt", "Electron-Pion CTime; e #pi Coin_Time; Counts", 8, -2, 2)
P_MMpi_pions_cut_prompt = ROOT.TH1D("P_MMpi_pions_cut_prompt", "Missing Mass; MM_{#pi}; Counts", 200, 0.5, 1.8)

P_beta_pions_cut_randm = ROOT.TH1D("P_beta_pions_cut_randm", "SHMS beta; SHMS_#beta; Counts", 200, 0.8, 1.2)
P_RFTime_pions_cut_randm = ROOT.TH1D("P_RFTime_pions_cut_randm", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
ePiCoinTime_pions_cut_randm = ROOT.TH1D("ePiCoinTime_pions_cut_randm", "Electron-Pion CTime; e #pi Coin_Time; Counts", 160, -40, 40)
P_MMpi_pions_cut_randm = ROOT.TH1D("P_MMpi_pions_cut_randm", "Missing Mass; MM_{#pi}; Counts", 200, 0.5, 1.8)

P_MMpi_pions_cut_randm_scaled = ROOT.TH1D("P_MMpi_pions_cut_randm_scaled", "Missing Mass; MM_{#pi}; Counts", 200, 0.5, 1.8)
P_MMpi_pions_cut_randm_sub = ROOT.TH1D("P_MMpi_pions_cut_randm_sub", "Missing Mass Rndm Sub; MM_{#pi}; Counts", 200, 0.5, 1.8)

###################################################################################################################################################

# Defining Histograms for Kaons
H_beta_kaons_uncut = ROOT.TH1D("H_beta_kaons_uncut", "HMS #beta; HMS_gtr_#beta; Counts", 200, 0.5, 1.5)
H_xp_kaons_uncut = ROOT.TH1D("H_xp_kaons_uncut", "HMS x'; HMS_gtr_xp; Counts", 200, -0.2, 0.2)
H_yp_kaons_uncut = ROOT.TH1D("H_yp_kaons_uncut", "HMS y'; HMS_gtr_yp; Counts", 200, -0.2, 0.2)
H_dp_kaons_uncut = ROOT.TH1D("H_dp_kaons_uncut", "HMS #delta; HMS_gtr_dp; Counts", 200, -12, 12)
H_hod_goodscinhit_kaons_uncut = ROOT.TH1D("H_hod_goodscinhit_kaons_uncut", "HMS hod goodscinhit; HMS_hod_goodscinhi; Counts", 200, 0.7, 1.3)
H_hod_goodstarttime_kaons_uncut = ROOT.TH1D("H_hod_goodstarttime_kaons_uncut", "HMS hod goodstarttime; HMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
H_cal_etotnorm_kaons_uncut = ROOT.TH1D("H_cal_etotnorm_kaons_uncut", "HMS cal etotnorm; HMS_cal_etotnorm; Counts", 200, 0.2, 1.8)
H_cal_etottracknorm_kaons_uncut = ROOT.TH1D("H_cal_etottracknorm_kaons_uncut", "HMS cal etottracknorm; HMS_cal_etottracknorm; Counts", 300, 0.2, 1.8)
H_cer_npe_kaons_uncut = ROOT.TH1D("H_cer_npe_kaons_uncut", "HMS cer npeSum; HMS_cer_npeSum; Counts", 200, 0, 50)
H_RFTime_kaons_uncut = ROOT.TH1D("H_RFTime_kaons_uncut", "HMS RFTime; HMS_RFTime; Counts", 200, 0, 4)
P_beta_kaons_uncut = ROOT.TH1D("P_beta_kaons_uncut", "SHMS #beta; SHMS_gtr_#beta; Counts", 200, 0.5, 1.5)
P_xp_kaons_uncut = ROOT.TH1D("P_xp_kaons_uncut", "SHMS x'; SHMS_gtr_xp; Counts", 200, -0.2, 0.2)
P_yp_kaons_uncut = ROOT.TH1D("P_yp_kaons_uncut", "SHMS y'; SHMS_gtr_yp; Counts", 200, -0.2, 0.2)
P_dp_kaons_uncut = ROOT.TH1D("P_dp_kaons_uncut", "SHMS #delta; SHMS_gtr_dp; Counts", 200, -30, 30)
P_p_kaons_uncut = ROOT.TH1D("P_p_kaons_uncut", "SHMS p; SHMS_gtr_p; Counts", 200, 4, 8)
P_hod_goodscinhit_kaons_uncut = ROOT.TH1D("P_hod_goodscinhit_kaons_uncut", "SHMS hod goodscinhit; SHMS_hod_goodscinhit; Counts", 200, 0.7, 1.3)
P_hod_goodstarttime_kaons_uncut = ROOT.TH1D("P_hod_goodstarttime_kaons_uncut", "SHMS hod goodstarttime; SHMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
P_cal_etotnorm_kaons_uncut = ROOT.TH1D("P_cal_etotnorm_kaons_uncut", "SHMS cal etotnorm; SHMS_cal_etotnorm; Counts", 200, 0, 1)
P_cal_etottracknorm_kaons_uncut = ROOT.TH1D("P_cal_etottracknorm_kaons_uncut", "SHMS cal etottracknorm; SHMS_cal_etottracknorm; Counts", 200, 0, 1.6)
P_hgcer_npe_kaons_uncut = ROOT.TH1D("P_hgcer_npe_kaons_uncut", "SHMS HGC npeSum; SHMS_hgcer_npeSum; Counts", 200, 0, 50)
P_xhgcer_kaons_uncut = ROOT.TH1D("P_xhgcer_kaons_uncut", "SHMS HGC xAtCer; SHMS_hgcer_xAtCer; Counts", 200, -60, 60)
P_yhgcer_kaons_uncut = ROOT.TH1D("P_yhgcer_kaons_uncut", "SHMS HGC yAtCer; SHMS_hgcer_yAtCer; Counts", 200, -50, 50)
P_aero_npe_kaons_uncut = ROOT.TH1D("P_aero_npe_kaons_uncut", "SHMS aero npeSum; SHMS_aero_npeSum; Counts", 200, 0, 50)
P_xaero_kaons_uncut = ROOT.TH1D("P_xacero_kaons_uncut", "SHMS aero xAtAero; SHMS_aero_xAtAero; Counts", 200, -60, 60)
P_yaero_kaons_uncut = ROOT.TH1D("P_yaero_kaons_uncut", "SHMS aero yAtAero; SHMS_aero_yAtAero; Counts", 200, -50, 50)
P_ngcer_npe_kaons_uncut = ROOT.TH1D("P_ngcer_npe_kaons_uncut", "SHMS NGC npeSum; SHMS_ngcer_npeSum; Counts", 200, 0, 50)
P_xngcer_kaons_uncut = ROOT.TH1D("P_xngcer_kaons_uncut", "SHMS NGC xAtCer; SHMS_ngcer_xAtCer; Counts", 200, -70, 50)
P_yngcer_kaons_uncut = ROOT.TH1D("P_yngcer_kaons_uncut", "SHMS NGC yAtCer; SHMS_ngcer_yAtCer; Counts", 200, -50, 50)
P_MMK_kaons_uncut = ROOT.TH1D("P_MMK_kaons_uncut", "MIssing Mass (no cuts); MM_{K}; Counts", 200, 0.5, 1.8)
P_RFTime_kaons_uncut = ROOT.TH1D("P_RFTime_kaons_uncut", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
eKCoinTime_kaons_uncut = ROOT.TH1D("eKCoinTime_kaons_uncut", "Electron-kaon CTime (no cuts); e K Coin_Time; Counts", 200, -50, 50)
Q2_kaons_uncut = ROOT.TH1D("Q2_kaons_uncut", "Q2; Q2; Counts", 200, 0, 6)
W_kaons_uncut = ROOT.TH1D("W_kaons_uncut", "W; W; Counts", 200, 2, 4)
epsilon_kaons_uncut = ROOT.TH1D("epsilon_kaons_uncut", "epsilon; epsilon; Counts", 200, 0, 1.0)
phiq_kaons_uncut = ROOT.TH1D("phiq_kaons_uncut", "phiq; #phi; Counts", 200, -10, 10)
t_kaons_uncut = ROOT.TH1D("t_kaons_uncut", "t; t; Counts", 200, -1.5, 1)

H_beta_kaons_cut = ROOT.TH1D("H_beta_kaons_cut", "HMS #beta; HMS_gtr_#beta; Counts", 200, 0.5, 1.5)
H_xp_kaons_cut = ROOT.TH1D("H_xp_kaons_cut", "HMS x'; HMS_gtr_xp; Counts", 200, -0.2, 0.2)
H_yp_kaons_cut = ROOT.TH1D("H_yp_kaons_cut", "HMS y'; HMS_gtr_yp; Counts", 200, -0.2, 0.2)
H_dp_kaons_cut = ROOT.TH1D("H_dp_kaons_cut", "HMS #delta; HMS_gtr_dp; Counts", 200, -12, 12)
H_hod_goodscinhit_kaons_cut = ROOT.TH1D("H_hod_goodscinhit_kaons_cut", "HMS hod goodscinhit; HMS_hod_goodscinhit; Counts", 200, 0.7, 1.3)
H_hod_goodstarttime_kaons_cut = ROOT.TH1D("H_hod_goodstarttime_kaons_cut", "HMS hod goodstarttime; HMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
H_cal_etotnorm_kaons_cut = ROOT.TH1D("H_cal_etotnorm_kaons_cut", "HMS cal etotnorm; HMS_cal_etotnorm; Counts", 200, 0.6, 1.4)
H_cal_etottracknorm_kaons_cut = ROOT.TH1D("H_cal_etottracknorm_kaons_cut", "HMS cal etottracknorm; HMS_cal_etottracknorm; Counts", 200, 0.6, 1.4)
H_cer_npe_kaons_cut = ROOT.TH1D("H_cer_npe_kaons_cut", "HMS cer npeSum; HMS_cer_npeSum; Counts", 200, 0, 50)
H_RFTime_kaons_cut = ROOT.TH1D("H_RFTime_kaons_cut", "HMS RFTime; HMS_RFTime; Counts", 200, 0, 4)
P_beta_kaons_cut = ROOT.TH1D("P_beta_kaons_cut", "SHMS #beta; SHMS_gtr_#beta; Counts", 200, 0.5, 1.5)
P_xp_kaons_cut = ROOT.TH1D("P_xp_kaons_cut", "SHMS x'; SHMS_gtr_xp; Counts", 200, -0.2, 0.2)
P_yp_kaons_cut = ROOT.TH1D("P_yp_kaons_cut", "SHMS y'; SHMS_gtr_yp; Counts", 200, -0.2, 0.2)
P_dp_kaons_cut = ROOT.TH1D("P_dp_kaons_cut", "SHMS #delta; SHMS_gtr_dp; Counts", 200, -15, 15)
P_p_kaons_cut = ROOT.TH1D("P_p_kaons_cut", "SHMS p; SHMS_gtr_p; Counts", 200, 4, 8)
P_hod_goodscinhit_kaons_cut = ROOT.TH1D("P_hod_goodscinhit_kaons_cut", "SHMS hod goodscinhit; SHMS_hod_goodscinhit; Counts", 200, 0.7, 1.3)
P_hod_goodstarttime_kaons_cut = ROOT.TH1D("P_hod_goodstarttime_kaons_cut", "SHMS hod goodstarttime; SHMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
P_cal_etotnorm_kaons_cut = ROOT.TH1D("P_cal_etotnorm_kaons_cut", "SHMS cal etotnorm; SHMS_cal_etotnorm; Counts", 200, 0, 1.2)
P_cal_etottracknorm_kaons_cut = ROOT.TH1D("P_cal_etottracknorm_kaons_cut", "SHMS cal etottracknorm; SHMS_cal_etottracknorm; Counts", 200, 0, 1.6)
P_hgcer_npe_kaons_cut = ROOT.TH1D("P_hgcer_npe_kaons_cut", "SHMS HGC npeSum; SHMS_hgcer_npeSum; Counts", 200, 0, 50)
P_xhgcer_kaons_cut = ROOT.TH1D("P_xhgcer_kaons_cut", "SHMS HGC xAtCer; SHMS_hgcer_xAtCer; Counts", 200, -40, 30)
P_yhgcer_kaons_cut = ROOT.TH1D("P_yhgcer_kaons_cut", "SHMS HGC yAtCer; SHMS_hgcer_yAtCer; Counts", 200, -30, 30)
P_aero_npe_kaons_cut = ROOT.TH1D("P_aero_npe_kaons_cut", "SHMS aero npeSum; SHMS_aero_npeSum; Counts", 200, 0, 50)
P_xaero_kaons_cut = ROOT.TH1D("P_xaero_kaons_cut", "SHMS aero xAtAero; SHMS_aero_xAtAero; Counts", 200, -40, 30)
P_yaero_kaons_cut = ROOT.TH1D("P_yaero_kaons_cut", "SHMS aero yAtAero; SHMS_aero_yAtAero; Counts", 200, -30, 30)
P_ngcer_npe_kaons_cut = ROOT.TH1D("P_ngcer_npe_kaons_cut", "SHMS NGC npeSum; SHMS_ngcer_npeSum; Counts", 200, 0, 50)
P_xngcer_kaons_cut = ROOT.TH1D("P_xngcer_kaons_cut", "SHMS NGC xAtCer; SHMS_ngcer_xAtCer; Counts", 200, -40, 30)
P_yngcer_kaons_cut = ROOT.TH1D("P_yngcer_kaons_cut", "SHMS NGC yAtCer; SHMS_ngcer_yAtCer; Counts", 200, -30, 30)
P_MMK_kaons_cut = ROOT.TH1D("P_MMK_kaons_cut", "Missing Mass (with cuts); MM_{K}; Counts", 200, 0.5, 1.8)
P_RFTime_kaons_cut = ROOT.TH1D("P_RFTime_kaons_cut", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
eKCoinTime_kaons_cut = ROOT.TH1D("eKCoinTime_kaons_cut", "Electron-Kaon CTime (with cuts); e K Coin_Time; Counts", 200, -50, 50)
Q2_kaons_cut = ROOT.TH1D("Q2_kaons_cut", "Q2; Q2; Counts", 200, 2, 4)
W_kaons_cut = ROOT.TH1D("W_kaons_cut", "W; W; Counts", 200, 2.2, 4)
epsilon_kaons_cut = ROOT.TH1D("epsilon_kaons_cut", "epsilon; epsilon; Counts", 200, 0, 1.0)
phiq_kaons_cut = ROOT.TH1D("phiq_kaons_cut", "phiq; #phi; Counts", 200, -10, 10)
t_kaons_cut = ROOT.TH1D("t_kaons_cut", "t; t; Counts", 200, -1, 0.5)

P_beta_kaons_cut_prompt = ROOT.TH1D("P_beta_kaons_cut_prompt", "SHMS beta; SHMS_#beta; Counts", 200, 0.8, 1.2)
P_RFTime_kaons_cut_prompt = ROOT.TH1D("P_RFTime_kaons_cut_prompt", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
eKCoinTime_kaons_cut_prompt = ROOT.TH1D("eKCoinTime_kaons_cut_prompt", "Electron-Kaon CTime; e K Coin_Time; Counts", 8, -2, 2)
P_MMK_kaons_cut_prompt = ROOT.TH1D("P_MMK_kaons_cut_prompt", "Missing Mass; MM_{K}; Counts", 200, 0.5, 1.8)

P_beta_kaons_cut_randm = ROOT.TH1D("P_beta_kaons_cut_randm", "SHMS beta; SHMS_#beta; Counts", 200, 0.8, 1.2)
P_RFTime_kaons_cut_randm = ROOT.TH1D("P_RFTime_kaons_cut_randm", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
eKCoinTime_kaons_cut_randm = ROOT.TH1D("eKCoinTime_kaons_cut_randm", "Electron-Kaon CTime; e K Coin_Time; Counts", 160, -40, 40)
P_MMK_kaons_cut_randm = ROOT.TH1D("P_MMK_kaons_cut_randm", "Missing Mass; MM_{K}; Counts", 200, 0.5, 1.8)

P_MMK_kaons_cut_randm_scaled = ROOT.TH1D("P_MMK_kaons_cut_randm_scaled", "Missing Mass; MM_{K}; Counts", 200, 0.5, 1.8)
P_MMK_kaons_cut_randm_sub = ROOT.TH1D("P_MMK_kaons_cut_randm_sub", "Missing Mass Rndm Sub; MM_{K}; Counts", 200, 0.5, 1.8)

###################################################################################################################################################

# Defining Histograms for Protons
H_beta_protons_uncut = ROOT.TH1D("H_beta_protons_uncut", "HMS #beta; HMS_gtr_#beta; Counts", 200, 0.5, 1.5)
H_xp_protons_uncut = ROOT.TH1D("H_xp_protons_uncut", "HMS x'; HMS_gtr_xp; Counts", 200, -0.2, 0.2)
H_yp_protons_uncut = ROOT.TH1D("H_yp_protons_uncut", "HMS y'; HMS_gtr_yp; Counts", 200, -0.2, 0.2)
H_dp_protons_uncut = ROOT.TH1D("H_dp_protons_uncut", "HMS #delta; HMS_gtr_dp; Counts", 200, -12, 12)
H_hod_goodscinhit_protons_uncut = ROOT.TH1D("H_hod_goodscinhit_protons_uncut", "HMS hod goodscinhit; HMS_hod_goodscinhi; Counts", 200, 0.7, 1.3)
H_hod_goodstarttime_protons_uncut = ROOT.TH1D("H_hod_goodstarttime_protons_uncut", "HMS hod goodstarttime; HMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
H_cal_etotnorm_protons_uncut = ROOT.TH1D("H_cal_etotnorm_protons_uncut", "HMS cal etotnorm; HMS_cal_etotnorm; Counts", 200, 0.2, 1.8)
H_cal_etottracknorm_protons_uncut = ROOT.TH1D("H_cal_etottracknorm_protons_uncut", "HMS cal etottracknorm; HMS_cal_etottracknorm; Counts", 300, 0.2, 1.8)
H_cer_npe_protons_uncut = ROOT.TH1D("H_cer_npe_protons_uncut", "HMS cer npeSum; HMS_cer_npeSum; Counts", 200, 0, 50)
H_RFTime_protons_uncut = ROOT.TH1D("H_RFTime_protons_uncut", "HMS RFTime; HMS_RFTime; Counts", 200, 0, 4)
P_beta_protons_uncut = ROOT.TH1D("P_beta_protons_uncut", "SHMS #beta; SHMS_gtr_#beta; Counts", 200, 0.5, 1.5)
P_xp_protons_uncut = ROOT.TH1D("P_xp_protons_uncut", "SHMS x'; SHMS_gtr_xp; Counts", 200, -0.2, 0.2)
P_yp_protons_uncut = ROOT.TH1D("P_yp_protons_uncut", "SHMS y'; SHMS_gtr_yp; Counts", 200, -0.2, 0.2)
P_dp_protons_uncut = ROOT.TH1D("P_dp_protons_uncut", "SHMS #delta; SHMS_gtr_dp; Counts", 200, -30, 30)
P_p_protons_uncut = ROOT.TH1D("P_p_protons_uncut", "SHMS p; SHMS_gtr_p; Counts", 200, 4, 8)
P_hod_goodscinhit_protons_uncut = ROOT.TH1D("P_hod_goodscinhit_protons_uncut", "SHMS hod goodscinhit; SHMS_hod_goodscinhit; Counts", 200, 0.7, 1.3)
P_hod_goodstarttime_protons_uncut = ROOT.TH1D("P_hod_goodstarttime_protons_uncut", "SHMS hod goodstarttime; SHMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
P_cal_etotnorm_protons_uncut = ROOT.TH1D("P_cal_etotnorm_protons_uncut", "SHMS cal etotnorm; SHMS_cal_etotnorm; Counts", 200, 0, 1)
P_cal_etottracknorm_protons_uncut = ROOT.TH1D("P_cal_etottracknorm_protons_uncut", "SHMS cal etottracknorm; SHMS_cal_etottracknorm; Counts", 200, 0, 1.6)
P_hgcer_npe_protons_uncut = ROOT.TH1D("P_hgcer_npe_protons_uncut", "SHMS HGC npeSum; SHMS_hgcer_npeSum; Counts", 200, 0, 50)
P_xhgcer_protons_uncut = ROOT.TH1D("P_xhgcer_protons_uncut", "SHMS HGC xAtCer; SHMS_hgcer_xAtCer; Counts", 200, -60, 60)
P_yhgcer_protons_uncut = ROOT.TH1D("P_yhgcer_protons_uncut", "SHMS HGC yAtCer; SHMS_hgcer_yAtCer; Counts", 200, -50, 50)
P_aero_npe_protons_uncut = ROOT.TH1D("P_aero_npe_protons_uncut", "SHMS aero npeSum; SHMS_aero_npeSum; Counts", 200, 0, 50)
P_xaero_protons_uncut = ROOT.TH1D("P_xacero_protons_uncut", "SHMS aero xAtAero; SHMS_aero_xAtAero; Counts", 200, -60, 60)
P_yaero_protons_uncut = ROOT.TH1D("P_yaero_protons_uncut", "SHMS aero yAtAero; SHMS_aero_yAtAero; Counts", 200, -50, 50)
P_ngcer_npe_protons_uncut = ROOT.TH1D("P_ngcer_npe_protons_uncut", "SHMS NGC npeSum; SHMS_ngcer_npeSum; Counts", 200, 0, 50)
P_xngcer_protons_uncut = ROOT.TH1D("P_xngcer_protons_uncut", "SHMS NGC xAtCer; SHMS_ngcer_xAtCer; Counts", 200, -70, 50)
P_yngcer_protons_uncut = ROOT.TH1D("P_yngcer_protons_uncut", "SHMS NGC yAtCer; SHMS_ngcer_yAtCer; Counts", 200, -50, 50)
P_MMp_protons_uncut = ROOT.TH1D("P_MMp_protons_uncut", "MIssing Mass (no cuts); MM_{p}; Counts", 200, 0.5, 1.8)
P_RFTime_protons_uncut = ROOT.TH1D("P_RFTime_protons_uncut", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
epCoinTime_protons_uncut = ROOT.TH1D("epCoinTime_protons_uncut", "Electron-kaon CTime (no cuts); e p Coin_Time; Counts", 200, -50, 50)
Q2_protons_uncut = ROOT.TH1D("Q2_protons_uncut", "Q2; Q2; Counts", 200, 0, 6)
W_protons_uncut = ROOT.TH1D("W_protons_uncut", "W; W; Counts", 200, 2, 4)
epsilon_protons_uncut = ROOT.TH1D("epsilon_protons_uncut", "epsilon; epsilon; Counts", 200, 0, 1.0)
phiq_protons_uncut = ROOT.TH1D("phiq_protons_uncut", "phiq; #phi; Counts", 200, -10, 10)
#t_protons_uncut = ROOT.TH1D("t_protons_uncut", "t; t; Counts", 200, -1.5, 1)

H_beta_protons_cut = ROOT.TH1D("H_beta_protons_cut", "HMS #beta; HMS_gtr_#beta; Counts", 200, 0.5, 1.5)
H_xp_protons_cut = ROOT.TH1D("H_xp_protons_cut", "HMS x'; HMS_gtr_xp; Counts", 200, -0.2, 0.2)
H_yp_protons_cut = ROOT.TH1D("H_yp_protons_cut", "HMS y'; HMS_gtr_yp; Counts", 200, -0.2, 0.2)
H_dp_protons_cut = ROOT.TH1D("H_dp_protons_cut", "HMS #delta; HMS_gtr_dp; Counts", 200, -12, 12)
H_hod_goodscinhit_protons_cut = ROOT.TH1D("H_hod_goodscinhit_protons_cut", "HMS hod goodscinhit; HMS_hod_goodscinhit; Counts", 200, 0.7, 1.3)
H_hod_goodstarttime_protons_cut = ROOT.TH1D("H_hod_goodstarttime_protons_cut", "HMS hod goodstarttime; HMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
H_cal_etotnorm_protons_cut = ROOT.TH1D("H_cal_etotnorm_protons_cut", "HMS cal etotnorm; HMS_cal_etotnorm; Counts", 200, 0.6, 1.4)
H_cal_etottracknorm_protons_cut = ROOT.TH1D("H_cal_etottracknorm_protons_cut", "HMS cal etottracknorm; HMS_cal_etottracknorm; Counts", 200, 0.6, 1.4)
H_cer_npe_protons_cut = ROOT.TH1D("H_cer_npe_protons_cut", "HMS cer npeSum; HMS_cer_npeSum; Counts", 200, 0, 50)
H_RFTime_protons_cut = ROOT.TH1D("H_RFTime_protons_cut", "HMS RFTime; HMS_RFTime; Counts", 200, 0, 4)
P_beta_protons_cut = ROOT.TH1D("P_beta_protons_cut", "SHMS #beta; SHMS_gtr_#beta; Counts", 200, 0.5, 1.5)
P_xp_protons_cut = ROOT.TH1D("P_xp_protons_cut", "SHMS x'; SHMS_gtr_xp; Counts", 200, -0.2, 0.2)
P_yp_protons_cut = ROOT.TH1D("P_yp_protons_cut", "SHMS y'; SHMS_gtr_yp; Counts", 200, -0.2, 0.2)
P_dp_protons_cut = ROOT.TH1D("P_dp_protons_cut", "SHMS #delta; SHMS_gtr_dp; Counts", 200, -15, 15)
P_p_protons_cut = ROOT.TH1D("P_p_protons_cut", "SHMS p; SHMS_gtr_p; Counts", 200, 4, 8)
P_hod_goodscinhit_protons_cut = ROOT.TH1D("P_hod_goodscinhit_protons_cut", "SHMS hod goodscinhit; SHMS_hod_goodscinhit; Counts", 200, 0.7, 1.3)
P_hod_goodstarttime_protons_cut = ROOT.TH1D("P_hod_goodstarttime_protons_cut", "SHMS hod goodstarttime; SHMS_hod_goodstarttime; Counts", 200, 0.7, 1.3)
P_cal_etotnorm_protons_cut = ROOT.TH1D("P_cal_etotnorm_protons_cut", "SHMS cal etotnorm; SHMS_cal_etotnorm; Counts", 200, 0, 1.2)
P_cal_etottracknorm_protons_cut = ROOT.TH1D("P_cal_etottracknorm_protons_cut", "SHMS cal etottracknorm; SHMS_cal_etottracknorm; Counts", 200, 0, 1.6)
P_hgcer_npe_protons_cut = ROOT.TH1D("P_hgcer_npe_protons_cut", "SHMS HGC npeSum; SHMS_hgcer_npeSum; Counts", 200, 0, 50)
P_xhgcer_protons_cut = ROOT.TH1D("P_xhgcer_protons_cut", "SHMS HGC xAtCer; SHMS_hgcer_xAtCer; Counts", 200, -40, 30)
P_yhgcer_protons_cut = ROOT.TH1D("P_yhgcer_protons_cut", "SHMS HGC yAtCer; SHMS_hgcer_yAtCer; Counts", 200, -30, 30)
P_aero_npe_protons_cut = ROOT.TH1D("P_aero_npe_protons_cut", "SHMS aero npeSum; SHMS_aero_npeSum; Counts", 200, 0, 50)
P_xaero_protons_cut = ROOT.TH1D("P_xaero_protons_cut", "SHMS aero xAtAero; SHMS_aero_xAtAero; Counts", 200, -40, 30)
P_yaero_protons_cut = ROOT.TH1D("P_yaero_protons_cut", "SHMS aero yAtAero; SHMS_aero_yAtAero; Counts", 200, -30, 30)
P_ngcer_npe_protons_cut = ROOT.TH1D("P_ngcer_npe_protons_cut", "SHMS NGC npeSum; SHMS_ngcer_npeSum; Counts", 200, 0, 50)
P_xngcer_protons_cut = ROOT.TH1D("P_xngcer_protons_cut", "SHMS NGC xAtCer; SHMS_ngcer_xAtCer; Counts", 200, -40, 30)
P_yngcer_protons_cut = ROOT.TH1D("P_yngcer_protons_cut", "SHMS NGC yAtCer; SHMS_ngcer_yAtCer; Counts", 200, -30, 30)
P_MMp_protons_cut = ROOT.TH1D("P_MMp_protons_cut", "Missing Mass (with cuts); MM_{p}; Counts", 200, 0.5, 1.8)
P_RFTime_protons_cut = ROOT.TH1D("P_RFTime_protons_cut", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
epCoinTime_protons_cut = ROOT.TH1D("epCoinTime_protons_cut", "Electron-Proton CTime (with cuts); e p Coin_Time; Counts", 200, -50, 50)
Q2_protons_cut = ROOT.TH1D("Q2_protons_cut", "Q2; Q2; Counts", 200, 2, 4)
W_protons_cut = ROOT.TH1D("W_protons_cut", "W; W; Counts", 200, 2.2, 4)
epsilon_protons_cut = ROOT.TH1D("epsilon_protons_cut", "epsilon; epsilon; Counts", 200, 0, 1.0)
phiq_protons_cut = ROOT.TH1D("phiq_protons_cut", "phiq; #phi; Counts", 200, -10, 10)
#t_protons_cut = ROOT.TH1D("t_protons_cut", "t; t; Counts", 200, -1, 0.5)

P_beta_protons_cut_prompt = ROOT.TH1D("P_beta_protons_cut_prompt", "SHMS beta; SHMS_#beta; Counts", 200, 0.8, 1.2)
P_RFTime_protons_cut_prompt = ROOT.TH1D("P_RFTime_protons_cut_prompt", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
epCoinTime_protons_cut_prompt = ROOT.TH1D("epCoinTime_protons_cut_prompt", "Electron-Proton CTime; e p Coin_Time; Counts", 8, -2, 2)
P_MMp_protons_cut_prompt = ROOT.TH1D("P_MMp_protons_cut_prompt", "Missing Mass; MM_{p}; Counts", 200, 0.5, 1.8)

P_beta_protons_cut_randm = ROOT.TH1D("P_beta_protons_cut_randm", "SHMS beta; SHMS_#beta; Counts", 200, 0.8, 1.2)
P_RFTime_protons_cut_randm = ROOT.TH1D("P_RFTime_protons_cut_randm", "SHMS RFTime; SHMS_RFTime; Counts", 200, 0, 4)
epCoinTime_protons_cut_randm = ROOT.TH1D("epCoinTime_protons_cut_randm", "Electron-Proton CTime; e p Coin_Time; Counts", 160, -40, 40)
P_MMp_protons_cut_randm = ROOT.TH1D("P_MMp_protons_cut_randm", "Missing Mass; MM_{p}; Counts", 200, 0.5, 1.8)

P_MMp_protons_cut_randm_scaled = ROOT.TH1D("P_MMp_protons_cut_randm_scaled", "Missing Mass; MM_{p}; Counts", 200, 0.5, 1.8)
P_MMp_protons_cut_randm_sub = ROOT.TH1D("P_MMp_protons_cut_randm_sub", "Missing Mass Rndm Sub; MM_{p}; Counts", 200, 0.5, 1.8)

###################################################################################################################################################

# 2D Histograms for pions
H_cal_etottracknorm_vs_cer_npe_pions_uncut = ROOT.TH2D("H_cal_etottracknorm_vs_cer_npe_pions_uncut","HMS cal etottracknorm vs HMS cer npeSum (no cut); H_cal_etottracknorm; H_cer_npeSum",100, 0, 2, 100, 0, 40)
P_hgcer_vs_aero_npe_pions_uncut = ROOT.TH2D("P_hgcer_vs_aero_npe_pions_uncut", "SHMS HGC npeSum vs SHMS Aero npeSum (no cut); SHMS_hgcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
ePiCoinTime_vs_MMpi_pions_uncut = ROOT.TH2D("ePiCoinTime_vs_MMpi_pions_uncut","Electron-Pion CTime vs Missing Mass (no cut); e #pi Coin_Time; MM_{#pi}", 200, -40, 40, 200, 0, 2)
P_hgcer_yx_pions_uncut = ROOT.TH2D("P_hgcer_yx_pions_uncut", "SHMS HGC yAtCer vs SHMS HGC xAtCer (no cut); SHMS_hgcer_yAtCer; SHMS_hgcer_xAtCer", 100, -50, 50, 100, -50, 50)
P_aero_yx_pions_uncut = ROOT.TH2D("P_aero_yx_pions_uncut", "SHMS aero yAtAero vs SHMS aero xAtAero (no cut); SHMS_aero_yAtAero; SHMS_aero_xAtAero", 100, -50, 50, 100, -50, 50)
ePiCoinTime_vs_beta_pions_uncut = ROOT.TH2D("ePiCoinTime_vs_beta_pions_uncut", "Electron-Pion CTime vs SHMS #beta (no cut); e #pi Coin_Time; SHMS_#beta", 200, -40, 40, 200, 0, 2)
P_RFTime_vs_MMpi_pions_uncut = ROOT.TH2D("P_RFTime_vs_MMpi_pions_uncut", "SHMS RFTime vs Missing Mass (no cuts); SHMS_RFTime_Dist; MM_{#pi}", 100, 0, 4, 100, 0, 2)
P_cal_etottracknorm_vs_ngcer_npe_pions_uncut = ROOT.TH2D("P_cal_etottracknorm_vs_ngcer_npe_pions_uncut", "SHMS cal etottracknorm vs SHMS NGC xAtCer (no cut); SHMS_cal_etottracknorm; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_yx_pions_uncut = ROOT.TH2D("P_ngcer_yx_pions_uncut", "SHMS NGC yAtCer vs SHMS NGC xAtCer (no cut); SHMS_ngcer_yAtCer; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_vs_hgcer_npe_pions_uncut = ROOT.TH2D("P_ngcer_vs_hgcer_npe_pions_uncut", "SHMS NGC npeSum vs SHMS HGC npeSum (no cut); SHMS_ngcer_npeSum; SHMS_hgcer_npeSum", 100, 0, 50, 100, 0, 50)
P_ngcer_vs_aero_npe_pions_uncut = ROOT.TH2D("P_ngcer_vs_aero_npe_pions_uncut", "SHMS NGC npeSum vs SHMS aero npeSum (no cut); SHMS_ngcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
H_dp_vs_beta_pions_uncut = ROOT.TH2D("H_dp_vs_beta_pions_uncut", "HMS #delta vs HMS #beta (no cut); HMS #delta; HMS_#beta", 200, -12, 12, 200, 0, 2)
P_dp_vs_beta_pions_uncut = ROOT.TH2D("P_dp_vs_beta_pions_uncut", "SHMS #delta vs SHMS #beta (no cut); SHMS #delta; HMS_#beta", 200, -12, 12, 200, 0, 2)
H_xfp_vs_beta_pions_uncut = ROOT.TH2D("H_xfp_vs_beta_pions_uncut", "HMS X_{fp} vs HMS #beta (no cut); HMS X_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_xfp_vs_beta_pions_uncut = ROOT.TH2D("P_xfp_vs_beta_pions_uncut", "SHMS X_{fp} vs SHMS #beta (no cut); SHMS X_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_yfp_vs_beta_pions_uncut = ROOT.TH2D("H_yfp_vs_beta_pions_uncut", "HMS Y_{fp} vs HMS #beta (no cut); HMS Y_{fp}; HMS_#beta", 100, -25, 25, 200, 0, 2)
P_yfp_vs_beta_pions_uncut = ROOT.TH2D("P_yfp_vs_beta_pions_uncut", "SHMS Y_{fp} vs SHMS #beta (no cut); SHMS Y_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_xpfp_vs_beta_pions_uncut = ROOT.TH2D("H_xpfp_vs_beta_pions_uncut", "HMS X'_{fp} vs HMS #beta (no cut); HMS X'_{fp}; HMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
P_xpfp_vs_beta_pions_uncut = ROOT.TH2D("P_xpfp_vs_beta_pions_uncut", "SHMS X'_{fp} vs SHMS #beta (no cut); SHMS X'_{fp}; SHMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
H_ypfp_vs_beta_pions_uncut = ROOT.TH2D("H_ypfp_vs_beta_pions_uncut", "HMS Y'_{fp} vs HMS #beta (no cut); HMS Y'_{fp}; HMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
P_ypfp_vs_beta_pions_uncut = ROOT.TH2D("P_ypfp_vs_beta_pions_uncut", "SHMS Y'_{fp} vs SHMS #beta (no cut); SHMS Y'_{fp}; SHMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
P_MMpi_vs_beta_pions_uncut = ROOT.TH2D("P_MMpi_vs_beta_pions_uncut", "Missing Mass vs SHMS #beta (no cut); MM_{#pi}; SHMS_#beta", 100, 0, 2, 200, 0, 2)

H_cal_etottracknorm_vs_cer_npe_pions_cut = ROOT.TH2D("H_cal_etottracknorm_vs_cer_npe_pions_cut","HMS cal etottracknorm vs HMS cer npeSum (with cuts); H_cal_etottracknorm; H_cer_npeSum",100, 0.5, 1.5, 100, 0, 40)
P_hgcer_vs_aero_npe_pions_cut = ROOT.TH2D("P_hgcer_vs_aero_npe_pions_cut", "SHMS HGC npeSum vs SHMS aero npeSum (with cuts); SHMS_hgcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
ePiCoinTime_vs_MMpi_pions_cut = ROOT.TH2D("ePiCoinTime_vs_MMpi_pions_cut","Electron-Pion CTime vs Missing Mass (with PID cuts); e #pi Coin_Time; MM_{#pi}", 100, -2, 2, 100, 0, 2)
P_hgcer_yx_pions_cut = ROOT.TH2D("P_hgcer_yx_pions_cut", "SHMS HGC yAtCer vs SHMS HGC xAtCer (with cuts); SHMS_hgcer_yAtCer; SHMS_hgcer_xAtCer", 100, -50, 50, 100, -50, 50)
P_aero_yx_pions_cut = ROOT.TH2D("P_aero_yx_pions_cut", "SHMS aero yAtAero vs SHMS aero xAtAero (with cuts); SHMS_aero_yAtAero; SHMS_aero_xAtAero", 100, -50, 50, 100, -50, 50)
ePiCoinTime_vs_beta_pions_cut = ROOT.TH2D("ePiCoinTime_vs_beta_pions_cut", "Electron-Pion CTime vs SHMS #beta (with PID cuts); e #pi Coin_Time; SHMS_#beta", 100, -2, 2, 100, 0.6, 1.4)
P_RFTime_vs_MMpi_pions_cut = ROOT.TH2D("P_RFTime_vs_MMpi_pions_cut", "SHMS RFTime vs Missing Mass (with cuts); SHMS_RFTime_Dist; MM_{#pi}", 100, 0, 4, 100, 0, 2)
P_cal_etottracknorm_vs_ngcer_npe_pions_cut = ROOT.TH2D("P_cal_etottracknorm_vs_ngcer_npe_pions_cut", "P cal etottracknorm vs SHMS NGC xAtCer (with cuts); SHMS_cal_etottracknorm; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_yx_pions_cut = ROOT.TH2D("P_ngcer_yx_pions_cut", "SHMS NGC yAtCer vs SHMS NGC xAtCer (with cuts); SHMS_ngcer_yAtCer; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_vs_hgcer_npe_pions_cut = ROOT.TH2D("P_ngcer_vs_hgcer_npe_pions_cut", "SHMS NGC npeSum vs SHMS HGC npeSum (with cuts); SHMS_ngcer_npeSum; SHMS_hgcer_npeSum", 100, 0, 50, 100, 0, 50)
P_ngcer_vs_aero_npe_pions_cut = ROOT.TH2D("P_ngcer_vs_aero_npe_pions_cut", "SHMS NGC npeSum vs SHMS aero npeSum (with cuts); SHMS_ngcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
H_dp_vs_beta_pions_cut = ROOT.TH2D("H_dp_vs_beta_pions_cut", "HMS #delta vs HMS #beta (with cut); HMS #delta; HMS_#beta", 200, -12, 12, 200, 0, 2)
P_dp_vs_beta_pions_cut = ROOT.TH2D("P_dp_vs_beta_pions_cut", "SHMS #delta vs SHMS #beta (with cut); SHMS #delta; SHMS_#beta", 200, -30, 30, 200, 0, 2)
H_xfp_vs_beta_pions_cut = ROOT.TH2D("H_xfp_vs_beta_pions_cut", "HMS X_{fp} vs HMS #beta (with cut); HMS X_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_xfp_vs_beta_pions_cut = ROOT.TH2D("P_xfp_vs_beta_pions_cut", "SHMS X_{fp} vs SHMS #beta (with cut); SHMS X_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_yfp_vs_beta_pions_cut = ROOT.TH2D("H_yfp_vs_beta_pions_cut", "HMS Y_{fp} vs HMS #beta (with cut); HMS Y_{fp}; HMS_#beta", 100, -25, 25, 200, 0, 2)
P_yfp_vs_beta_pions_cut = ROOT.TH2D("P_yfp_vs_beta_pions_cut", "SHMS Y_{fp} vs SHMS #beta (with cut); SHMS Y_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_xpfp_vs_beta_pions_cut = ROOT.TH2D("H_xpfp_vs_beta_pions_cut", "HMS X'_{fp} vs HMS #beta (with cut); HMS X'_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_xpfp_vs_beta_pions_cut = ROOT.TH2D("P_xpfp_vs_beta_pions_cut", "SHMS X'_{fp} vs SHMS #beta (with cut); SHMS X'_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_ypfp_vs_beta_pions_cut = ROOT.TH2D("H_ypfp_vs_beta_pions_cut", "HMS Y'_{fp} vs HMS #beta (with cut); HMS Y'_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_ypfp_vs_beta_pions_cut = ROOT.TH2D("P_ypfp_vs_beta_pions_cut", "SHMS Y'_{fp} vs SHMS #beta (with cut); SHMS Y'_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
P_MMpi_vs_beta_pions_cut = ROOT.TH2D("P_MMpi_vs_beta_pions_cut", "Missing Mass vs SHMS #beta (with cut); MM_{#pi}; SHMS_#beta", 100, 0, 2, 200, 0, 2)

MMpi_vs_ePiCoinTime_pions_cut_prompt = ROOT.TH2D("MMpi_vs_ePiCoinTime_pions_cut_prompt","Missing Mass vs Electron-Pion CTime; MM_{#pi}; e #pi Coin_Time",100, 0, 2, 100, -2, 2)
#Q2vsW_pions_cut = ROOT.TH2D("Q2vsW_pions_cut", "Q2 vs W; Q2; W", 200, -1.0, 5.0, 200, 2.3, 3.8)

if (FilenameOverride == False): # Standard running condition, construct file name from run number and max events e.t.c.
    Q2vsW_pions_cut = ROOT.TH2D("Q2vsW_pions_cut", "Q2 vs W; Q2; W", 200, -1.0, 5.0, 200, 2.3, 3.8)
#    Q2vsW_pions_cut = ROOT.TH2D("Q2vsW_pions_cut", "Q2 vs W; Q2; W", 200, 4.0, 8.0, 200, 2.6, 3.6)
elif (FilenameOverride != False): # Standard running condition, construct file name from run number and max events e.t.c.
    Q2vsW_pions_cut = ROOT.TH2D("Q2vsW_pions_cut", "Q2 vs W; Q2; W", 200, Q2min, Q2max, 200, Wmin, Wmax)

phiqvst_pions_cut = ROOT.TH2D("phiqvst_pions_cut","; #phi ;t", 12, -3.14, 3.14, 24, 0.0, 1.2)

# 2D Histograms for kaons
H_cal_etottracknorm_vs_cer_npe_kaons_uncut = ROOT.TH2D("H_cal_etottracknorm_vs_cer_npe_kaons_uncut","HMS cal etottracknorm vs HMS cer npeSum (no cut); H_cal_etottracknorm; H_cer_npeSum",100, 0, 2, 100, 0, 40)
P_hgcer_vs_aero_npe_kaons_uncut = ROOT.TH2D("P_hgcer_vs_aero_npe_kaons_uncut", "SHMS HGC npeSum vs SHMS Aero npeSum (no cut); SHMS_hgcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
eKCoinTime_vs_MMK_kaons_uncut = ROOT.TH2D("eKCoinTime_vs_MMK_kaons_uncut","Electron-Kaon CTime vs Missing Mass (no cut); e K Coin_Time; MM_{K}", 200, -40, 40, 200, 0, 2)
P_hgcer_yx_kaons_uncut = ROOT.TH2D("P_hgcer_yx_kaons_uncut", "SHMS HGC yAtCer vs SHMS HGC xAtCer (no cut); SHMS_hgcer_yAtCer; SHMS_hgcer_xAtCer", 100, -50, 50, 100, -50, 50)
P_aero_yx_kaons_uncut = ROOT.TH2D("P_aero_yx_kaons_uncut", "SHMS aero yAtAero vs SHMS aero xAtAero (no cut); SHMS_aero_yAtAero; SHMS_aero_xAtAero", 100, -50, 50, 100, -50, 50)
eKCoinTime_vs_beta_kaons_uncut = ROOT.TH2D("eKCoinTime_vs_beta_kaons_uncut", "Electron-Kaon CTime vs SHMS #beta (no cut); e K Coin_Time; SHMS_#beta", 200, -40, 40, 200, 0, 2)
P_RFTime_vs_MMK_kaons_uncut = ROOT.TH2D("P_RFTime_vs_MMK_kaons_uncut", "SHMS RFTime vs Missing Mass (no cuts); SHMS_RFTime_Dist; MM_{K}", 100, 0, 4, 100, 0, 2)
P_cal_etottracknorm_vs_ngcer_npe_kaons_uncut = ROOT.TH2D("P_cal_etottracknorm_vs_ngcer_npe_kaons_uncut", "SHMS cal etottracknorm vs SHMS NGC xAtCer (no cut); SHMS_cal_etottracknorm; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_yx_kaons_uncut = ROOT.TH2D("P_ngcer_yx_kaons_uncut", "SHMS NGC yAtCer vs SHMS NGC xAtCer (no cut); SHMS_ngcer_yAtCer; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_vs_hgcer_npe_kaons_uncut = ROOT.TH2D("P_ngcer_vs_hgcer_npe_kaons_uncut", "SHMS NGC npeSum vs SHMS HGC npeSum (no cut); SHMS_ngcer_npeSum; SHMS_hgcer_npeSum", 100, 0, 50, 100, 0, 50)
P_ngcer_vs_aero_npe_kaons_uncut = ROOT.TH2D("P_ngcer_vs_aero_npe_kaons_uncut", "SHMS NGC npeSum vs SHMS aero npeSum (no cut); SHMS_ngcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
H_dp_vs_beta_kaons_uncut = ROOT.TH2D("H_dp_vs_beta_kaons_uncut", "HMS #delta vs HMS #beta (no cut); HMS #delta; HMS_#beta", 200, -12, 12, 200, 0, 2)
P_dp_vs_beta_kaons_uncut = ROOT.TH2D("P_dp_vs_beta_kaons_uncut", "SHMS #delta vs SHMS #beta (no cut); SHMS #delta; HMS_#beta", 200, -12, 12, 200, 0, 2)
H_xfp_vs_beta_kaons_uncut = ROOT.TH2D("H_xfp_vs_beta_kaons_uncut", "HMS X_{fp} vs HMS #beta (no cut); HMS X_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_xfp_vs_beta_kaons_uncut = ROOT.TH2D("P_xfp_vs_beta_kaons_uncut", "SHMS X_{fp} vs SHMS #beta (no cut); SHMS X_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_yfp_vs_beta_kaons_uncut = ROOT.TH2D("H_yfp_vs_beta_kaons_uncut", "HMS Y_{fp} vs HMS #beta (no cut); HMS Y_{fp}; HMS_#beta", 100, -25, 25, 200, 0, 2)
P_yfp_vs_beta_kaons_uncut = ROOT.TH2D("P_yfp_vs_beta_kaons_uncut", "SHMS Y_{fp} vs SHMS #beta (no cut); SHMS Y_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_xpfp_vs_beta_kaons_uncut = ROOT.TH2D("H_xpfp_vs_beta_kaons_uncut", "HMS X'_{fp} vs HMS #beta (no cut); HMS X'_{fp}; HMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
P_xpfp_vs_beta_kaons_uncut = ROOT.TH2D("P_xpfp_vs_beta_kaons_uncut", "SHMS X'_{fp} vs SHMS #beta (no cut); SHMS X'_{fp}; SHMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
H_ypfp_vs_beta_kaons_uncut = ROOT.TH2D("H_ypfp_vs_beta_kaons_uncut", "HMS Y'_{fp} vs HMS #beta (no cut); HMS Y'_{fp}; HMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
P_ypfp_vs_beta_kaons_uncut = ROOT.TH2D("P_ypfp_vs_beta_kaons_uncut", "SHMS Y'_{fp} vs SHMS #beta (no cut); SHMS Y'_{fp}; SHMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
P_MMK_vs_beta_kaons_uncut = ROOT.TH2D("P_MMK_vs_beta_kaons_uncut", "Missing Mass vs SHMS #beta (no cut); MM_{K}; SHMS_#beta", 100, 0, 2, 200, 0, 2)

H_cal_etottracknorm_vs_cer_npe_kaons_cut = ROOT.TH2D("H_cal_etottracknorm_vs_cer_npe_kaons_cut","HMS cal etottracknorm vs HMS cer npeSum (with cuts); H_cal_etottracknorm; H_cer_npeSum",100, 0.5, 1.5, 100, 0, 40)
P_hgcer_vs_aero_npe_kaons_cut = ROOT.TH2D("P_hgcer_vs_aero_npe_kaons_cut", "SHMS HGC npeSum vs SHMS aero npeSum (with cuts); SHMS_hgcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
eKCoinTime_vs_MMK_kaons_cut = ROOT.TH2D("eKCoinTime_vs_MMK_kaons_cut","Electron-Kaon CTime vs Missing Mass (with PID cuts); e K Coin_Time; MM_{K}", 100, -2, 2, 100, 0, 2)
P_hgcer_yx_kaons_cut = ROOT.TH2D("P_hgcer_yx_kaons_cut", "SHMS HGC yAtCer vs SHMS HGC xAtCer (with cuts); SHMS_hgcer_yAtCer; SHMS_hgcer_xAtCer", 100, -50, 50, 100, -50, 50)
P_aero_yx_kaons_cut = ROOT.TH2D("P_aero_yx_kaons_cut", "SHMS aero yAtAero vs SHMS aero xAtAero (with cuts); SHMS_aero_yAtAero; SHMS_aero_xAtAero", 100, -50, 50, 100, -50, 50)
eKCoinTime_vs_beta_kaons_cut = ROOT.TH2D("eKCoinTime_vs_beta_kaons_cut", "Electron-Kaon CTime vs SHMS #beta (with PID cuts); e K Coin_Time; SHMS_#beta", 100, -2, 2, 100, 0.6, 1.4)
P_RFTime_vs_MMK_kaons_cut = ROOT.TH2D("P_RFTime_vs_MMK_kaons_cut", "SHMS RFTime vs Missing Mass (with cuts); SHMS_RFTime_Dist; MM_{K}", 100, 0, 4, 100, 0, 2)
P_cal_etottracknorm_vs_ngcer_npe_kaons_cut = ROOT.TH2D("P_cal_etottracknorm_vs_ngcer_npe_kaons_cut", "P cal etottracknorm vs SHMS NGC xAtCer (with cuts); SHMS_cal_etottracknorm; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_yx_kaons_cut = ROOT.TH2D("P_ngcer_yx_kaons_cut", "SHMS NGC yAtCer vs SHMS NGC xAtCer (with cuts); SHMS_ngcer_yAtCer; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_vs_hgcer_npe_kaons_cut = ROOT.TH2D("P_ngcer_vs_hgcer_npe_kaons_cut", "SHMS NGC npeSum vs SHMS HGC npeSum (with cuts); SHMS_ngcer_npeSum; SHMS_hgcer_npeSum", 100, 0, 50, 100, 0, 50)
P_ngcer_vs_aero_npe_kaons_cut = ROOT.TH2D("P_ngcer_vs_aero_npe_kaons_cut", "SHMS NGC npeSum vs SHMS aero npeSum (with cuts); SHMS_ngcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
H_dp_vs_beta_kaons_cut = ROOT.TH2D("H_dp_vs_beta_kaons_cut", "HMS #delta vs HMS #beta (with cut); HMS #delta; HMS_#beta", 200, -12, 12, 200, 0, 2)
P_dp_vs_beta_kaons_cut = ROOT.TH2D("P_dp_vs_beta_kaons_cut", "SHMS #delta vs SHMS #beta (with cut); SHMS #delta; SHMS_#beta", 200, -30, 30, 200, 0, 2)
H_xfp_vs_beta_kaons_cut = ROOT.TH2D("H_xfp_vs_beta_kaons_cut", "HMS X_{fp} vs HMS #beta (with cut); HMS X_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_xfp_vs_beta_kaons_cut = ROOT.TH2D("P_xfp_vs_beta_kaons_cut", "SHMS X_{fp} vs SHMS #beta (with cut); SHMS X_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_yfp_vs_beta_kaons_cut = ROOT.TH2D("H_yfp_vs_beta_kaons_cut", "HMS Y_{fp} vs HMS #beta (with cut); HMS Y_{fp}; HMS_#beta", 100, -25, 25, 200, 0, 2)
P_yfp_vs_beta_kaons_cut = ROOT.TH2D("P_yfp_vs_beta_kaons_cut", "SHMS Y_{fp} vs SHMS #beta (with cut); SHMS Y_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_xpfp_vs_beta_kaons_cut = ROOT.TH2D("H_xpfp_vs_beta_kaons_cut", "HMS X'_{fp} vs HMS #beta (with cut); HMS X'_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_xpfp_vs_beta_kaons_cut = ROOT.TH2D("P_xpfp_vs_beta_kaons_cut", "SHMS X'_{fp} vs SHMS #beta (with cut); SHMS X'_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_ypfp_vs_beta_kaons_cut = ROOT.TH2D("H_ypfp_vs_beta_kaons_cut", "HMS Y'_{fp} vs HMS #beta (with cut); HMS Y'_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_ypfp_vs_beta_kaons_cut = ROOT.TH2D("P_ypfp_vs_beta_kaons_cut", "SHMS Y'_{fp} vs SHMS #beta (with cut); SHMS Y'_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
P_MMK_vs_beta_kaons_cut = ROOT.TH2D("P_MMK_vs_beta_kaons_cut", "Missing Mass vs SHMS #beta (with cut); MM_{K}; SHMS_#beta", 100, 0, 2, 200, 0, 2)

MMK_vs_eKCoinTime_kaons_cut_prompt = ROOT.TH2D("MMK_vs_eKCoinTime_kaons_cut_prompt","Missing Mass vs Electron-Kaon CTime; MM_{K}; e K Coin_Time",100, 0, 2, 100, -2, 2)
#Q2vsW_kaons_cut = ROOT.TH2D("Q2vsW_kaons_cut", "Q2 vs W; Q2; W", 200, -1.0, 5.0, 200, 2.3, 3.8)

if (FilenameOverride == False): # Standard running condition, construct file name from run number and max events e.t.c.
    Q2vsW_kaons_cut = ROOT.TH2D("Q2vsW_kaons_cut", "Q2 vs W; Q2; W", 200, -1.0, 5.0, 200, 2.3, 3.8)
#    Q2vsW_kaons_cut = ROOT.TH2D("Q2vsW_kaons_cut", "Q2 vs W; Q2; W", 200, 4.0, 8.0, 200, 2.6, 3.6)
elif (FilenameOverride != False): # Standard running condition, construct file name from run number and max events e.t.c.
    Q2vsW_kaons_cut = ROOT.TH2D("Q2vsW_kaons_cut", "Q2 vs W; Q2; W", 200, Q2min, Q2max, 200, Wmin, Wmax)

phiqvst_kaons_cut = ROOT.TH2D("phiqvst_kaons_cut","; #phi ;t", 12, -3.14, 3.14, 24, 0.0, 1.2)

# SJDK - 09/10/21 - Should be Mandelstam u not Mandelstam t for protons - need to change associated plots
# 2D Histograms for protons
H_cal_etottracknorm_vs_cer_npe_protons_uncut = ROOT.TH2D("H_cal_etottracknorm_vs_cer_npe_protons_uncut","HMS cal etottracknorm vs HMS cer npeSum (no cut); H_cal_etottracknorm; H_cer_npeSum",100, 0, 2, 100, 0, 40)
P_hgcer_vs_aero_npe_protons_uncut = ROOT.TH2D("P_hgcer_vs_aero_npe_protons_uncut", "SHMS HGC npeSum vs SHMS Aero npeSum (no cut); SHMS_hgcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
epCoinTime_vs_MMp_protons_uncut = ROOT.TH2D("epCoinTime_vs_MMp_protons_uncut","Electron-Proton CTime vs Missing Mass (no cut); e p Coin_Time; MM_{p}", 200, -40, 40, 200, 0, 2)
P_hgcer_yx_protons_uncut = ROOT.TH2D("P_hgcer_yx_protons_uncut", "SHMS HGC yAtCer vs SHMS HGC xAtCer (no cut); SHMS_hgcer_yAtCer; SHMS_hgcer_xAtCer", 100, -50, 50, 100, -50, 50)
P_aero_yx_protons_uncut = ROOT.TH2D("P_aero_yx_protons_uncut", "SHMS aero yAtAero vs SHMS aero xAtAero (no cut); SHMS_aero_yAtAero; SHMS_aero_xAtAero", 100, -50, 50, 100, -50, 50)
epCoinTime_vs_beta_protons_uncut = ROOT.TH2D("epCoinTime_vs_beta_protons_uncut", "Electron-Proton CTime vs SHMS #beta (no cut); e p Coin_Time; SHMS_#beta", 200, -40, 40, 200, 0, 2)
P_RFTime_vs_MMp_protons_uncut = ROOT.TH2D("P_RFTime_vs_MMp_protons_uncut", "SHMS RFTime vs Missing Mass (no cuts); SHMS_RFTime_Dist; MM_{p}", 100, 0, 4, 100, 0, 2)
P_cal_etottracknorm_vs_ngcer_npe_protons_uncut = ROOT.TH2D("P_cal_etottracknorm_vs_ngcer_npe_protons_uncut", "SHMS cal etottracknorm vs SHMS NGC xAtCer (no cut); SHMS_cal_etottracknorm; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_yx_protons_uncut = ROOT.TH2D("P_ngcer_yx_protons_uncut", "SHMS NGC yAtCer vs SHMS NGC xAtCer (no cut); SHMS_ngcer_yAtCer; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_vs_hgcer_npe_protons_uncut = ROOT.TH2D("P_ngcer_vs_hgcer_npe_protons_uncut", "SHMS NGC npeSum vs SHMS HGC npeSum (no cut); SHMS_ngcer_npeSum; SHMS_hgcer_npeSum", 100, 0, 50, 100, 0, 50)
P_ngcer_vs_aero_npe_protons_uncut = ROOT.TH2D("P_ngcer_vs_aero_npe_protons_uncut", "SHMS NGC npeSum vs SHMS aero npeSum (no cut); SHMS_ngcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
H_dp_vs_beta_protons_uncut = ROOT.TH2D("H_dp_vs_beta_protons_uncut", "HMS #delta vs HMS #beta (no cut); HMS #delta; HMS_#beta", 200, -12, 12, 200, 0, 2)
P_dp_vs_beta_protons_uncut = ROOT.TH2D("P_dp_vs_beta_protons_uncut", "SHMS #delta vs SHMS #beta (no cut); SHMS #delta; HMS_#beta", 200, -12, 12, 200, 0, 2)
H_xfp_vs_beta_protons_uncut = ROOT.TH2D("H_xfp_vs_beta_protons_uncut", "HMS X_{fp} vs HMS #beta (no cut); HMS X_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_xfp_vs_beta_protons_uncut = ROOT.TH2D("P_xfp_vs_beta_protons_uncut", "SHMS X_{fp} vs SHMS #beta (no cut); SHMS X_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_yfp_vs_beta_protons_uncut = ROOT.TH2D("H_yfp_vs_beta_protons_uncut", "HMS Y_{fp} vs HMS #beta (no cut); HMS Y_{fp}; HMS_#beta", 100, -25, 25, 200, 0, 2)
P_yfp_vs_beta_protons_uncut = ROOT.TH2D("P_yfp_vs_beta_protons_uncut", "SHMS Y_{fp} vs SHMS #beta (no cut); SHMS Y_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_xpfp_vs_beta_protons_uncut = ROOT.TH2D("H_xpfp_vs_beta_protons_uncut", "HMS X'_{fp} vs HMS #beta (no cut); HMS X'_{fp}; HMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
P_xpfp_vs_beta_protons_uncut = ROOT.TH2D("P_xpfp_vs_beta_protons_uncut", "SHMS X'_{fp} vs SHMS #beta (no cut); SHMS X'_{fp}; SHMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
H_ypfp_vs_beta_protons_uncut = ROOT.TH2D("H_ypfp_vs_beta_protons_uncut", "HMS Y'_{fp} vs HMS #beta (no cut); HMS Y'_{fp}; HMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
P_ypfp_vs_beta_protons_uncut = ROOT.TH2D("P_ypfp_vs_beta_protons_uncut", "SHMS Y'_{fp} vs SHMS #beta (no cut); SHMS Y'_{fp}; SHMS_#beta", 160, -0.4, 0.4, 200, 0, 2)
P_MMp_vs_beta_protons_uncut = ROOT.TH2D("P_MMp_vs_beta_protons_uncut", "Missing Mass vs SHMS #beta (no cut); MM_{p}; SHMS_#beta", 100, 0, 2, 200, 0, 2)

H_cal_etottracknorm_vs_cer_npe_protons_cut = ROOT.TH2D("H_cal_etottracknorm_vs_cer_npe_protons_cut","HMS cal etottracknorm vs HMS cer npeSum (with cuts); H_cal_etottracknorm; H_cer_npeSum",100, 0.5, 1.5, 100, 0, 40)
P_hgcer_vs_aero_npe_protons_cut = ROOT.TH2D("P_hgcer_vs_aero_npe_protons_cut", "SHMS HGC npeSum vs SHMS aero npeSum (with cuts); SHMS_hgcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
epCoinTime_vs_MMp_protons_cut = ROOT.TH2D("epCoinTime_vs_MMp_protons_cut","Electron-Proton CTime vs Missing Mass (with PID cuts); e p Coin_Time; MM_{p}", 100, -2, 2, 100, 0, 2)
P_hgcer_yx_protons_cut = ROOT.TH2D("P_hgcer_yx_protons_cut", "SHMS HGC yAtCer vs SHMS HGC xAtCer (with cuts); SHMS_hgcer_yAtCer; SHMS_hgcer_xAtCer", 100, -50, 50, 100, -50, 50)
P_aero_yx_protons_cut = ROOT.TH2D("P_aero_yx_protons_cut", "SHMS aero yAtAero vs SHMS aero xAtAero (with cuts); SHMS_aero_yAtAero; SHMS_aero_xAtAero", 100, -50, 50, 100, -50, 50)
epCoinTime_vs_beta_protons_cut = ROOT.TH2D("epCoinTime_vs_beta_protons_cut", "Electron-Proton CTime vs SHMS #beta (with PID cuts); e p Coin_Time; SHMS_#beta", 100, -2, 2, 100, 0.6, 1.4)
P_RFTime_vs_MMp_protons_cut = ROOT.TH2D("P_RFTime_vs_MMp_protons_cut", "SHMS RFTime vs Missing Mass (with cuts); SHMS_RFTime_Dist; MM_{p}", 100, 0, 4, 100, 0, 2)
P_cal_etottracknorm_vs_ngcer_npe_protons_cut = ROOT.TH2D("P_cal_etottracknorm_vs_ngcer_npe_protons_cut", "P cal etottracknorm vs SHMS NGC xAtCer (with cuts); SHMS_cal_etottracknorm; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10)
P_ngcer_yx_protons_cut = ROOT.TH2D("P_ngcer_yx_protons_cut", "SHMS NGC yAtCer vs SHMS NGC xAtCer (with cuts); SHMS_ngcer_yAtCer; SHMS_ngcer_xAtCer", 100, -10, 10, 100, -10, 10) 
P_ngcer_vs_hgcer_npe_protons_cut = ROOT.TH2D("P_ngcer_vs_hgcer_npe_protons_cut", "SHMS NGC npeSum vs SHMS HGC npeSum (with cuts); SHMS_ngcer_npeSum; SHMS_hgcer_npeSum", 100, 0, 50, 100, 0, 50)
P_ngcer_vs_aero_npe_protons_cut = ROOT.TH2D("P_ngcer_vs_aero_npe_protons_cut", "SHMS NGC npeSum vs SHMS aero npeSum (with cuts); SHMS_ngcer_npeSum; SHMS_aero_npeSum", 100, 0, 50, 100, 0, 50)
H_dp_vs_beta_protons_cut = ROOT.TH2D("H_dp_vs_beta_protons_cut", "HMS #delta vs HMS #beta (with cut); HMS #delta; HMS_#beta", 200, -12, 12, 200, 0, 2)
P_dp_vs_beta_protons_cut = ROOT.TH2D("P_dp_vs_beta_protons_cut", "SHMS #delta vs SHMS #beta (with cut); SHMS #delta; SHMS_#beta", 200, -30, 30, 200, 0, 2)
H_xfp_vs_beta_protons_cut = ROOT.TH2D("H_xfp_vs_beta_protons_cut", "HMS X_{fp} vs HMS #beta (with cut); HMS X_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_xfp_vs_beta_protons_cut = ROOT.TH2D("P_xfp_vs_beta_protons_cut", "SHMS X_{fp} vs SHMS #beta (with cut); SHMS X_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_yfp_vs_beta_protons_cut = ROOT.TH2D("H_yfp_vs_beta_protons_cut", "HMS Y_{fp} vs HMS #beta (with cut); HMS Y_{fp}; HMS_#beta", 100, -25, 25, 200, 0, 2)
P_yfp_vs_beta_protons_cut = ROOT.TH2D("P_yfp_vs_beta_protons_cut", "SHMS Y_{fp} vs SHMS #beta (with cut); SHMS Y_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_xpfp_vs_beta_protons_cut = ROOT.TH2D("H_xpfp_vs_beta_protons_cut", "HMS X'_{fp} vs HMS #beta (with cut); HMS X'_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_xpfp_vs_beta_protons_cut = ROOT.TH2D("P_xpfp_vs_beta_protons_cut", "SHMS X'_{fp} vs SHMS #beta (with cut); SHMS X'_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
H_ypfp_vs_beta_protons_cut = ROOT.TH2D("H_ypfp_vs_beta_protons_cut", "HMS Y'_{fp} vs HMS #beta (with cut); HMS Y'_{fp}; HMS_#beta", 160, -40, 40, 200, 0, 2)
P_ypfp_vs_beta_protons_cut = ROOT.TH2D("P_ypfp_vs_beta_protons_cut", "SHMS Y'_{fp} vs SHMS #beta (with cut); SHMS Y'_{fp}; SHMS_#beta", 160, -40, 40, 200, 0, 2)
P_MMp_vs_beta_protons_cut = ROOT.TH2D("P_MMp_vs_beta_protons_cut", "Missing Mass vs SHMS #beta (with cut); MM_{p}; SHMS_#beta", 100, 0, 2, 200, 0, 2)

MMp_vs_epCoinTime_protons_cut_prompt = ROOT.TH2D("MMp_vs_epCoinTime_protons_cut_prompt","Missing Mass vs Electron-Proton CTime; MM_{p}; e p Coin_Time",100, 0, 2, 100, -2, 2)
#Q2vsW_protons_cut = ROOT.TH2D("Q2vsW_protons_cut", "Q2 vs W; Q2; W", 200, -1.0, 5.0, 200, 2.3, 3.8)

if (FilenameOverride == False): # Standard running condition, construct file name from run number and max events e.t.c.
    Q2vsW_protons_cut = ROOT.TH2D("Q2vsW_protons_cut", "Q2 vs W; Q2; W", 200, -1.0, 5.0, 200, 2.3, 3.8)
#    Q2vsW_protons_cut = ROOT.TH2D("Q2vsW_protons_cut", "Q2 vs W; Q2; W", 200, 4.0, 8.0, 200, 2.6, 3.6)
elif (FilenameOverride != False): # Standard running condition, construct file name from run number and max events e.t.c.
# You should only plot it this way IF the filename override is set, I want a consistent script between CDaq and the iFarm, it MUST work fine for individual files on CDaq
    Q2vsW_protons_cut = ROOT.TH2D("Q2vsW_protons_cut", "Q2 vs W; Q2; W", 200, Q2min, Q2max, 200, Wmin, Wmax)

# SJDK 09/10/21 - See above, should be u rather than t
#phiqvst_protons_cut = ROOT.TH2D("phiqvst_protons_cut","; #phi ;t", 12, -3.14, 3.14, 24, 0.0, 1.2)

############################################################################################################################################################################################################
# 3D Histograms for pions, kaons and protons
P_HGC_xy_npe_pions_uncut = ROOT.TH3D("P_HGC_xy_npe_pions_uncut", "SHMS HGC NPE as fn of yAtCer vs SHMS HGC xAtCer (no cuts); HGC_yAtCer(cm); HGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_Aero_xy_npe_pions_uncut = ROOT.TH3D("P_Aero_xy_npe_pions_uncut", "SHMS Aerogel NPE as fn of yAtCer vs xAtCer (no cuts); Aero_yAtCer(cm); Aero_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_NGC_xy_npe_pions_uncut = ROOT.TH3D("P_NGC_xy_npe_pions_uncut", "SHMS NGC NPE as fn of yAtCer vs xAtCer (no cuts); NGC_yAtCer(cm); NGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_HGC_xy_npe_pions_cut = ROOT.TH3D("P_HGC_xy_npe_pions_cut", "SHMS HGC NPE as fn of yAtCer vs SHMS HGC xAtCer (with cuts); HGC_yAtCer(cm); HGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_Aero_xy_npe_pions_cut = ROOT.TH3D("P_Aero_xy_npe_pions_cut", "SHMS Aerogel NPE as fn of yAtCer vs xAtCer (with cuts); Aero_yAtCer(cm); Aero_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_NGC_xy_npe_pions_cut = ROOT.TH3D("P_NGC_xy_npe_pions_cut", "SHMS NGC NPE as fn of yAtCer vs xAtCer (with cuts); NGC_yAtCer(cm); NGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)

P_HGC_xy_npe_kaons_uncut = ROOT.TH3D("P_HGC_xy_npe_kaons_uncut", "SHMS HGC NPE as fn of yAtCer vs SHMS HGC xAtCer (no cuts); HGC_yAtCer(cm); HGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_Aero_xy_npe_kaons_uncut = ROOT.TH3D("P_Aero_xy_npe_kaons_uncut", "SHMS Aerogel NPE as fn of yAtCer vs xAtCer (no cuts); Aero_yAtCer(cm); Aero_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_NGC_xy_npe_kaons_uncut = ROOT.TH3D("P_NGC_xy_npe_kaons_uncut", "SHMS NGC NPE as fn of yAtCer vs xAtCer (no cuts); NGC_yAtCer(cm); NGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_HGC_xy_npe_kaons_cut = ROOT.TH3D("P_HGC_xy_npe_kaons_cut", "SHMS HGC NPE as fn of yAtCer vs SHMS HGC xAtCer (with cuts); HGC_yAtCer(cm); HGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_Aero_xy_npe_kaons_cut = ROOT.TH3D("P_Aero_xy_npe_kaons_cut", "SHMS Aerogel NPE as fn of yAtCer vs xAtCer (with cuts); Aero_yAtCer(cm); Aero_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_NGC_xy_npe_kaons_cut = ROOT.TH3D("P_NGC_xy_npe_kaons_cut", "SHMS NGC NPE as fn of yAtCer vs xAtCer (with cuts); NGC_yAtCer(cm); NGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)

P_HGC_xy_npe_protons_uncut = ROOT.TH3D("P_HGC_xy_npe_protons_uncut", "SHMS HGC NPE as fn of yAtCer vs SHMS HGC xAtCer (no cuts); HGC_yAtCer(cm); HGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_Aero_xy_npe_protons_uncut = ROOT.TH3D("P_Aero_xy_npe_protons_uncut", "SHMS Aerogel NPE as fn of yAtCer vs xAtCer (no cuts); Aero_yAtCer(cm); Aero_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_NGC_xy_npe_protons_uncut = ROOT.TH3D("P_NGC_xy_npe_protons_uncut", "SHMS NGC NPE as fn of yAtCer vs xAtCer (no cuts); NGC_yAtCer(cm); NGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_HGC_xy_npe_protons_cut = ROOT.TH3D("P_HGC_xy_npe_protons_cut", "SHMS HGC NPE as fn of yAtCer vs SHMS HGC xAtCer (with cuts); HGC_yAtCer(cm); HGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_Aero_xy_npe_protons_cut = ROOT.TH3D("P_Aero_xy_npe_protons_cut", "SHMS Aerogel NPE as fn of yAtCer vs xAtCer (with cuts); Aero_yAtCer(cm); Aero_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)
P_NGC_xy_npe_protons_cut = ROOT.TH3D("P_NGC_xy_npe_protons_cut", "SHMS NGC NPE as fn of yAtCer vs xAtCer (with cuts); NGC_yAtCer(cm); NGC_xAtCer(cm); NPE", 100, -50, 50, 100, -50, 50, 100, 0.1 , 50)

############################################################################################################################################################################################################
# Filling Histograms for Pions
for event in Uncut_Pion_Events_tree:
    H_beta_pions_uncut.Fill(event.H_gtr_beta)
    H_xp_pions_uncut.Fill(event.H_gtr_xp)
    H_yp_pions_uncut.Fill(event.H_gtr_yp)
    H_dp_pions_uncut.Fill(event.H_gtr_dp)
    H_hod_goodscinhit_pions_uncut.Fill(event.H_hod_goodscinhit)
    H_hod_goodstarttime_pions_uncut.Fill(event.H_hod_goodstarttime)
    H_cal_etotnorm_pions_uncut.Fill(event.H_cal_etotnorm)
    H_cal_etottracknorm_pions_uncut.Fill(event.H_cal_etottracknorm)
    H_cer_npe_pions_uncut.Fill(event.H_cer_npeSum)
    H_RFTime_pions_uncut.Fill(event.H_RF_Dist)
    P_beta_pions_uncut.Fill(event.P_gtr_beta)
    P_xp_pions_uncut.Fill(event.P_gtr_xp)
    P_yp_pions_uncut.Fill(event.P_gtr_yp)
    P_dp_pions_uncut.Fill(event.P_gtr_dp)
    P_p_pions_uncut.Fill(event.P_gtr_p)
    P_hod_goodscinhit_pions_uncut.Fill(event.P_hod_goodscinhit)
    P_hod_goodstarttime_pions_uncut.Fill(event.P_hod_goodstarttime)
    P_cal_etotnorm_pions_uncut.Fill(event.P_cal_etotnorm)
    P_cal_etottracknorm_pions_uncut.Fill(event.P_cal_etottracknorm)
    P_hgcer_npe_pions_uncut.Fill(event.P_hgcer_npeSum)
    P_xhgcer_pions_uncut.Fill(event.P_hgcer_xAtCer)
    P_yhgcer_pions_uncut.Fill(event.P_hgcer_yAtCer)
    P_aero_npe_pions_uncut.Fill(event.P_aero_npeSum)
    P_xaero_pions_uncut.Fill(event.P_aero_xAtAero)
    P_yaero_pions_uncut.Fill(event.P_aero_yAtAero)
    P_ngcer_npe_pions_uncut.Fill(event.P_ngcer_npeSum)
    P_xngcer_pions_uncut.Fill(event.P_ngcer_xAtCer)
    P_yngcer_pions_uncut.Fill(event.P_ngcer_yAtCer)
    P_MMpi_pions_uncut.Fill(event.MMpi)
    P_RFTime_pions_uncut.Fill(event.P_RF_Dist)
    ePiCoinTime_pions_uncut.Fill(event.CTime_ePiCoinTime_ROC1)
    Q2_pions_uncut.Fill(event.Q2)
    W_pions_uncut.Fill(event.W)
    epsilon_pions_uncut.Fill(event.epsilon)
    phiq_pions_uncut.Fill(event.ph_q)
    t_pions_uncut.Fill(-event.MandelT)
    H_cal_etottracknorm_vs_cer_npe_pions_uncut.Fill(event.H_cal_etottracknorm, event.H_cer_npeSum)
    P_hgcer_vs_aero_npe_pions_uncut.Fill(event.P_hgcer_npeSum, event.P_aero_npeSum)
    ePiCoinTime_vs_MMpi_pions_uncut.Fill(event.CTime_ePiCoinTime_ROC1, event.MMpi)
    P_RFTime_vs_MMpi_pions_uncut.Fill(event.P_RF_Dist, event.MMpi)
    P_hgcer_yx_pions_uncut.Fill(event.P_hgcer_yAtCer, event.P_hgcer_xAtCer)
    P_aero_yx_pions_uncut.Fill(event.P_aero_yAtAero, event.P_aero_xAtAero)
    ePiCoinTime_vs_beta_pions_uncut.Fill(event.CTime_ePiCoinTime_ROC1, event.P_gtr_beta)
    P_cal_etottracknorm_vs_ngcer_npe_pions_uncut.Fill(event.P_cal_etottracknorm, event.P_ngcer_npeSum)
    P_ngcer_yx_pions_uncut.Fill(event.P_ngcer_yAtCer, event.P_ngcer_xAtCer)
    P_ngcer_vs_hgcer_npe_pions_uncut.Fill(event.P_ngcer_npeSum, event.P_hgcer_npeSum)
    P_ngcer_vs_aero_npe_pions_uncut.Fill(event.P_ngcer_npeSum, event.P_aero_npeSum)
    H_dp_vs_beta_pions_uncut.Fill(event.H_gtr_dp, event.H_gtr_beta)
    P_dp_vs_beta_pions_uncut.Fill(event.P_gtr_dp, event.P_gtr_beta)
    H_xfp_vs_beta_pions_uncut.Fill(event.H_dc_xfp, event.H_gtr_beta)
    P_xfp_vs_beta_pions_uncut.Fill(event.P_dc_xfp, event.P_gtr_beta)
    H_xpfp_vs_beta_pions_uncut.Fill(event.H_dc_xpfp, event.H_gtr_beta)
    P_xpfp_vs_beta_pions_uncut.Fill(event.P_dc_xpfp, event.P_gtr_beta)
    H_yfp_vs_beta_pions_uncut.Fill(event.H_dc_yfp, event.H_gtr_beta)
    P_yfp_vs_beta_pions_uncut.Fill(event.P_dc_yfp, event.P_gtr_beta)
    H_ypfp_vs_beta_pions_uncut.Fill(event.H_dc_ypfp, event.H_gtr_beta)
    P_ypfp_vs_beta_pions_uncut.Fill(event.P_dc_ypfp, event.P_gtr_beta)
    P_MMpi_vs_beta_pions_uncut.Fill(event.MMpi, event.P_gtr_beta)
    P_HGC_xy_npe_pions_uncut.Fill(event.P_hgcer_yAtCer,event.P_hgcer_xAtCer,event.P_hgcer_npeSum)
    P_Aero_xy_npe_pions_uncut.Fill(event.P_aero_yAtAero,event.P_aero_xAtAero,event.P_aero_npeSum)
    P_NGC_xy_npe_pions_uncut.Fill(event.P_ngcer_yAtCer,event.P_ngcer_xAtCer,event.P_ngcer_npeSum)

for event in Cut_Pion_Events_All_tree:
    H_beta_pions_cut.Fill(event.H_gtr_beta)
    H_xp_pions_cut.Fill(event.H_gtr_xp)
    H_yp_pions_cut.Fill(event.H_gtr_yp)
    H_dp_pions_cut.Fill(event.H_gtr_dp)
    H_hod_goodscinhit_pions_cut.Fill(event.H_hod_goodscinhit)
    H_hod_goodstarttime_pions_cut.Fill(event.H_hod_goodstarttime)
    H_cal_etotnorm_pions_cut.Fill(event.H_cal_etotnorm)
    H_cal_etottracknorm_pions_cut.Fill(event.H_cal_etottracknorm)
    H_cer_npe_pions_cut.Fill(event.H_cer_npeSum)
    H_RFTime_pions_cut.Fill(event.H_RF_Dist)
    P_beta_pions_cut.Fill(event.P_gtr_beta)
    P_xp_pions_cut.Fill(event.P_gtr_xp)
    P_yp_pions_cut.Fill(event.P_gtr_yp)
    P_dp_pions_cut.Fill(event.P_gtr_dp)
    P_p_pions_cut.Fill(event.P_gtr_p)
    P_hod_goodscinhit_pions_cut.Fill(event.P_hod_goodscinhit)
    P_hod_goodstarttime_pions_cut.Fill(event.P_hod_goodstarttime)
    P_cal_etotnorm_pions_cut.Fill(event.P_cal_etotnorm)
    P_cal_etottracknorm_pions_cut.Fill(event.P_cal_etottracknorm)
    P_hgcer_npe_pions_cut.Fill(event.P_hgcer_npeSum)
    P_xhgcer_pions_cut.Fill(event.P_hgcer_xAtCer)
    P_yhgcer_pions_cut.Fill(event.P_hgcer_yAtCer)
    P_aero_npe_pions_cut.Fill(event.P_aero_npeSum)
    P_xaero_pions_cut.Fill(event.P_aero_xAtAero)
    P_yaero_pions_cut.Fill(event.P_aero_yAtAero)
    P_ngcer_npe_pions_cut.Fill(event.P_ngcer_npeSum)
    P_xngcer_pions_cut.Fill(event.P_ngcer_xAtCer)
    P_yngcer_pions_cut.Fill(event.P_ngcer_yAtCer)
    P_MMpi_pions_cut.Fill(event.MMpi)
    P_RFTime_pions_cut.Fill(event.P_RF_Dist)
    ePiCoinTime_pions_cut.Fill(event.CTime_ePiCoinTime_ROC1)
    Q2_pions_cut.Fill(event.Q2)
    W_pions_cut.Fill(event.W)
    epsilon_pions_cut.Fill(event.epsilon)
    phiq_pions_cut.Fill(event.ph_q)
    t_pions_cut.Fill(-event.MandelT)
    H_cal_etottracknorm_vs_cer_npe_pions_cut.Fill(event.H_cal_etottracknorm, event.H_cer_npeSum)
    P_hgcer_vs_aero_npe_pions_cut.Fill(event.P_hgcer_npeSum, event.P_aero_npeSum)
    P_hgcer_yx_pions_cut.Fill(event.P_hgcer_yAtCer, event.P_hgcer_xAtCer)
    P_aero_yx_pions_cut.Fill(event.P_aero_yAtAero, event.P_aero_xAtAero)
    ePiCoinTime_vs_beta_pions_cut.Fill(event.CTime_ePiCoinTime_ROC1, event.P_gtr_beta)
    ePiCoinTime_vs_MMpi_pions_cut.Fill(event.CTime_ePiCoinTime_ROC1, event.MMpi)
    P_RFTime_vs_MMpi_pions_cut.Fill(event.P_RF_Dist, event.MMpi)
    Q2vsW_pions_cut.Fill(event.Q2, event.W)
    phiqvst_pions_cut.Fill(event.ph_q, -event.MandelT)
    P_cal_etottracknorm_vs_ngcer_npe_pions_cut.Fill(event.P_cal_etottracknorm, event.P_ngcer_npeSum)
    P_ngcer_yx_pions_cut.Fill(event.P_ngcer_yAtCer, event.P_ngcer_xAtCer)
    P_ngcer_vs_hgcer_npe_pions_cut.Fill(event.P_ngcer_npeSum, event.P_hgcer_npeSum)
    P_ngcer_vs_aero_npe_pions_cut.Fill(event.P_ngcer_npeSum, event.P_aero_npeSum)
    H_dp_vs_beta_pions_cut.Fill(event.H_gtr_dp, event.H_gtr_beta)
    P_dp_vs_beta_pions_cut.Fill(event.P_gtr_dp, event.P_gtr_beta)
    H_xfp_vs_beta_pions_cut.Fill(event.H_dc_xfp, event.H_gtr_beta)
    P_xfp_vs_beta_pions_cut.Fill(event.P_dc_xfp, event.P_gtr_beta)
    H_xpfp_vs_beta_pions_cut.Fill(event.H_dc_xpfp, event.H_gtr_beta)
    P_xpfp_vs_beta_pions_cut.Fill(event.P_dc_xpfp, event.P_gtr_beta)
    H_yfp_vs_beta_pions_cut.Fill(event.H_dc_yfp, event.H_gtr_beta)
    P_yfp_vs_beta_pions_cut.Fill(event.P_dc_yfp, event.P_gtr_beta)
    H_ypfp_vs_beta_pions_cut.Fill(event.H_dc_ypfp, event.H_gtr_beta)
    P_ypfp_vs_beta_pions_cut.Fill(event.P_dc_ypfp, event.P_gtr_beta)
    P_MMpi_vs_beta_pions_cut.Fill(event.MMpi, event.P_gtr_beta)
    P_HGC_xy_npe_pions_cut.Fill(event.P_hgcer_yAtCer,event.P_hgcer_xAtCer,event.P_hgcer_npeSum)
    P_Aero_xy_npe_pions_cut.Fill(event.P_aero_yAtAero,event.P_aero_xAtAero,event.P_aero_npeSum)
    P_NGC_xy_npe_pions_cut.Fill(event.P_ngcer_yAtCer,event.P_ngcer_xAtCer,event.P_ngcer_npeSum)

for event in Cut_Pion_Events_Prompt_tree:
    P_beta_pions_cut_prompt.Fill(event.P_gtr_beta)
    P_RFTime_pions_cut_prompt.Fill(event.P_RF_Dist)
    ePiCoinTime_pions_cut_prompt.Fill(event.CTime_ePiCoinTime_ROC1)
    P_MMpi_pions_cut_prompt.Fill(event.MMpi)
    MMpi_vs_ePiCoinTime_pions_cut_prompt.Fill(event.MMpi, event.CTime_ePiCoinTime_ROC1)

for event in Cut_Pion_Events_Random_tree:
    P_beta_pions_cut_randm.Fill(event.P_gtr_beta)
    P_RFTime_pions_cut_randm.Fill(event.P_RF_Dist)
    ePiCoinTime_pions_cut_randm.Fill(event.CTime_ePiCoinTime_ROC1)
    P_MMpi_pions_cut_randm.Fill(event.MMpi)

##############################################################################################################################################

# Filling Histograms for Kaons
for event in Uncut_Kaon_Events_tree:
    H_beta_kaons_uncut.Fill(event.H_gtr_beta)
    H_xp_kaons_uncut.Fill(event.H_gtr_xp)
    H_yp_kaons_uncut.Fill(event.H_gtr_yp)
    H_dp_kaons_uncut.Fill(event.H_gtr_dp)
    H_hod_goodscinhit_kaons_uncut.Fill(event.H_hod_goodscinhit)
    H_hod_goodstarttime_kaons_uncut.Fill(event.H_hod_goodstarttime)
    H_cal_etotnorm_kaons_uncut.Fill(event.H_cal_etotnorm)
    H_cal_etottracknorm_kaons_uncut.Fill(event.H_cal_etottracknorm)
    H_cer_npe_kaons_uncut.Fill(event.H_cer_npeSum)
    H_RFTime_kaons_uncut.Fill(event.H_RF_Dist)
    P_beta_kaons_uncut.Fill(event.P_gtr_beta)
    P_xp_kaons_uncut.Fill(event.P_gtr_xp)
    P_yp_kaons_uncut.Fill(event.P_gtr_yp)
    P_dp_kaons_uncut.Fill(event.P_gtr_dp)
    P_p_kaons_uncut.Fill(event.P_gtr_p)
    P_hod_goodscinhit_kaons_uncut.Fill(event.P_hod_goodscinhit)
    P_hod_goodstarttime_kaons_uncut.Fill(event.P_hod_goodstarttime)
    P_cal_etotnorm_kaons_uncut.Fill(event.P_cal_etotnorm)
    P_cal_etottracknorm_kaons_uncut.Fill(event.P_cal_etottracknorm)
    P_hgcer_npe_kaons_uncut.Fill(event.P_hgcer_npeSum)
    P_xhgcer_kaons_uncut.Fill(event.P_hgcer_xAtCer)
    P_yhgcer_kaons_uncut.Fill(event.P_hgcer_yAtCer)
    P_aero_npe_kaons_uncut.Fill(event.P_aero_npeSum)
    P_xaero_kaons_uncut.Fill(event.P_aero_xAtAero)
    P_yaero_kaons_uncut.Fill(event.P_aero_yAtAero)
    P_ngcer_npe_kaons_uncut.Fill(event.P_ngcer_npeSum)
    P_xngcer_kaons_uncut.Fill(event.P_ngcer_xAtCer)
    P_yngcer_kaons_uncut.Fill(event.P_ngcer_yAtCer)
    P_MMK_kaons_uncut.Fill(event.MMK)
    P_RFTime_kaons_uncut.Fill(event.P_RF_Dist)
    eKCoinTime_kaons_uncut.Fill(event.CTime_eKCoinTime_ROC1)
    Q2_kaons_uncut.Fill(event.Q2)
    W_kaons_uncut.Fill(event.W)
    epsilon_kaons_uncut.Fill(event.epsilon)
    phiq_kaons_uncut.Fill(event.ph_q)
    t_kaons_uncut.Fill(-event.MandelT)
    H_cal_etottracknorm_vs_cer_npe_kaons_uncut.Fill(event.H_cal_etottracknorm, event.H_cer_npeSum)
    P_hgcer_vs_aero_npe_kaons_uncut.Fill(event.P_hgcer_npeSum, event.P_aero_npeSum)
    eKCoinTime_vs_MMK_kaons_uncut.Fill(event.CTime_eKCoinTime_ROC1, event.MMK)
    P_RFTime_vs_MMK_kaons_uncut.Fill(event.P_RF_Dist, event.MMK)
    P_hgcer_yx_kaons_uncut.Fill(event.P_hgcer_yAtCer, event.P_hgcer_xAtCer)
    P_aero_yx_kaons_uncut.Fill(event.P_aero_yAtAero, event.P_aero_xAtAero)
    eKCoinTime_vs_beta_kaons_uncut.Fill(event.CTime_eKCoinTime_ROC1, event.P_gtr_beta)
    P_cal_etottracknorm_vs_ngcer_npe_kaons_uncut.Fill(event.P_cal_etottracknorm, event.P_ngcer_npeSum)
    P_ngcer_yx_kaons_uncut.Fill(event.P_ngcer_yAtCer, event.P_ngcer_xAtCer)
    P_ngcer_vs_hgcer_npe_kaons_uncut.Fill(event.P_ngcer_npeSum, event.P_hgcer_npeSum)
    P_ngcer_vs_aero_npe_kaons_uncut.Fill(event.P_ngcer_npeSum, event.P_aero_npeSum)
    H_dp_vs_beta_kaons_uncut.Fill(event.H_gtr_dp, event.H_gtr_beta)
    P_dp_vs_beta_kaons_uncut.Fill(event.P_gtr_dp, event.P_gtr_beta)
    H_xfp_vs_beta_kaons_uncut.Fill(event.H_dc_xfp, event.H_gtr_beta)
    P_xfp_vs_beta_kaons_uncut.Fill(event.P_dc_xfp, event.P_gtr_beta)
    H_xpfp_vs_beta_kaons_uncut.Fill(event.H_dc_xpfp, event.H_gtr_beta)
    P_xpfp_vs_beta_kaons_uncut.Fill(event.P_dc_xpfp, event.P_gtr_beta)
    H_yfp_vs_beta_kaons_uncut.Fill(event.H_dc_yfp, event.H_gtr_beta)
    P_yfp_vs_beta_kaons_uncut.Fill(event.P_dc_yfp, event.P_gtr_beta)
    H_ypfp_vs_beta_kaons_uncut.Fill(event.H_dc_ypfp, event.H_gtr_beta)
    P_ypfp_vs_beta_kaons_uncut.Fill(event.P_dc_ypfp, event.P_gtr_beta)
    P_MMK_vs_beta_kaons_uncut.Fill(event.MMK, event.P_gtr_beta)
    P_HGC_xy_npe_kaons_uncut.Fill(event.P_hgcer_yAtCer,event.P_hgcer_xAtCer,event.P_hgcer_npeSum)
    P_Aero_xy_npe_kaons_uncut.Fill(event.P_aero_yAtAero,event.P_aero_xAtAero,event.P_aero_npeSum)
    P_NGC_xy_npe_kaons_uncut.Fill(event.P_ngcer_yAtCer,event.P_ngcer_xAtCer,event.P_ngcer_npeSum)

for event in Cut_Kaon_Events_All_tree:
    H_beta_kaons_cut.Fill(event.H_gtr_beta)
    H_xp_kaons_cut.Fill(event.H_gtr_xp)
    H_yp_kaons_cut.Fill(event.H_gtr_yp)
    H_dp_kaons_cut.Fill(event.H_gtr_dp)
    H_hod_goodscinhit_kaons_cut.Fill(event.H_hod_goodscinhit)
    H_hod_goodstarttime_kaons_cut.Fill(event.H_hod_goodstarttime)
    H_cal_etotnorm_kaons_cut.Fill(event.H_cal_etotnorm)
    H_cal_etottracknorm_kaons_cut.Fill(event.H_cal_etottracknorm)
    H_cer_npe_kaons_cut.Fill(event.H_cer_npeSum)
    H_RFTime_kaons_cut.Fill(event.H_RF_Dist)
    P_beta_kaons_cut.Fill(event.P_gtr_beta)
    P_xp_kaons_cut.Fill(event.P_gtr_xp)
    P_yp_kaons_cut.Fill(event.P_gtr_yp)
    P_dp_kaons_cut.Fill(event.P_gtr_dp)
    P_p_kaons_cut.Fill(event.P_gtr_p)
    P_hod_goodscinhit_kaons_cut.Fill(event.P_hod_goodscinhit)
    P_hod_goodstarttime_kaons_cut.Fill(event.P_hod_goodstarttime)
    P_cal_etotnorm_kaons_cut.Fill(event.P_cal_etotnorm)
    P_cal_etottracknorm_kaons_cut.Fill(event.P_cal_etottracknorm)
    P_hgcer_npe_kaons_cut.Fill(event.P_hgcer_npeSum)
    P_xhgcer_kaons_cut.Fill(event.P_hgcer_xAtCer)
    P_yhgcer_kaons_cut.Fill(event.P_hgcer_yAtCer)
    P_aero_npe_kaons_cut.Fill(event.P_aero_npeSum)
    P_xaero_kaons_cut.Fill(event.P_aero_xAtAero)
    P_yaero_kaons_cut.Fill(event.P_aero_yAtAero)
    P_ngcer_npe_kaons_cut.Fill(event.P_ngcer_npeSum)
    P_xngcer_kaons_cut.Fill(event.P_ngcer_xAtCer)
    P_yngcer_kaons_cut.Fill(event.P_ngcer_yAtCer)
    P_MMK_kaons_cut.Fill(event.MMK)
    P_RFTime_kaons_cut.Fill(event.P_RF_Dist)
    eKCoinTime_kaons_cut.Fill(event.CTime_eKCoinTime_ROC1)
    Q2_kaons_cut.Fill(event.Q2)
    W_kaons_cut.Fill(event.W)
    epsilon_kaons_cut.Fill(event.epsilon)
    phiq_kaons_cut.Fill(event.ph_q)
    t_kaons_cut.Fill(-event.MandelT)
    H_cal_etottracknorm_vs_cer_npe_kaons_cut.Fill(event.H_cal_etottracknorm, event.H_cer_npeSum)
    P_hgcer_vs_aero_npe_kaons_cut.Fill(event.P_hgcer_npeSum, event.P_aero_npeSum)
    P_hgcer_yx_kaons_cut.Fill(event.P_hgcer_yAtCer, event.P_hgcer_xAtCer)
    P_aero_yx_kaons_cut.Fill(event.P_aero_yAtAero, event.P_aero_xAtAero)
    eKCoinTime_vs_beta_kaons_cut.Fill(event.CTime_eKCoinTime_ROC1, event.P_gtr_beta)
    eKCoinTime_vs_MMK_kaons_cut.Fill(event.CTime_eKCoinTime_ROC1, event.MMK)
    P_RFTime_vs_MMK_kaons_cut.Fill(event.P_RF_Dist, event.MMK)
    Q2vsW_kaons_cut.Fill(event.Q2, event.W)
    phiqvst_kaons_cut.Fill(event.ph_q, -event.MandelT)
    P_cal_etottracknorm_vs_ngcer_npe_kaons_cut.Fill(event.P_cal_etottracknorm, event.P_ngcer_npeSum)
    P_ngcer_yx_kaons_cut.Fill(event.P_ngcer_yAtCer, event.P_ngcer_xAtCer)
    P_ngcer_vs_hgcer_npe_kaons_cut.Fill(event.P_ngcer_npeSum, event.P_hgcer_npeSum)
    P_ngcer_vs_aero_npe_kaons_cut.Fill(event.P_ngcer_npeSum, event.P_aero_npeSum)
    H_dp_vs_beta_kaons_cut.Fill(event.H_gtr_dp, event.H_gtr_beta)
    P_dp_vs_beta_kaons_cut.Fill(event.P_gtr_dp, event.P_gtr_beta)
    H_xfp_vs_beta_kaons_cut.Fill(event.H_dc_xfp, event.H_gtr_beta)
    P_xfp_vs_beta_kaons_cut.Fill(event.P_dc_xfp, event.P_gtr_beta)
    H_xpfp_vs_beta_kaons_cut.Fill(event.H_dc_xpfp, event.H_gtr_beta)
    P_xpfp_vs_beta_kaons_cut.Fill(event.P_dc_xpfp, event.P_gtr_beta)
    H_yfp_vs_beta_kaons_cut.Fill(event.H_dc_yfp, event.H_gtr_beta)
    P_yfp_vs_beta_kaons_cut.Fill(event.P_dc_yfp, event.P_gtr_beta)
    H_ypfp_vs_beta_kaons_cut.Fill(event.H_dc_ypfp, event.H_gtr_beta)
    P_ypfp_vs_beta_kaons_cut.Fill(event.P_dc_ypfp, event.P_gtr_beta)
    P_MMK_vs_beta_kaons_cut.Fill(event.MMK, event.P_gtr_beta)
    P_HGC_xy_npe_kaons_cut.Fill(event.P_hgcer_yAtCer,event.P_hgcer_xAtCer,event.P_hgcer_npeSum)
    P_Aero_xy_npe_kaons_cut.Fill(event.P_aero_yAtAero,event.P_aero_xAtAero,event.P_aero_npeSum)
    P_NGC_xy_npe_kaons_cut.Fill(event.P_ngcer_yAtCer,event.P_ngcer_xAtCer,event.P_ngcer_npeSum)

for event in Cut_Kaon_Events_Prompt_tree:
    P_beta_kaons_cut_prompt.Fill(event.P_gtr_beta)
    P_RFTime_kaons_cut_prompt.Fill(event.P_RF_Dist)
    eKCoinTime_kaons_cut_prompt.Fill(event.CTime_eKCoinTime_ROC1)
    P_MMK_kaons_cut_prompt.Fill(event.MMK)
    MMK_vs_eKCoinTime_kaons_cut_prompt.Fill(event.MMK, event.CTime_eKCoinTime_ROC1)

for event in Cut_Kaon_Events_Random_tree:
    P_beta_kaons_cut_randm.Fill(event.P_gtr_beta)
    P_RFTime_kaons_cut_randm.Fill(event.P_RF_Dist)
    eKCoinTime_kaons_cut_randm.Fill(event.CTime_eKCoinTime_ROC1)
    P_MMK_kaons_cut_randm.Fill(event.MMK)

################################################################################################################################################

# Filling Histograms for Protons
for event in Uncut_Proton_Events_tree:
    H_beta_protons_uncut.Fill(event.H_gtr_beta)
    H_xp_protons_uncut.Fill(event.H_gtr_xp)
    H_yp_protons_uncut.Fill(event.H_gtr_yp)
    H_dp_protons_uncut.Fill(event.H_gtr_dp)
    H_hod_goodscinhit_protons_uncut.Fill(event.H_hod_goodscinhit)
    H_hod_goodstarttime_protons_uncut.Fill(event.H_hod_goodstarttime)
    H_cal_etotnorm_protons_uncut.Fill(event.H_cal_etotnorm)
    H_cal_etottracknorm_protons_uncut.Fill(event.H_cal_etottracknorm)
    H_cer_npe_protons_uncut.Fill(event.H_cer_npeSum)
    H_RFTime_protons_uncut.Fill(event.H_RF_Dist)
    P_beta_protons_uncut.Fill(event.P_gtr_beta)
    P_xp_protons_uncut.Fill(event.P_gtr_xp)
    P_yp_protons_uncut.Fill(event.P_gtr_yp)
    P_dp_protons_uncut.Fill(event.P_gtr_dp)
    P_p_protons_uncut.Fill(event.P_gtr_p)
    P_hod_goodscinhit_protons_uncut.Fill(event.P_hod_goodscinhit)
    P_hod_goodstarttime_protons_uncut.Fill(event.P_hod_goodstarttime)
    P_cal_etotnorm_protons_uncut.Fill(event.P_cal_etotnorm)
    P_cal_etottracknorm_protons_uncut.Fill(event.P_cal_etottracknorm)
    P_hgcer_npe_protons_uncut.Fill(event.P_hgcer_npeSum)
    P_xhgcer_protons_uncut.Fill(event.P_hgcer_xAtCer)
    P_yhgcer_protons_uncut.Fill(event.P_hgcer_yAtCer)
    P_aero_npe_protons_uncut.Fill(event.P_aero_npeSum)
    P_xaero_protons_uncut.Fill(event.P_aero_xAtAero)
    P_yaero_protons_uncut.Fill(event.P_aero_yAtAero)
    P_ngcer_npe_protons_uncut.Fill(event.P_ngcer_npeSum)
    P_xngcer_protons_uncut.Fill(event.P_ngcer_xAtCer)
    P_yngcer_protons_uncut.Fill(event.P_ngcer_yAtCer)
    P_MMp_protons_uncut.Fill(event.MMp)
    P_RFTime_protons_uncut.Fill(event.P_RF_Dist)
    epCoinTime_protons_uncut.Fill(event.CTime_epCoinTime_ROC1)
    Q2_protons_uncut.Fill(event.Q2)
    W_protons_uncut.Fill(event.W)
    epsilon_protons_uncut.Fill(event.epsilon)
    phiq_protons_uncut.Fill(event.ph_q)
    #t_protons_uncut.Fill(-event.MandelT)
    H_cal_etottracknorm_vs_cer_npe_protons_uncut.Fill(event.H_cal_etottracknorm, event.H_cer_npeSum)
    P_hgcer_vs_aero_npe_protons_uncut.Fill(event.P_hgcer_npeSum, event.P_aero_npeSum)
    epCoinTime_vs_MMp_protons_uncut.Fill(event.CTime_epCoinTime_ROC1, event.MMp)
    P_RFTime_vs_MMp_protons_uncut.Fill(event.P_RF_Dist, event.MMp)
    P_hgcer_yx_protons_uncut.Fill(event.P_hgcer_yAtCer, event.P_hgcer_xAtCer)
    P_aero_yx_protons_uncut.Fill(event.P_aero_yAtAero, event.P_aero_xAtAero)
    epCoinTime_vs_beta_protons_uncut.Fill(event.CTime_epCoinTime_ROC1, event.P_gtr_beta)
    P_cal_etottracknorm_vs_ngcer_npe_protons_uncut.Fill(event.P_cal_etottracknorm, event.P_ngcer_npeSum)
    P_ngcer_yx_protons_uncut.Fill(event.P_ngcer_yAtCer, event.P_ngcer_xAtCer)
    P_ngcer_vs_hgcer_npe_protons_uncut.Fill(event.P_ngcer_npeSum, event.P_hgcer_npeSum)
    P_ngcer_vs_aero_npe_protons_uncut.Fill(event.P_ngcer_npeSum, event.P_aero_npeSum)
    H_dp_vs_beta_protons_uncut.Fill(event.H_gtr_dp, event.H_gtr_beta)
    P_dp_vs_beta_protons_uncut.Fill(event.P_gtr_dp, event.P_gtr_beta)
    H_xfp_vs_beta_protons_uncut.Fill(event.H_dc_xfp, event.H_gtr_beta)
    P_xfp_vs_beta_protons_uncut.Fill(event.P_dc_xfp, event.P_gtr_beta)
    H_xpfp_vs_beta_protons_uncut.Fill(event.H_dc_xpfp, event.H_gtr_beta)
    P_xpfp_vs_beta_protons_uncut.Fill(event.P_dc_xpfp, event.P_gtr_beta)
    H_yfp_vs_beta_protons_uncut.Fill(event.H_dc_yfp, event.H_gtr_beta)
    P_yfp_vs_beta_protons_uncut.Fill(event.P_dc_yfp, event.P_gtr_beta)
    H_ypfp_vs_beta_protons_uncut.Fill(event.H_dc_ypfp, event.H_gtr_beta)
    P_ypfp_vs_beta_protons_uncut.Fill(event.P_dc_ypfp, event.P_gtr_beta)
    P_MMp_vs_beta_protons_uncut.Fill(event.MMp, event.P_gtr_beta)
    P_HGC_xy_npe_protons_uncut.Fill(event.P_hgcer_yAtCer,event.P_hgcer_xAtCer,event.P_hgcer_npeSum)
    P_Aero_xy_npe_protons_uncut.Fill(event.P_aero_yAtAero,event.P_aero_xAtAero,event.P_aero_npeSum)
    P_NGC_xy_npe_protons_uncut.Fill(event.P_ngcer_yAtCer,event.P_ngcer_xAtCer,event.P_ngcer_npeSum)

for event in Cut_Proton_Events_All_tree:
    H_beta_protons_cut.Fill(event.H_gtr_beta)
    H_xp_protons_cut.Fill(event.H_gtr_xp)
    H_yp_protons_cut.Fill(event.H_gtr_yp)
    H_dp_protons_cut.Fill(event.H_gtr_dp)
    H_hod_goodscinhit_protons_cut.Fill(event.H_hod_goodscinhit)
    H_hod_goodstarttime_protons_cut.Fill(event.H_hod_goodstarttime)
    H_cal_etotnorm_protons_cut.Fill(event.H_cal_etotnorm)
    H_cal_etottracknorm_protons_cut.Fill(event.H_cal_etottracknorm)
    H_cer_npe_protons_cut.Fill(event.H_cer_npeSum)
    H_RFTime_protons_cut.Fill(event.H_RF_Dist)
    P_beta_protons_cut.Fill(event.P_gtr_beta)
    P_xp_protons_cut.Fill(event.P_gtr_xp)
    P_yp_protons_cut.Fill(event.P_gtr_yp)
    P_dp_protons_cut.Fill(event.P_gtr_dp)
    P_p_protons_cut.Fill(event.P_gtr_p)
    P_hod_goodscinhit_protons_cut.Fill(event.P_hod_goodscinhit)
    P_hod_goodstarttime_protons_cut.Fill(event.P_hod_goodstarttime)
    P_cal_etotnorm_protons_cut.Fill(event.P_cal_etotnorm)
    P_cal_etottracknorm_protons_cut.Fill(event.P_cal_etottracknorm)
    P_hgcer_npe_protons_cut.Fill(event.P_hgcer_npeSum)
    P_xhgcer_protons_cut.Fill(event.P_hgcer_xAtCer)
    P_yhgcer_protons_cut.Fill(event.P_hgcer_yAtCer)
    P_aero_npe_protons_cut.Fill(event.P_aero_npeSum)
    P_xaero_protons_cut.Fill(event.P_aero_xAtAero)
    P_yaero_protons_cut.Fill(event.P_aero_yAtAero)
    P_ngcer_npe_protons_cut.Fill(event.P_ngcer_npeSum)
    P_xngcer_protons_cut.Fill(event.P_ngcer_xAtCer)
    P_yngcer_protons_cut.Fill(event.P_ngcer_yAtCer)
    P_MMp_protons_cut.Fill(event.MMp)
    P_RFTime_protons_cut.Fill(event.P_RF_Dist)
    epCoinTime_protons_cut.Fill(event.CTime_epCoinTime_ROC1)
    Q2_protons_cut.Fill(event.Q2)
    W_protons_cut.Fill(event.W)
    epsilon_protons_cut.Fill(event.epsilon)
    phiq_protons_cut.Fill(event.ph_q)
    #t_protons_cut.Fill(-event.MandelT)
    H_cal_etottracknorm_vs_cer_npe_protons_cut.Fill(event.H_cal_etottracknorm, event.H_cer_npeSum)
    P_hgcer_vs_aero_npe_protons_cut.Fill(event.P_hgcer_npeSum, event.P_aero_npeSum)
    P_hgcer_yx_protons_cut.Fill(event.P_hgcer_yAtCer, event.P_hgcer_xAtCer)
    P_aero_yx_protons_cut.Fill(event.P_aero_yAtAero, event.P_aero_xAtAero)
    epCoinTime_vs_beta_protons_cut.Fill(event.CTime_epCoinTime_ROC1, event.P_gtr_beta)
    epCoinTime_vs_MMp_protons_cut.Fill(event.CTime_epCoinTime_ROC1, event.MMp)
    P_RFTime_vs_MMp_protons_cut.Fill(event.P_RF_Dist, event.MMp)
    Q2vsW_protons_cut.Fill(event.Q2, event.W)
    #phiqvst_protons_cut.Fill(event.ph_q, -event.MandelT)
    P_cal_etottracknorm_vs_ngcer_npe_protons_cut.Fill(event.P_cal_etottracknorm, event.P_ngcer_npeSum)
    P_ngcer_yx_protons_cut.Fill(event.P_ngcer_yAtCer, event.P_ngcer_xAtCer)
    P_ngcer_vs_hgcer_npe_protons_cut.Fill(event.P_ngcer_npeSum, event.P_hgcer_npeSum)
    P_ngcer_vs_aero_npe_protons_cut.Fill(event.P_ngcer_npeSum, event.P_aero_npeSum)
    H_dp_vs_beta_protons_cut.Fill(event.H_gtr_dp, event.H_gtr_beta)
    P_dp_vs_beta_protons_cut.Fill(event.P_gtr_dp, event.P_gtr_beta)
    H_xfp_vs_beta_protons_cut.Fill(event.H_dc_xfp, event.H_gtr_beta)
    P_xfp_vs_beta_protons_cut.Fill(event.P_dc_xfp, event.P_gtr_beta)
    H_xpfp_vs_beta_protons_cut.Fill(event.H_dc_xpfp, event.H_gtr_beta)
    P_xpfp_vs_beta_protons_cut.Fill(event.P_dc_xpfp, event.P_gtr_beta)
    H_yfp_vs_beta_protons_cut.Fill(event.H_dc_yfp, event.H_gtr_beta)
    P_yfp_vs_beta_protons_cut.Fill(event.P_dc_yfp, event.P_gtr_beta)
    H_ypfp_vs_beta_protons_cut.Fill(event.H_dc_ypfp, event.H_gtr_beta)
    P_ypfp_vs_beta_protons_cut.Fill(event.P_dc_ypfp, event.P_gtr_beta)
    P_MMp_vs_beta_protons_cut.Fill(event.MMp, event.P_gtr_beta)
    P_HGC_xy_npe_protons_cut.Fill(event.P_hgcer_yAtCer,event.P_hgcer_xAtCer,event.P_hgcer_npeSum)
    P_Aero_xy_npe_protons_cut.Fill(event.P_aero_yAtAero,event.P_aero_xAtAero,event.P_aero_npeSum)
    P_NGC_xy_npe_protons_cut.Fill(event.P_ngcer_yAtCer,event.P_ngcer_xAtCer,event.P_ngcer_npeSum)

for event in Cut_Proton_Events_Prompt_tree:
    P_beta_protons_cut_prompt.Fill(event.P_gtr_beta)
    P_RFTime_protons_cut_prompt.Fill(event.P_RF_Dist)
    epCoinTime_protons_cut_prompt.Fill(event.CTime_epCoinTime_ROC1)
    P_MMp_protons_cut_prompt.Fill(event.MMp)
    MMp_vs_epCoinTime_protons_cut_prompt.Fill(event.MMp, event.CTime_epCoinTime_ROC1)

for event in Cut_Proton_Events_Random_tree:
    P_beta_protons_cut_randm.Fill(event.P_gtr_beta)
    P_RFTime_protons_cut_randm.Fill(event.P_RF_Dist)
    epCoinTime_protons_cut_randm.Fill(event.CTime_epCoinTime_ROC1)
    P_MMp_protons_cut_randm.Fill(event.MMp)

print("Histograms filled")

#################################################################################################################################################

# Random subtraction from missing mass
for event in Cut_Pion_Events_Random_tree:
    P_MMpi_pions_cut_randm_scaled.Fill(event.MMpi)
    P_MMpi_pions_cut_randm_scaled.Scale(1.0/nWindows)
P_MMpi_pions_cut_randm_sub.Add(P_MMpi_pions_cut_prompt, P_MMpi_pions_cut_randm_scaled, 1, -1)

for event in Cut_Kaon_Events_Random_tree:
    P_MMK_kaons_cut_randm_scaled.Fill(event.MMK)
    P_MMK_kaons_cut_randm_scaled.Scale(1.0/nWindows)
P_MMK_kaons_cut_randm_sub.Add(P_MMK_kaons_cut_prompt, P_MMK_kaons_cut_randm_scaled, 1, -1)

for event in Cut_Proton_Events_Random_tree:
    P_MMp_protons_cut_randm_scaled.Fill(event.MMp)
    P_MMp_protons_cut_randm_scaled.Scale(1.0/nWindows)
P_MMp_protons_cut_randm_sub.Add(P_MMp_protons_cut_prompt, P_MMp_protons_cut_randm_scaled, 1, -1)

############################################################################################################################################

# HGC/NGC/Aero XY Projection vs npe for pions, kaons and protons.
HGC_proj_yx_pions_uncut = ROOT.TProfile2D(P_HGC_xy_npe_pions_uncut.Project3DProfile("yx"))
HGC_proj_yx_pions_cut = ROOT.TProfile2D(P_HGC_xy_npe_pions_cut.Project3DProfile("yx"))
NGC_proj_yx_pions_uncut = ROOT.TProfile2D(P_NGC_xy_npe_pions_uncut.Project3DProfile("yx"))
NGC_proj_yx_pions_cut = ROOT.TProfile2D(P_NGC_xy_npe_pions_cut.Project3DProfile("yx"))
Aero_proj_yx_pions_uncut = ROOT.TProfile2D(P_Aero_xy_npe_pions_uncut.Project3DProfile("yx"))
Aero_proj_yx_pions_cut = ROOT.TProfile2D(P_Aero_xy_npe_pions_cut.Project3DProfile("yx"))

HGC_proj_yx_kaons_uncut = ROOT.TProfile2D(P_HGC_xy_npe_kaons_uncut.Project3DProfile("yx"))
HGC_proj_yx_kaons_cut = ROOT.TProfile2D(P_HGC_xy_npe_kaons_cut.Project3DProfile("yx"))
NGC_proj_yx_kaons_uncut = ROOT.TProfile2D(P_NGC_xy_npe_kaons_uncut.Project3DProfile("yx"))
NGC_proj_yx_kaons_cut = ROOT.TProfile2D(P_NGC_xy_npe_kaons_cut.Project3DProfile("yx"))
Aero_proj_yx_kaons_uncut = ROOT.TProfile2D(P_Aero_xy_npe_kaons_uncut.Project3DProfile("yx"))
Aero_proj_yx_kaons_cut = ROOT.TProfile2D(P_Aero_xy_npe_kaons_cut.Project3DProfile("yx"))

HGC_proj_yx_protons_uncut = ROOT.TProfile2D(P_HGC_xy_npe_protons_uncut.Project3DProfile("yx"))
HGC_proj_yx_protons_cut = ROOT.TProfile2D(P_HGC_xy_npe_protons_cut.Project3DProfile("yx"))
NGC_proj_yx_protons_uncut = ROOT.TProfile2D(P_NGC_xy_npe_protons_uncut.Project3DProfile("yx"))
NGC_proj_yx_protons_cut = ROOT.TProfile2D(P_NGC_xy_npe_protons_cut.Project3DProfile("yx"))
Aero_proj_yx_protons_uncut = ROOT.TProfile2D(P_Aero_xy_npe_protons_uncut.Project3DProfile("yx"))
Aero_proj_yx_protons_cut = ROOT.TProfile2D(P_Aero_xy_npe_protons_cut.Project3DProfile("yx"))

############################################################################################################################################

# Saving pions histograms in PDF
c1_pions_kin = TCanvas("c1_pions_kin", "Pions Kinematic Distributions", 100, 0, 1000, 900)
c1_pions_kin.Divide(2,2)
c1_pions_kin.cd(1)
Q2vsW_pions_cut.Draw("COLZ")
c1_pions_kin.cd(2)
epsilon_pions_cut.Draw()
c1_pions_kin.cd(3)
phiqvst_pions_cut.SetStats(0)
phiqvst_pions_cut.GetYaxis().SetRangeUser(minrangeuser,maxrangeuser)
phiqvst_pions_cut.Draw("SURF2 POL")
# Section for polar plotting
gStyle.SetPalette(55)
gPad.SetTheta(90)
gPad.SetPhi(180)
tvsphi_title_pions = TPaveText(0.0277092,0.89779,0.096428,0.991854,"NDC")
tvsphi_title_pions.AddText("-t vs #phi")
tvsphi_title_pions.Draw()
ptphizero_pions = TPaveText(0.923951,0.513932,0.993778,0.574551,"NDC")
ptphizero_pions.AddText("#phi = 0")
ptphizero_pions.Draw()
phihalfpi_pions = TLine(0,0,0,0.6)
phihalfpi_pions.SetLineColor(kBlack)
phihalfpi_pions.SetLineWidth(2)
phihalfpi_pions.Draw()
ptphihalfpi_pions = TPaveText(0.417855,0.901876,0.486574,0.996358,"NDC")
ptphihalfpi_pions.AddText("#phi = #frac{#pi}{2}")
ptphihalfpi_pions.Draw()
phipi_pions = TLine(0,0,-0.6,0)
phipi_pions.SetLineColor(kBlack)
phipi_pions.SetLineWidth(2)
phipi_pions.Draw()
ptphipi_pions = TPaveText(0.0277092,0.514217,0.096428,0.572746,"NDC")
ptphipi_pions.AddText("#phi = #pi")
ptphipi_pions.Draw()
phithreepi_pions = TLine(0,0,0,-0.6)
phithreepi_pions.SetLineColor(kBlack)
phithreepi_pions.SetLineWidth(2)
phithreepi_pions.Draw()
ptphithreepi_pions = TPaveText(0.419517,0.00514928,0.487128,0.0996315,"NDC")
ptphithreepi_pions.AddText("#phi = #frac{3#pi}{2}")
ptphithreepi_pions.Draw()
Arc_pions = TArc()
for k in range(0, 6):
     Arc_pions.SetFillStyle(0)
     Arc_pions.SetLineWidth(2)
     # To change the arc radius we have to change number 0.825 in the lower line.
     Arc_pions.DrawArc(0,0,0.95*(k+1)/(10),0.,360.,"same")
tradius_pions = TGaxis(0,0,0.575,0,minrangeuser,maxrangeuser,10,"-+")
tradius_pions.SetLineColor(2)
tradius_pions.SetLabelColor(2)
tradius_pions.Draw()
phizero_pions = TLine(0,0,0.6,0)
phizero_pions.SetLineColor(kBlack)
phizero_pions.SetLineWidth(2)
phizero_pions.Draw()
# End of polar plotting section
c1_pions_kin.cd(4)
P_MMpi_pions_cut_randm_sub.Draw("hist")
# Section for Neutron Peak Events Selection
shadedpeak_pions = P_MMpi_pions_cut_randm_sub.Clone()
shadedpeak_pions.SetFillColor(2)
shadedpeak_pions.SetFillStyle(3244)
shadedpeak_pions.GetXaxis().SetRangeUser(minbin, maxbin)
shadedpeak_pions.Draw("samehist")
NeutronEvt_pions = TPaveText(0.58934,0.675,0.95,0.75,"NDC")
BinLow_pions = P_MMpi_pions_cut_randm_sub.GetXaxis().FindBin(minbin)
BinHigh_pions = P_MMpi_pions_cut_randm_sub.GetXaxis().FindBin(maxbin)
BinIntegral_pions = int(P_MMpi_pions_cut_randm_sub.Integral(BinLow_pions, BinHigh_pions))
NeutronEvt_pions.SetLineColor(2)
NeutronEvt_pions.AddText("e #pi n Events: %i" %(BinIntegral_pions))
NeutronEvt_pions.Draw()
# End of Neutron Peak Events Selection Section
c1_pions_kin.Print(Pion_Analysis_Distributions + '(')

c1_pions_acpt = TCanvas("c1_pions_acpt", "Electron-Pion Acceptance Distributions", 100, 0, 1000, 900)
c1_pions_acpt.Divide(3,2)
c1_pions_acpt.cd(1)
gPad.SetLogy()
H_xp_pions_uncut.SetLineColor(2)
H_xp_pions_uncut.Draw()
H_xp_pions_cut.SetLineColor(4)
H_xp_pions_cut.Draw("same")
c1_pions_acpt.cd(2)
gPad.SetLogy()
H_yp_pions_uncut.SetLineColor(2)
H_yp_pions_uncut.Draw()
H_yp_pions_cut.SetLineColor(4)
H_yp_pions_cut.Draw("same")
c1_pions_acpt.cd(3)
gPad.SetLogy()
H_dp_pions_uncut.SetMinimum(0.1*H_dp_pions_cut.GetMinimum()+1) # min of plot should be one order of magnitude below the min bin in cut distribution
H_dp_pions_uncut.SetMaximum(10*H_dp_pions_uncut.GetBinContent(H_dp_pions_uncut.GetMaximumBin())) # Max of plot should be 1 order of magnitude greater than the max bin in uncut distribution
H_dp_pions_uncut.SetLineColor(2)
H_dp_pions_cut.SetLineColor(4)
H_dp_pions_uncut.Draw()
H_dp_pions_cut.Draw("same")
# TLegend (x1, y1, x2, y2) 
legend1_pions = ROOT.TLegend(0.115, 0.8, 0.6, 0.9)
legend1_pions.AddEntry("H_dp_pions_uncut", "without cuts", "l")
legend1_pions.AddEntry("H_dp_pions_cut", "with cuts (acpt/RF/PID)", "l")
legend1_pions.Draw("same")
c1_pions_acpt.cd(4)
gPad.SetLogy()
P_xp_pions_uncut.SetLineColor(2)
P_xp_pions_uncut.Draw()
P_xp_pions_cut.SetLineColor(4)
P_xp_pions_cut.Draw("same")
c1_pions_acpt.cd(5)
gPad.SetLogy()
P_yp_pions_uncut.SetLineColor(2)
P_yp_pions_uncut.Draw()
P_yp_pions_cut.SetLineColor(4)
P_yp_pions_cut.Draw("same")
c1_pions_acpt.cd(6)
gPad.SetLogy()
P_dp_pions_uncut.SetMinimum(0.1*P_dp_pions_cut.GetMinimum()+1) # Implemented same fixed as used above for HMS
P_dp_pions_uncut.SetMaximum(10*P_dp_pions_uncut.GetBinContent(P_dp_pions_uncut.GetMaximumBin()))
P_dp_pions_uncut.SetLineColor(2)
P_dp_pions_uncut.Draw()
P_dp_pions_cut.SetLineColor(4)
P_dp_pions_cut.Draw("same")
c1_pions_acpt.Print(Pion_Analysis_Distributions)

c1_pions_pid = TCanvas("c1_pions_pid", "Electron-Pion CAL Distributions", 100, 0, 1000, 900)
c1_pions_pid.Divide(2,2)
c1_pions_pid.cd(1)
gPad.SetLogy()
H_cal_etottracknorm_pions_uncut.SetLineColor(2)
H_cal_etottracknorm_pions_uncut.Draw()
H_cal_etottracknorm_pions_cut.SetLineColor(4)
H_cal_etottracknorm_pions_cut.Draw("same")
legend2_pions = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend2_pions.AddEntry("H_cal_etottracknorm_pions_uncut", "without cuts", "l")
legend2_pions.AddEntry("H_cal_etottracknorm_pions_cut", "with cuts (acpt/RF/PID)", "l")
legend2_pions.Draw("same")
c1_pions_pid.cd(2)
H_cal_etottracknorm_vs_cer_npe_pions_cut.Draw("COLZ")
c1_pions_pid.cd(3)
gPad.SetLogy()
P_cal_etottracknorm_pions_uncut.SetLineColor(2)
P_cal_etottracknorm_pions_uncut.Draw()
P_cal_etottracknorm_pions_cut.SetLineColor(4)
P_cal_etottracknorm_pions_cut.Draw("same")
legend3_pions = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend3_pions.AddEntry("P_cal_etottracknorm_pions_uncut", "without cuts", "l")
legend3_pions.AddEntry("P_cal_etottracknorm_pions_cut", "with cuts (acpt/RF/PID)", "l")
legend3_pions.Draw("same")
c1_pions_pid.cd(4)
#
c1_pions_pid.Print(Pion_Analysis_Distributions)

c1_pions_RF = TCanvas("c1_pions_RF", "Electron-Pion RF Distributions", 100, 0, 1000, 900)
c1_pions_RF.Divide(2,2)
c1_pions_RF.cd(1)
P_RFTime_pions_uncut.SetLineColor(2)
P_RFTime_pions_uncut.Draw()
P_RFTime_pions_cut.SetLineColor(4)
P_RFTime_pions_cut.Draw("same")
legend4_pions = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend4_pions.AddEntry("P_RFTime_pions_uncut", "without cuts", "l")
legend4_pions.AddEntry("P_RFTime_pions_cut", "with cuts (acpt/RF/PID)", "l")
legend4_pions.Draw("same")
c1_pions_RF.cd(2)
P_RFTime_pions_cut.SetLineColor(2)
P_RFTime_pions_cut.Draw("same")
#legend5_pions = ROOT.TLegend(0.115, 0.835, 0.415, 0.9)
#legend5_pions.AddEntry("P_RFTime_pions_cut_noRF", "noRF_cuts (acpt/PID)", "l")
#legend5_pions.AddEntry("P_RFTime_pions_cut", "RF_cuts (acpt/PID)", "l")
#legend5_pions.Draw("same")
c1_pions_RF.cd(3)
P_RFTime_vs_MMpi_pions_uncut.Draw("COLZ")
c1_pions_RF.cd(4)
P_RFTime_vs_MMpi_pions_cut.Draw("COLZ")
c1_pions_RF.Print(Pion_Analysis_Distributions)

c2_pions_pid = TCanvas("c2_pions_pid", "Electron-Pion Aero/HGC/NGC PID Distributions", 100, 0, 1000, 900)
c2_pions_pid.Divide(2,2)
c2_pions_pid.cd(1)
gPad.SetLogy()
P_hgcer_npe_pions_uncut.SetLineColor(2)
P_hgcer_npe_pions_uncut.Draw()
P_hgcer_npe_pions_cut.SetLineColor(4)
P_hgcer_npe_pions_cut.Draw("same")
legend6_pions = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend6_pions.AddEntry("P_hgcer_npe_pions_uncut", "without cuts", "l")
legend6_pions.AddEntry("P_hgcer_npe_pions_cut", "with cuts (acpt/RF/PID)", "l")
legend6_pions.Draw("same")
c2_pions_pid.cd(2)
gPad.SetLogy()
P_aero_npe_pions_uncut.SetLineColor(2)
P_aero_npe_pions_uncut.Draw()
P_aero_npe_pions_cut.SetLineColor(4)
P_aero_npe_pions_cut.Draw("same")
legend7_pions = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend7_pions.AddEntry("P_aero_npe_pions_uncut", "without cuts", "l")
legend7_pions.AddEntry("P_aero_npe_pions_cut", "with cuts (acpt/RF/PID)", "l")
legend7_pions.Draw("same")
c2_pions_pid.cd(3)
gPad.SetLogy()
P_ngcer_npe_pions_uncut.SetLineColor(2)
P_ngcer_npe_pions_uncut.Draw()
P_ngcer_npe_pions_cut.SetLineColor(4)
P_ngcer_npe_pions_cut.Draw("same")
#legend8_pions = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
#legend8_pions.AddEntry("P_ngcer_npe_pions_uncut", "without cuts", "l")
#legend8_pions.AddEntry("P_ngcer_npe_pions_cut", "with cuts (acpt/RF/PID)", "l")
#legend8_pions.Draw("same")
c2_pions_pid.cd(4)
#
c2_pions_pid.Print(Pion_Analysis_Distributions)

c3_pions_pid = TCanvas("c3_pions_pid", "Electron-Pion Aero/HGC/NGC PID Distributions", 100, 0, 1000, 900)
c3_pions_pid.Divide(2,3)
c3_pions_pid.cd(1)
gPad.SetLogz()
P_hgcer_vs_aero_npe_pions_uncut.Draw("COLZ")
c3_pions_pid.cd(2)
gPad.SetLogz()
P_hgcer_vs_aero_npe_pions_cut.Draw("COLZ")
c3_pions_pid.cd(3)
gPad.SetLogz()
P_ngcer_vs_hgcer_npe_pions_uncut.Draw("COLZ")
c3_pions_pid.cd(4)
gPad.SetLogz()
P_ngcer_vs_hgcer_npe_pions_cut.Draw("COLZ")
c3_pions_pid.cd(5)
gPad.SetLogz()
P_ngcer_vs_aero_npe_pions_uncut.Draw("COLZ")
c3_pions_pid.cd(6)
gPad.SetLogz()
P_ngcer_vs_aero_npe_pions_cut.Draw("COLZ")
c3_pions_pid.Print(Pion_Analysis_Distributions)

c1_pions_MM = TCanvas("c1_pions_MM", "Electron-Pion CTime/Missing Mass Distributions", 100, 0, 1000, 900)
c1_pions_MM.Divide(3,2)
c1_pions_MM.cd(1)
ePiCoinTime_pions_uncut.SetLineColor(4)
ePiCoinTime_pions_uncut.Draw()
ePiCoinTime_pions_cut_prompt.SetLineColor(6)
ePiCoinTime_pions_cut_prompt.Draw("same")
ePiCoinTime_pions_cut_randm.SetLineColor(8)
ePiCoinTime_pions_cut_randm.Draw("same")
legend9_pions = ROOT.TLegend(0.1, 0.815, 0.48, 0.9)
legend9_pions.AddEntry("ePiCoinTime_pions_uncut", "CT_without cuts", "l")
legend9_pions.AddEntry("ePiCoinTime_pions_cut_prompt", "CT_prompt with cuts (acpt/RF/PID)", "l")
legend9_pions.AddEntry("ePiCoinTime_pions_cut_randm", "CT_randoms with cuts (acpt/RF/PID)", "l")
legend9_pions.Draw("same")
c1_pions_MM.cd(2)
ePiCoinTime_pions_cut.SetLineColor(4)
ePiCoinTime_pions_cut.Draw()
ePiCoinTime_pions_cut_prompt.SetLineColor(6)
ePiCoinTime_pions_cut_prompt.Draw("same")
ePiCoinTime_pions_cut_randm.SetLineColor(8)
ePiCoinTime_pions_cut_randm.Draw("same")
legend10_pions = ROOT.TLegend(0.1, 0.815, 0.48, 0.9)
legend10_pions.AddEntry("ePiCoinTime_pions_cut", "CT_with cuts (acpt/RF/PID)", "l")
legend10_pions.AddEntry("ePiCoinTime_pions_cut_prompt", "CT_prompt with cuts (acpt/RF/PID)", "l")
legend10_pions.AddEntry("ePiCoinTime_pions_cut_randm", "CT_randoms with cuts (acpt/RF/PID)", "l")
legend10_pions.Draw("same")
c1_pions_MM.cd(3)
P_MMpi_pions_uncut.Draw()
# Section for Neutron Peak Events Selection
#shadedpeak_pions = P_MMpi_pions_uncut.Clone()
#shadedpeak_pions.SetFillColor(2)
#shadedpeak_pions.SetFillStyle(3244)
#shadedpeak_pions.GetXaxis().SetRangeUser(minbin, maxbin)
#shadedpeak_pions.Draw("samehist")
#NeutronEvt_pions = TPaveText(0.58934,0.675,0.95,0.75,"NDC")
#BinLow_pions = P_MMpi_pions_uncut.GetXaxis().FindBin(minbin)
#BinHigh_pions = P_MMpi_pions_uncut.GetXaxis().FindBin(maxbin)
#BinIntegral_pions = int(P_MMpi_pions_uncut.Integral(BinLow, BinHigh))
#NeutronEvt_pions.SetLineColor(2)
#NeutronEvt_pions.AddText("e #pi n Events: %i" %(BinIntegral))
#NeutronEvt_pions.Draw()
c1_pions_MM.cd(4)
P_MMpi_pions_cut.SetLineColor(4)
P_MMpi_pions_cut.Draw()
P_MMpi_pions_cut_prompt.SetLineColor(6)
P_MMpi_pions_cut_prompt.Draw("same")
P_MMpi_pions_cut_randm.SetLineColor(8)
P_MMpi_pions_cut_randm.Draw("same")
legend11_pions = ROOT.TLegend(0.4, 0.815, 0.78, 0.9)
legend11_pions.AddEntry("P_MMpi_pions_cut", "MM with cuts (acpt/RF/PID)", "l")
legend11_pions.AddEntry("P_MMpi_pions_cut_prompt", "MM_prompt with cuts (acpt/RF/PID)", "l")
legend11_pions.AddEntry("P_MMpi_pions_cut_randm", "MM_randoms with cuts (acpt/RF/PID)", "l")
legend11_pions.Draw("same")
c1_pions_MM.cd(5)
P_MMpi_vs_beta_pions_uncut.Draw("COLZ")
c1_pions_MM.cd(6)
P_MMpi_vs_beta_pions_cut.Draw("COLZ")
c1_pions_MM.Print(Pion_Analysis_Distributions)

c1_pions_CT = TCanvas("c1_pions_CT", "Electron-Pion CTime Distributions", 100, 0, 1000, 900)
c1_pions_CT.Divide(2,2)
c1_pions_CT.cd(1)
ePiCoinTime_vs_beta_pions_uncut.Draw("COLZ")
# TLine (x1, y1, x2, y2)
LowerPrompt1_pions = TLine(PromptWindow[0],gPad.GetUymin(),PromptWindow[0],2)
LowerPrompt1_pions.SetLineColor(2)
LowerPrompt1_pions.SetLineWidth(2)
LowerPrompt1_pions.Draw("same")
UpperPrompt1_pions = TLine(PromptWindow[1],gPad.GetUymin(),PromptWindow[1],2)
UpperPrompt1_pions.SetLineColor(2)
UpperPrompt1_pions.SetLineWidth(2)
UpperPrompt1_pions.Draw("same")
LowerRandomL1_pions = TLine(RandomWindows[0],gPad.GetUymin(),RandomWindows[0],2)
LowerRandomL1_pions.SetLineColor(8)
LowerRandomL1_pions.SetLineWidth(2)
LowerRandomL1_pions.Draw("same")
UpperRandomL1_pions = TLine(RandomWindows[1],gPad.GetUymin(),RandomWindows[1],2)
UpperRandomL1_pions.SetLineColor(8)
UpperRandomL1_pions.SetLineWidth(2)
UpperRandomL1_pions.Draw("same")
LowerRandomR1_pions = TLine(RandomWindows[2],gPad.GetUymin(),RandomWindows[2],2)
LowerRandomR1_pions.SetLineColor(8)
LowerRandomR1_pions.SetLineWidth(2)
LowerRandomR1_pions.Draw("same")
UpperRandomR1_pions = TLine(RandomWindows[3],gPad.GetUymin(),RandomWindows[3],2)
UpperRandomR1_pions.SetLineColor(8)
UpperRandomR1_pions.SetLineWidth(2)
UpperRandomR1_pions.Draw("same")
c1_pions_CT.cd(2)
ePiCoinTime_vs_beta_pions_cut.Draw("COLZ")
c1_pions_CT.cd(3)
ePiCoinTime_vs_MMpi_pions_uncut.Draw("COLZ")
LowerPrompt2_pions = TLine(PromptWindow[0],gPad.GetUymin(),PromptWindow[0],2)
LowerPrompt2_pions.SetLineColor(2)
LowerPrompt2_pions.SetLineWidth(2)
LowerPrompt2_pions.Draw("same")
UpperPrompt2_pions = TLine(PromptWindow[1],gPad.GetUymin(),PromptWindow[1],2)
UpperPrompt2_pions.SetLineColor(2)
UpperPrompt2_pions.SetLineWidth(2)
UpperPrompt2_pions.Draw("same")
LowerRandomL2_pions = TLine(RandomWindows[0],gPad.GetUymin(),RandomWindows[0],2)
LowerRandomL2_pions.SetLineColor(8)
LowerRandomL2_pions.SetLineWidth(2)
LowerRandomL2_pions.Draw("same")
UpperRandomL2_pions = TLine(RandomWindows[1],gPad.GetUymin(),RandomWindows[1],2)
UpperRandomL2_pions.SetLineColor(8)
UpperRandomL2_pions.SetLineWidth(2)
UpperRandomL2_pions.Draw("same")
LowerRandomR2_pions = TLine(RandomWindows[2],gPad.GetUymin(),RandomWindows[2],2)
LowerRandomR2_pions.SetLineColor(8)
LowerRandomR2_pions.SetLineWidth(2)
LowerRandomR2_pions.Draw("same")
UpperRandomR2_pions = TLine(RandomWindows[3],gPad.GetUymin(),RandomWindows[3],2)
UpperRandomR2_pions.SetLineColor(8)
UpperRandomR2_pions.SetLineWidth(2)
UpperRandomR2_pions.Draw("same")
c1_pions_CT.cd(4)
ePiCoinTime_vs_MMpi_pions_cut.Draw("COLZ")
c1_pions_CT.Print(Pion_Analysis_Distributions)

c1_pions_delta = TCanvas("c1_pions_delta", "Delta Debugging", 100, 0, 1000, 900)
c1_pions_delta.Divide(2,2)
c1_pions_delta.cd(1)
H_dp_vs_beta_pions_uncut.Draw("COLZ")
c1_pions_delta.cd(2)
H_dp_vs_beta_pions_cut.Draw("COLZ")
c1_pions_delta.cd(3)
P_dp_vs_beta_pions_uncut.Draw("COLZ")
c1_pions_delta.cd(4)
P_dp_vs_beta_pions_cut.Draw("COLZ")
c1_pions_delta.Print(Pion_Analysis_Distributions)

c1_pions_fpH = TCanvas("c1_pions_fpH", "HMS Focal Plane and Beta", 100, 0, 1000, 900)
c1_pions_fpH.Divide(2,2)
c1_pions_fpH.cd(1)
H_xfp_vs_beta_pions_uncut.Draw("COLZ")
c1_pions_fpH.cd(2)
H_xfp_vs_beta_pions_cut.Draw("COLZ")
c1_pions_fpH.cd(3)
H_yfp_vs_beta_pions_uncut.Draw("COLZ")
c1_pions_fpH.cd(4)
H_yfp_vs_beta_pions_cut.Draw("COLZ")
c1_pions_fpH.Print(Pion_Analysis_Distributions)

c1_pions_fpP = TCanvas("c1_pions_fpP", "SHMS Focal Plane and Beta", 100, 0, 1000, 900)
c1_pions_fpP.Divide(2,2)
c1_pions_fpP.cd(1)
P_xfp_vs_beta_pions_uncut.Draw("COLZ")
c1_pions_fpP.cd(2)
P_xfp_vs_beta_pions_cut.Draw("COLZ")
c1_pions_fpP.cd(3)
P_yfp_vs_beta_pions_uncut.Draw("COLZ")
c1_pions_fpP.cd(4)
P_yfp_vs_beta_pions_cut.Draw("COLZ")
c1_pions_fpP.Print(Pion_Analysis_Distributions)

c1_pions_proj = TCanvas("c1_pions_proj", "HGC/NGC/Aero XY Projection", 100, 0, 1000, 900)
c1_pions_proj.Divide(2,3)
c1_pions_proj.cd(1)
HGC_proj_yx_pions_uncut.Draw("COLZ")
c1_pions_proj.cd(2)
HGC_proj_yx_pions_cut.Draw("COLZ")
c1_pions_proj.cd(3)
NGC_proj_yx_pions_uncut.Draw("COLZ")
c1_pions_proj.cd(4)
NGC_proj_yx_pions_cut.Draw("COLZ")
c1_pions_proj.cd(5)
Aero_proj_yx_pions_uncut.Draw("COLZ")
c1_pions_proj.cd(6)
Aero_proj_yx_pions_cut.Draw("COLZ")
c1_pions_proj.Print(Pion_Analysis_Distributions + ')')

# Saving kaons histograms in PDF
c1_kaons_kin = TCanvas("c1_kaons_kin", "Kaons Kinematic Distributions", 100, 0, 1000, 900)
c1_kaons_kin.Divide(2,2)
c1_kaons_kin.cd(1)
Q2vsW_kaons_cut.Draw("COLZ")
c1_kaons_kin.cd(2)
epsilon_kaons_cut.Draw()
c1_kaons_kin.cd(3)
phiqvst_kaons_cut.SetStats(0)
phiqvst_kaons_cut.GetYaxis().SetRangeUser(minrangeuser,maxrangeuser)
phiqvst_kaons_cut.Draw("SURF2 POL")
# Section for polar plotting
gStyle.SetPalette(55)
gPad.SetTheta(90)
gPad.SetPhi(180)
tvsphi_title_kaons = TPaveText(0.0277092,0.89779,0.096428,0.991854,"NDC")
tvsphi_title_kaons.AddText("-t vs #phi")
tvsphi_title_kaons.Draw()
ptphizero_kaons = TPaveText(0.923951,0.513932,0.993778,0.574551,"NDC")
ptphizero_kaons.AddText("#phi = 0")
ptphizero_kaons.Draw()
phihalfpi_kaons = TLine(0,0,0,0.6)
phihalfpi_kaons.SetLineColor(kBlack)
phihalfpi_kaons.SetLineWidth(2)
phihalfpi_kaons.Draw()
ptphihalfpi_kaons = TPaveText(0.417855,0.901876,0.486574,0.996358,"NDC")
ptphihalfpi_kaons.AddText("#phi = #frac{#pi}{2}")
ptphihalfpi_kaons.Draw()
phipi_kaons = TLine(0,0,-0.6,0)
phipi_kaons.SetLineColor(kBlack)
phipi_kaons.SetLineWidth(2)
phipi_kaons.Draw()
ptphipi_kaons = TPaveText(0.0277092,0.514217,0.096428,0.572746,"NDC")
ptphipi_kaons.AddText("#phi = #pi")
ptphipi_kaons.Draw()
phithreepi_kaons = TLine(0,0,0,-0.6)
phithreepi_kaons.SetLineColor(kBlack)
phithreepi_kaons.SetLineWidth(2)
phithreepi_kaons.Draw()
ptphithreepi_kaons = TPaveText(0.419517,0.00514928,0.487128,0.0996315,"NDC")
ptphithreepi_kaons.AddText("#phi = #frac{3#pi}{2}")
ptphithreepi_kaons.Draw()
Arc_kaons = TArc()
for k in range(0, 6):
     Arc_kaons.SetFillStyle(0)
     Arc_kaons.SetLineWidth(2)
     # To change the arc radius we have to change number 0.825 in the lower line.
     Arc_kaons.DrawArc(0,0,0.95*(k+1)/(10),0.,360.,"same")
tradius_kaons = TGaxis(0,0,0.575,0,minrangeuser,maxrangeuser,10,"-+")
tradius_kaons.SetLineColor(2)
tradius_kaons.SetLabelColor(2)
tradius_kaons.Draw()
phizero_kaons = TLine(0,0,0.6,0)
phizero_kaons.SetLineColor(kBlack)
phizero_kaons.SetLineWidth(2)
phizero_kaons.Draw()
# End of polar plotting section
c1_kaons_kin.cd(4)
P_MMK_kaons_cut_randm_sub.Draw("hist")
# Section for Neutron Peak Events Selection
shadedpeak_kaons = P_MMK_kaons_cut_randm_sub.Clone()
shadedpeak_kaons.SetFillColor(2)
shadedpeak_kaons.SetFillStyle(3244)
shadedpeak_kaons.GetXaxis().SetRangeUser(minbin, maxbin)
shadedpeak_kaons.Draw("samehist")
NeutronEvt_kaons = TPaveText(0.58934,0.675,0.95,0.75,"NDC")
BinLow_kaons = P_MMK_kaons_cut_randm_sub.GetXaxis().FindBin(minbin)
BinHigh_kaons = P_MMK_kaons_cut_randm_sub.GetXaxis().FindBin(maxbin)
BinIntegral_kaons = int(P_MMK_kaons_cut_randm_sub.Integral(BinLow_kaons, BinHigh_kaons))
NeutronEvt_kaons.SetLineColor(2)
NeutronEvt_kaons.AddText("e K n Events: %i" %(BinIntegral_kaons))
NeutronEvt_kaons.Draw()
# End of Neutron Peak Events Selection Section
c1_kaons_kin.Print(Kaon_Analysis_Distributions + '(')

c1_kaons_acpt = TCanvas("c1_kaons_acpt", "Electron-Kaon Acceptance Distributions", 100, 0, 1000, 900)
c1_kaons_acpt.Divide(3,2)
c1_kaons_acpt.cd(1)
gPad.SetLogy()
H_xp_kaons_uncut.SetLineColor(2)
H_xp_kaons_uncut.Draw()
H_xp_kaons_cut.SetLineColor(4)
H_xp_kaons_cut.Draw("same")
c1_kaons_acpt.cd(2)
gPad.SetLogy()
H_yp_kaons_uncut.SetLineColor(2)
H_yp_kaons_uncut.Draw()
H_yp_kaons_cut.SetLineColor(4)
H_yp_kaons_cut.Draw("same")
c1_kaons_acpt.cd(3)
gPad.SetLogy()
H_dp_kaons_uncut.SetMinimum(0.1*H_dp_kaons_cut.GetMinimum()+1) # min of plot should be one order of magnitude below the min bin in cut distribution
H_dp_kaons_uncut.SetMaximum(10*H_dp_kaons_uncut.GetBinContent(H_dp_kaons_uncut.GetMaximumBin())) # Max of plot should be 1 order of magnitude greater than the max bin in uncut distribution
H_dp_kaons_uncut.SetLineColor(2)
H_dp_kaons_cut.SetLineColor(4)
H_dp_kaons_uncut.Draw()
H_dp_kaons_cut.Draw("same")
# TLegend (x1, y1, x2, y2) 
legend12_kaons = ROOT.TLegend(0.115, 0.8, 0.6, 0.9)
legend12_kaons.AddEntry("H_dp_kaons_uncut", "without cuts", "l")
legend12_kaons.AddEntry("H_dp_kaons_cut", "with cuts (acpt/RF/PID)", "l")
legend12_kaons.Draw("same")
c1_kaons_acpt.cd(4)
gPad.SetLogy()
P_xp_kaons_uncut.SetLineColor(2)
P_xp_kaons_uncut.Draw()
P_xp_kaons_cut.SetLineColor(4)
P_xp_kaons_cut.Draw("same")
c1_kaons_acpt.cd(5)
gPad.SetLogy()
P_yp_kaons_uncut.SetLineColor(2)
P_yp_kaons_uncut.Draw()
P_yp_kaons_cut.SetLineColor(4)
P_yp_kaons_cut.Draw("same")
c1_kaons_acpt.cd(6)
gPad.SetLogy()
P_dp_kaons_uncut.SetMinimum(0.1*P_dp_kaons_cut.GetMinimum()+1) # Implemented same fixed as used above for HMS
P_dp_kaons_uncut.SetMaximum(10*P_dp_kaons_uncut.GetBinContent(P_dp_kaons_uncut.GetMaximumBin()))
P_dp_kaons_uncut.SetLineColor(2)
P_dp_kaons_uncut.Draw()
P_dp_kaons_cut.SetLineColor(4)
P_dp_kaons_cut.Draw("same")
c1_kaons_acpt.Print(Kaon_Analysis_Distributions)

c1_kaons_pid = TCanvas("c1_kaons_pid", "Electron-Kaon CAL Distributions", 100, 0, 1000, 900)
c1_kaons_pid.Divide(2,2)
c1_kaons_pid.cd(1)
gPad.SetLogy()
H_cal_etottracknorm_kaons_uncut.SetLineColor(2)
H_cal_etottracknorm_kaons_uncut.Draw()
H_cal_etottracknorm_kaons_cut.SetLineColor(4)
H_cal_etottracknorm_kaons_cut.Draw("same")
legend13_kaons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend13_kaons.AddEntry("H_cal_etottracknorm_kaons_uncut", "without cuts", "l")
legend13_kaons.AddEntry("H_cal_etottracknorm_kaons_cut", "with cuts (acpt/RF/PID)", "l")
legend13_kaons.Draw("same")
c1_kaons_pid.cd(2)
H_cal_etottracknorm_vs_cer_npe_kaons_cut.Draw("COLZ")
c1_kaons_pid.cd(3)
gPad.SetLogy()
P_cal_etottracknorm_kaons_uncut.SetLineColor(2)
P_cal_etottracknorm_kaons_uncut.Draw()
P_cal_etottracknorm_kaons_cut.SetLineColor(4)
P_cal_etottracknorm_kaons_cut.Draw("same")
legend14_kaons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend14_kaons.AddEntry("P_cal_etottracknorm_kaons_uncut", "without cuts", "l")
legend14_kaons.AddEntry("P_cal_etottracknorm_kaons_cut", "with cuts (acpt/RF/PID)", "l")
legend14_kaons.Draw("same")
c1_kaons_pid.cd(4)
#
c1_kaons_pid.Print(Kaon_Analysis_Distributions)

c1_kaons_RF = TCanvas("c1_kaons_RF", "Electron-Kaon RF Distributions", 100, 0, 1000, 900)
c1_kaons_RF.Divide(2,2)
c1_kaons_RF.cd(1)
P_RFTime_kaons_uncut.SetLineColor(2)
P_RFTime_kaons_uncut.Draw()
P_RFTime_kaons_cut.SetLineColor(4)
P_RFTime_kaons_cut.Draw("same")
legend15_kaons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend15_kaons.AddEntry("P_RFTime_kaons_uncut", "without cuts", "l")
legend15_kaons.AddEntry("P_RFTime_kaons_cut", "with cuts (acpt/RF/PID)", "l")
legend15_kaons.Draw("same")
c1_kaons_RF.cd(2)
P_RFTime_kaons_cut.SetLineColor(2)
P_RFTime_kaons_cut.Draw("same")
#legend16_kaons = ROOT.TLegend(0.115, 0.835, 0.415, 0.9)
#legend16_kaons.AddEntry("P_RFTime_kaons_cut_noRF", "noRF_cuts (acpt/PID)", "l")
#legend16_kaons.AddEntry("P_RFTime_kaons_cut", "RF_cuts (acpt/PID)", "l")
#legend16_kaons.Draw("same")
c1_kaons_RF.cd(3)
P_RFTime_vs_MMK_kaons_uncut.Draw("COLZ")
c1_kaons_RF.cd(4)
P_RFTime_vs_MMK_kaons_cut.Draw("COLZ")
c1_kaons_RF.Print(Kaon_Analysis_Distributions)

c2_kaons_pid = TCanvas("c2_kaons_pid", "Electron-Kaon Aero/HGC/NGC PID Distributions", 100, 0, 1000, 900)
c2_kaons_pid.Divide(2,2)
c2_kaons_pid.cd(1)
gPad.SetLogy()
P_hgcer_npe_kaons_uncut.SetLineColor(2)
P_hgcer_npe_kaons_uncut.Draw()
P_hgcer_npe_kaons_cut.SetLineColor(4)
P_hgcer_npe_kaons_cut.Draw("same")
legend17_kaons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend17_kaons.AddEntry("P_hgcer_npe_kaons_uncut", "without cuts", "l")
legend17_kaons.AddEntry("P_hgcer_npe_kaons_cut", "with cuts (acpt/RF/PID)", "l")
legend17_kaons.Draw("same")
c2_kaons_pid.cd(2)
gPad.SetLogy()
P_aero_npe_kaons_uncut.SetLineColor(2)
P_aero_npe_kaons_uncut.Draw()
P_aero_npe_kaons_cut.SetLineColor(4)
P_aero_npe_kaons_cut.Draw("same")
legend18_kaons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend18_kaons.AddEntry("P_aero_npe_kaons_uncut", "without cuts", "l")
legend18_kaons.AddEntry("P_aero_npe_kaons_cut", "with cuts (acpt/RF/PID)", "l")
legend18_kaons.Draw("same")
c2_kaons_pid.cd(3)
gPad.SetLogy()
P_ngcer_npe_kaons_uncut.SetLineColor(2)
P_ngcer_npe_kaons_uncut.Draw()
P_ngcer_npe_kaons_cut.SetLineColor(4)
P_ngcer_npe_kaons_cut.Draw("same")
#legend19_kaons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
#legend19_kaons.AddEntry("P_ngcer_npe_kaons_uncut", "without cuts", "l")
#legend19_kaons.AddEntry("P_ngcer_npe_kaons_cut", "with cuts (acpt/RF/PID)", "l")
#legend19_kaons.Draw("same")
c2_kaons_pid.cd(4)
#
c2_kaons_pid.Print(Kaon_Analysis_Distributions)

c3_kaons_pid = TCanvas("c3_kaons_pid", "Electron-Kaon Aero/HGC/NGC PID Distributions", 100, 0, 1000, 900)
c3_kaons_pid.Divide(2,3)
c3_kaons_pid.cd(1)
gPad.SetLogz()
P_hgcer_vs_aero_npe_kaons_uncut.Draw("COLZ")
c3_kaons_pid.cd(2)
gPad.SetLogz()
P_hgcer_vs_aero_npe_kaons_cut.Draw("COLZ")
c3_kaons_pid.cd(3)
gPad.SetLogz()
P_ngcer_vs_hgcer_npe_kaons_uncut.Draw("COLZ")
c3_kaons_pid.cd(4)
gPad.SetLogz()
P_ngcer_vs_hgcer_npe_kaons_cut.Draw("COLZ")
c3_kaons_pid.cd(5)
gPad.SetLogz()
P_ngcer_vs_aero_npe_kaons_uncut.Draw("COLZ")
c3_kaons_pid.cd(6)
gPad.SetLogz()
P_ngcer_vs_aero_npe_kaons_cut.Draw("COLZ")
c3_kaons_pid.Print(Kaon_Analysis_Distributions)

c1_kaons_MM = TCanvas("c1_kaons_MM", "Electron-Kaon CTime/Missing Mass Distributions", 100, 0, 1000, 900)
c1_kaons_MM.Divide(3,2)
c1_kaons_MM.cd(1)
eKCoinTime_kaons_uncut.SetLineColor(4)
eKCoinTime_kaons_uncut.Draw()
eKCoinTime_kaons_cut_prompt.SetLineColor(6)
eKCoinTime_kaons_cut_prompt.Draw("same")
eKCoinTime_kaons_cut_randm.SetLineColor(8)
eKCoinTime_kaons_cut_randm.Draw("same")
legend20_kaons = ROOT.TLegend(0.1, 0.815, 0.48, 0.9)
legend20_kaons.AddEntry("eKCoinTime_kaons_uncut", "CT_without cuts", "l")
legend20_kaons.AddEntry("eKCoinTime_kaons_cut_prompt", "CT_prompt with cuts (acpt/RF/PID)", "l")
legend20_kaons.AddEntry("eKCoinTime_kaons_cut_randm", "CT_randoms with cuts (acpt/RF/PID)", "l")
legend20_kaons.Draw("same")
c1_kaons_MM.cd(2)
eKCoinTime_kaons_cut.SetLineColor(4)
eKCoinTime_kaons_cut.Draw()
eKCoinTime_kaons_cut_prompt.SetLineColor(6)
eKCoinTime_kaons_cut_prompt.Draw("same")
eKCoinTime_kaons_cut_randm.SetLineColor(8)
eKCoinTime_kaons_cut_randm.Draw("same")
legend21_kaons = ROOT.TLegend(0.1, 0.815, 0.48, 0.9)
legend21_kaons.AddEntry("eKCoinTime_kaons_cut", "CT_with cuts (acpt/RF/PID)", "l")
legend21_kaons.AddEntry("eKCoinTime_kaons_cut_prompt", "CT_prompt with cuts (acpt/RF/PID)", "l")
legend21_kaons.AddEntry("eKCoinTime_kaons_cut_randm", "CT_randoms with cuts (acpt/RF/PID)", "l")
legend21_kaons.Draw("same")
c1_kaons_MM.cd(3)
P_MMK_kaons_uncut.Draw()
# Section for Neutron Peak Events Selection
#shadedpeak_kaons = P_MMK_kaons_uncut.Clone()
#shadedpeak_kaons.SetFillColor(2)
#shadedpeak_kaons.SetFillStyle(3244)
#shadedpeak_kaons.GetXaxis().SetRangeUser(minbin, maxbin)
#shadedpeak_kaons.Draw("samehist")
#NeutronEvt_kaons = TPaveText(0.58934,0.675,0.95,0.75,"NDC")
#BinLow_kaons = P_MMK_kaons_uncut.GetXaxis().FindBin(minbin)
#BinHigh_kaons = P_MMK_kaons_uncut.GetXaxis().FindBin(maxbin)
#BinIntegral_kaons = int(P_MMK_kaons_uncut.Integral(BinLow_kaons, BinHigh_kaons))
#NeutronEvt_kaons.SetLineColor(2)
#NeutronEvt_kaons.AddText("e K n Events: %i" %(BinIntegral_kaons))
#NeutronEvt_kaons.Draw()
c1_kaons_MM.cd(4)
P_MMK_kaons_cut.SetLineColor(4)
P_MMK_kaons_cut.Draw()
P_MMK_kaons_cut_prompt.SetLineColor(6)
P_MMK_kaons_cut_prompt.Draw("same")
P_MMK_kaons_cut_randm.SetLineColor(8)
P_MMK_kaons_cut_randm.Draw("same")
legend22_kaons = ROOT.TLegend(0.4, 0.815, 0.78, 0.9)
legend22_kaons.AddEntry("P_MMK_kaons_cut", "MM with cuts (acpt/RF/PID)", "l")
legend22_kaons.AddEntry("P_MMK_kaons_cut_prompt", "MM_prompt with cuts (acpt/RF/PID)", "l")
legend22_kaons.AddEntry("P_MMK_kaons_cut_randm", "MM_randoms with cuts (acpt/RF/PID)", "l")
legend15_kaons.Draw("same")
c1_kaons_MM.cd(5)
P_MMK_vs_beta_kaons_uncut.Draw("COLZ")
c1_kaons_MM.cd(6)
P_MMK_vs_beta_kaons_cut.Draw("COLZ")
c1_kaons_MM.Print(Kaon_Analysis_Distributions)

c1_kaons_CT = TCanvas("c1_kaons_CT", "Electron-Kaon CTime Distributions", 100, 0, 1000, 900)
c1_kaons_CT.Divide(2,2)
c1_kaons_CT.cd(1)
eKCoinTime_vs_beta_kaons_uncut.Draw("COLZ")
# TLine (x1, y1, x2, y2)
LowerPrompt1_kaons = TLine(PromptWindow[0],gPad.GetUymin(),PromptWindow[0],2)
LowerPrompt1_kaons.SetLineColor(2)
LowerPrompt1_kaons.SetLineWidth(2)
LowerPrompt1_kaons.Draw("same")
UpperPrompt1_kaons = TLine(PromptWindow[1],gPad.GetUymin(),PromptWindow[1],2)
UpperPrompt1_kaons.SetLineColor(2)
UpperPrompt1_kaons.SetLineWidth(2)
UpperPrompt1_kaons.Draw("same")
LowerRandomL1_kaons = TLine(RandomWindows[0],gPad.GetUymin(),RandomWindows[0],2)
LowerRandomL1_kaons.SetLineColor(8)
LowerRandomL1_kaons.SetLineWidth(2)
LowerRandomL1_kaons.Draw("same")
UpperRandomL1_kaons = TLine(RandomWindows[1],gPad.GetUymin(),RandomWindows[1],2)
UpperRandomL1_kaons.SetLineColor(8)
UpperRandomL1_kaons.SetLineWidth(2)
UpperRandomL1_kaons.Draw("same")
LowerRandomR1_kaons = TLine(RandomWindows[2],gPad.GetUymin(),RandomWindows[2],2)
LowerRandomR1_kaons.SetLineColor(8)
LowerRandomR1_kaons.SetLineWidth(2)
LowerRandomR1_kaons.Draw("same")
UpperRandomR1_kaons = TLine(RandomWindows[3],gPad.GetUymin(),RandomWindows[3],2)
UpperRandomR1_kaons.SetLineColor(8)
UpperRandomR1_kaons.SetLineWidth(2)
UpperRandomR1_kaons.Draw("same")
c1_kaons_CT.cd(2)
eKCoinTime_vs_beta_kaons_cut.Draw("COLZ")
c1_kaons_CT.cd(3)
eKCoinTime_vs_MMK_kaons_uncut.Draw("COLZ")
LowerPrompt2_kaons = TLine(PromptWindow[0],gPad.GetUymin(),PromptWindow[0],2)
LowerPrompt2_kaons.SetLineColor(2)
LowerPrompt2_kaons.SetLineWidth(2)
LowerPrompt2_kaons.Draw("same")
UpperPrompt2_kaons = TLine(PromptWindow[1],gPad.GetUymin(),PromptWindow[1],2)
UpperPrompt2_kaons.SetLineColor(2)
UpperPrompt2_kaons.SetLineWidth(2)
UpperPrompt2_kaons.Draw("same")
LowerRandomL2_kaons = TLine(RandomWindows[0],gPad.GetUymin(),RandomWindows[0],2)
LowerRandomL2_kaons.SetLineColor(8)
LowerRandomL2_kaons.SetLineWidth(2)
LowerRandomL2_kaons.Draw("same")
UpperRandomL2_kaons = TLine(RandomWindows[1],gPad.GetUymin(),RandomWindows[1],2)
UpperRandomL2_kaons.SetLineColor(8)
UpperRandomL2_kaons.SetLineWidth(2)
UpperRandomL2_kaons.Draw("same")
LowerRandomR2_kaons = TLine(RandomWindows[2],gPad.GetUymin(),RandomWindows[2],2)
LowerRandomR2_kaons.SetLineColor(8)
LowerRandomR2_kaons.SetLineWidth(2)
LowerRandomR2_kaons.Draw("same")
UpperRandomR2_kaons = TLine(RandomWindows[3],gPad.GetUymin(),RandomWindows[3],2)
UpperRandomR2_kaons.SetLineColor(8)
UpperRandomR2_kaons.SetLineWidth(2)
UpperRandomR2_kaons.Draw("same")
c1_kaons_CT.cd(4)
eKCoinTime_vs_MMK_kaons_cut.Draw("COLZ")
c1_kaons_CT.Print(Kaon_Analysis_Distributions)

c1_kaons_delta = TCanvas("c1_kaons_delta", "Delta Debugging", 100, 0, 1000, 900)
c1_kaons_delta.Divide(2,2)
c1_kaons_delta.cd(1)
H_dp_vs_beta_kaons_uncut.Draw("COLZ")
c1_kaons_delta.cd(2)
H_dp_vs_beta_kaons_cut.Draw("COLZ")
c1_kaons_delta.cd(3)
P_dp_vs_beta_kaons_uncut.Draw("COLZ")
c1_kaons_delta.cd(4)
P_dp_vs_beta_kaons_cut.Draw("COLZ")
c1_kaons_delta.Print(Kaon_Analysis_Distributions)

c1_kaons_fpH = TCanvas("c1_kaons_fpH", "HMS Focal Plane and Beta", 100, 0, 1000, 900)
c1_kaons_fpH.Divide(2,2)
c1_kaons_fpH.cd(1)
H_xfp_vs_beta_kaons_uncut.Draw("COLZ")
c1_kaons_fpH.cd(2)
H_xfp_vs_beta_kaons_cut.Draw("COLZ")
c1_kaons_fpH.cd(3)
H_yfp_vs_beta_kaons_uncut.Draw("COLZ")
c1_kaons_fpH.cd(4)
H_yfp_vs_beta_kaons_cut.Draw("COLZ")
c1_kaons_fpH.Print(Kaon_Analysis_Distributions)

c1_kaons_fpP = TCanvas("c1_kaons_fpP", "SHMS Focal Plane and Beta", 100, 0, 1000, 900)
c1_kaons_fpP.Divide(2,2)
c1_kaons_fpP.cd(1)
P_xfp_vs_beta_kaons_uncut.Draw("COLZ")
c1_kaons_fpP.cd(2)
P_xfp_vs_beta_kaons_cut.Draw("COLZ")
c1_kaons_fpP.cd(3)
P_yfp_vs_beta_kaons_uncut.Draw("COLZ")
c1_kaons_fpP.cd(4)
P_yfp_vs_beta_kaons_cut.Draw("COLZ")
c1_kaons_fpP.Print(Kaon_Analysis_Distributions)

c1_kaons_proj = TCanvas("c1_kaons_proj", "HGC/NGC/Aero XY Projection", 100, 0, 1000, 900)
c1_kaons_proj.Divide(2,3)
c1_kaons_proj.cd(1)
HGC_proj_yx_kaons_uncut.Draw("COLZ")
c1_kaons_proj.cd(2)
HGC_proj_yx_kaons_cut.Draw("COLZ")
c1_kaons_proj.cd(3)
NGC_proj_yx_kaons_uncut.Draw("COLZ")
c1_kaons_proj.cd(4)
NGC_proj_yx_kaons_cut.Draw("COLZ")
c1_kaons_proj.cd(5)
Aero_proj_yx_kaons_uncut.Draw("COLZ")
c1_kaons_proj.cd(6)
Aero_proj_yx_kaons_cut.Draw("COLZ")
c1_kaons_proj.Print(Kaon_Analysis_Distributions + ')')

# Saving protons histograms in PDF
c1_protons_kin = TCanvas("c1_protons_kin", "Protons Kinematic Distributions", 100, 0, 1000, 900)
c1_protons_kin.Divide(2,2)
c1_protons_kin.cd(1)
Q2vsW_protons_cut.Draw("COLZ")
c1_protons_kin.cd(2)
epsilon_protons_cut.Draw()
c1_protons_kin.cd(3)
# SJDK - Commented for now, will need to be u vs phi
# phiqvst_protons_cut.SetStats(0)
# phiqvst_protons_cut.GetYaxis().SetRangeUser(minrangeuser,maxrangeuser)
# phiqvst_protons_cut.Draw("SURF2 POL")
# # Section for polar plotting
# gStyle.SetPalette(55)
# gPad.SetTheta(90)
# gPad.SetPhi(180)
# tvsphi_title_protons = TPaveText(0.0277092,0.89779,0.096428,0.991854,"NDC")
# tvsphi_title_protons.AddText("-t vs #phi")
# tvsphi_title_protons.Draw()
# ptphizero_protons = TPaveText(0.923951,0.513932,0.993778,0.574551,"NDC")
# ptphizero_protons.AddText("#phi = 0")
# ptphizero_protons.Draw()
# phihalfpi_protons = TLine(0,0,0,0.6)
# phihalfpi_protons.SetLineColor(kBlack)
# phihalfpi_protons.SetLineWidth(2)
# phihalfpi_protons.Draw()
# ptphihalfpi_protons = TPaveText(0.417855,0.901876,0.486574,0.996358,"NDC")
# ptphihalfpi_protons.AddText("#phi = #frac{#pi}{2}")
# ptphihalfpi_protons.Draw()
# phipi_protons = TLine(0,0,-0.6,0)
# phipi_protons.SetLineColor(kBlack)
# phipi_protons.SetLineWidth(2)
# phipi_protons.Draw()
# ptphipi_protons = TPaveText(0.0277092,0.514217,0.096428,0.572746,"NDC")
# ptphipi_protons.AddText("#phi = #pi")
# ptphipi_protons.Draw()
# phithreepi_protons = TLine(0,0,0,-0.6)
# phithreepi_protons.SetLineColor(kBlack)
# phithreepi_protons.SetLineWidth(2)
# phithreepi_protons.Draw()
# ptphithreepi_protons = TPaveText(0.419517,0.00514928,0.487128,0.0996315,"NDC")
# ptphithreepi_protons.AddText("#phi = #frac{3#pi}{2}")
# ptphithreepi_protons.Draw()
# Arc_protons = TArc()
# for k in range(0, 6):
#      Arc_protons.SetFillStyle(0)
#      Arc_protons.SetLineWidth(2)
#      # To change the arc radius we have to change number 0.825 in the lower line.
#      Arc_protons.DrawArc(0,0,0.95*(k+1)/(10),0.,360.,"same")
# tradius_protons = TGaxis(0,0,0.575,0,minrangeuser,maxrangeuser,10,"-+")
# tradius_protons.SetLineColor(2)
# tradius_protons.SetLabelColor(2)
# tradius_protons.Draw()
# phizero_protons = TLine(0,0,0.6,0)
# phizero_protons.SetLineColor(kBlack)
# phizero_protons.SetLineWidth(2)
# phizero_protons.Draw()
# End of polar plotting section
c1_protons_kin.cd(4)
P_MMp_protons_cut_randm_sub.Draw("hist")
# Section for Neutron Peak Events Selection
shadedpeak_protons = P_MMp_protons_cut_randm_sub.Clone()
shadedpeak_protons.SetFillColor(2)
shadedpeak_protons.SetFillStyle(3244)
shadedpeak_protons.GetXaxis().SetRangeUser(minbin, maxbin)
shadedpeak_protons.Draw("samehist")
NeutronEvt_protons = TPaveText(0.58934,0.675,0.95,0.75,"NDC")
BinLow_protons = P_MMp_protons_cut_randm_sub.GetXaxis().FindBin(minbin)
BinHigh_protons = P_MMp_protons_cut_randm_sub.GetXaxis().FindBin(maxbin)
BinIntegral_protons = int(P_MMp_protons_cut_randm_sub.Integral(BinLow_protons, BinHigh_protons))
NeutronEvt_protons.SetLineColor(2)
NeutronEvt_protons.AddText("e p n Events: %i" %(BinIntegral_protons))
NeutronEvt_protons.Draw()
# End of Neutron Peak Events Selection Section
c1_protons_kin.Print(Proton_Analysis_Distributions + '(')

c1_protons_acpt = TCanvas("c1_protons_acpt", "Electron-Proton Acceptance Distributions", 100, 0, 1000, 900)
c1_protons_acpt.Divide(3,2)
c1_protons_acpt.cd(1)
gPad.SetLogy()
H_xp_protons_uncut.SetLineColor(2)
H_xp_protons_uncut.Draw()
H_xp_protons_cut.SetLineColor(4)
H_xp_protons_cut.Draw("same")
c1_protons_acpt.cd(2)
gPad.SetLogy()
H_yp_protons_uncut.SetLineColor(2)
H_yp_protons_uncut.Draw()
H_yp_protons_cut.SetLineColor(4)
H_yp_protons_cut.Draw("same")
c1_protons_acpt.cd(3)
gPad.SetLogy()
H_dp_protons_uncut.SetMinimum(0.1*H_dp_protons_cut.GetMinimum()+1) # min of plot should be one order of magnitude below the min bin in cut distribution
H_dp_protons_uncut.SetMaximum(10*H_dp_protons_uncut.GetBinContent(H_dp_protons_uncut.GetMaximumBin())) # Max of plot should be 1 order of magnitude greater than the max bin in uncut distribution
H_dp_protons_uncut.SetLineColor(2)
H_dp_protons_cut.SetLineColor(4)
H_dp_protons_uncut.Draw()
H_dp_protons_cut.Draw("same")
# TLegend (x1, y1, x2, y2) 
legend23_protons = ROOT.TLegend(0.115, 0.8, 0.6, 0.9)
legend23_protons.AddEntry("H_dp_protons_uncut", "without cuts", "l")
legend23_protons.AddEntry("H_dp_protons_cut", "with cuts (acpt/RF/PID)", "l")
legend23_protons.Draw("same")
c1_protons_acpt.cd(4)
gPad.SetLogy()
P_xp_protons_uncut.SetLineColor(2)
P_xp_protons_uncut.Draw()
P_xp_protons_cut.SetLineColor(4)
P_xp_protons_cut.Draw("same")
c1_protons_acpt.cd(5)
gPad.SetLogy()
P_yp_protons_uncut.SetLineColor(2)
P_yp_protons_uncut.Draw()
P_yp_protons_cut.SetLineColor(4)
P_yp_protons_cut.Draw("same")
c1_protons_acpt.cd(6)
gPad.SetLogy()
P_dp_protons_uncut.SetMinimum(0.1*P_dp_protons_cut.GetMinimum()+1) # Implemented same fixed as used above for HMS
P_dp_protons_uncut.SetMaximum(10*P_dp_protons_uncut.GetBinContent(P_dp_protons_uncut.GetMaximumBin()))
P_dp_protons_uncut.SetLineColor(2)
P_dp_protons_uncut.Draw()
P_dp_protons_cut.SetLineColor(4)
P_dp_protons_cut.Draw("same")
c1_protons_acpt.Print(Proton_Analysis_Distributions)

c1_protons_pid = TCanvas("c1_protons_pid", "Electron-Proton CAL Distributions", 100, 0, 1000, 900)
c1_protons_pid.Divide(2,2)
c1_protons_pid.cd(1)
gPad.SetLogy()
H_cal_etottracknorm_protons_uncut.SetLineColor(2)
H_cal_etottracknorm_protons_uncut.Draw()
H_cal_etottracknorm_protons_cut.SetLineColor(4)
H_cal_etottracknorm_protons_cut.Draw("same")
legend24_protons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend24_protons.AddEntry("H_cal_etottracknorm_protons_uncut", "without cuts", "l")
legend24_protons.AddEntry("H_cal_etottracknorm_protons_cut", "with cuts (acpt/RF/PID)", "l")
legend24_protons.Draw("same")
c1_protons_pid.cd(2)
H_cal_etottracknorm_vs_cer_npe_protons_cut.Draw("COLZ")
c1_protons_pid.cd(3)
gPad.SetLogy()
P_cal_etottracknorm_protons_uncut.SetLineColor(2)
P_cal_etottracknorm_protons_uncut.Draw()
P_cal_etottracknorm_protons_cut.SetLineColor(4)
P_cal_etottracknorm_protons_cut.Draw("same")
legend25_protons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend25_protons.AddEntry("P_cal_etottracknorm_protons_uncut", "without cuts", "l")
legend25_protons.AddEntry("P_cal_etottracknorm_protons_cut", "with cuts (acpt/RF/PID)", "l")
legend25_protons.Draw("same")
c1_protons_pid.cd(4)
#
c1_protons_pid.Print(Proton_Analysis_Distributions)

c1_protons_RF = TCanvas("c1_protons_RF", "Electron-Proton RF Distributions", 100, 0, 1000, 900)
c1_protons_RF.Divide(2,2)
c1_protons_RF.cd(1)
P_RFTime_protons_uncut.SetLineColor(2)
P_RFTime_protons_uncut.Draw()
P_RFTime_protons_cut.SetLineColor(4)
P_RFTime_protons_cut.Draw("same")
legend26_protons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend26_protons.AddEntry("P_RFTime_protons_uncut", "without cuts", "l")
legend26_protons.AddEntry("P_RFTime_protons_cut", "with cuts (acpt/RF/PID)", "l")
legend26_protons.Draw("same")
c1_protons_RF.cd(2)
P_RFTime_protons_cut.SetLineColor(2)
P_RFTime_protons_cut.Draw("same")
#legend27_protons = ROOT.TLegend(0.115, 0.835, 0.415, 0.9)
#legend27_protons.AddEntry("P_RFTime_protons_cut_noRF", "noRF_cuts (acpt/PID)", "l")
#legend27_protons.AddEntry("P_RFTime_protons_cut", "RF_cuts (acpt/PID)", "l")
#legend27_protons.Draw("same")
c1_protons_RF.cd(3)
P_RFTime_vs_MMp_protons_uncut.Draw("COLZ")
c1_protons_RF.cd(4)
P_RFTime_vs_MMp_protons_cut.Draw("COLZ")
c1_protons_RF.Print(Proton_Analysis_Distributions)

c2_protons_pid = TCanvas("c2_protons_pid", "Electron-Proton Aero/HGC/NGC PID Distributions", 100, 0, 1000, 900)
c2_protons_pid.Divide(2,2)
c2_protons_pid.cd(1)
gPad.SetLogy()
P_hgcer_npe_protons_uncut.SetLineColor(2)
P_hgcer_npe_protons_uncut.Draw()
P_hgcer_npe_protons_cut.SetLineColor(4)
P_hgcer_npe_protons_cut.Draw("same")
legend28_protons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend28_protons.AddEntry("P_hgcer_npe_protons_uncut", "without cuts", "l")
legend28_protons.AddEntry("P_hgcer_npe_protons_cut", "with cuts (acpt/RF/PID)", "l")
legend28_protons.Draw("same")
c2_protons_pid.cd(2)
gPad.SetLogy()
P_aero_npe_protons_uncut.SetLineColor(2)
P_aero_npe_protons_uncut.Draw()
P_aero_npe_protons_cut.SetLineColor(4)
P_aero_npe_protons_cut.Draw("same")
legend29_protons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
legend29_protons.AddEntry("P_aero_npe_protons_uncut", "without cuts", "l")
legend29_protons.AddEntry("P_aero_npe_protons_cut", "with cuts (acpt/RF/PID)", "l")
legend29_protons.Draw("same")
c2_protons_pid.cd(3)
gPad.SetLogy()
P_ngcer_npe_protons_uncut.SetLineColor(2)
P_ngcer_npe_protons_uncut.Draw()
P_ngcer_npe_protons_cut.SetLineColor(4)
P_ngcer_npe_protons_cut.Draw("same")
#legend30_protons = ROOT.TLegend(0.115, 0.835, 0.43, 0.9)
#legend30_protons.AddEntry("P_ngcer_npe_protons_uncut", "without cuts", "l")
#legend30_protons.AddEntry("P_ngcer_npe_protons_cut", "with cuts (acpt/RF/PID)", "l")
#legend30_protons.Draw("same")
c2_protons_pid.cd(4)
#
c2_protons_pid.Print(Proton_Analysis_Distributions)

c3_protons_pid = TCanvas("c3_protons_pid", "Electron-Proton Aero/HGC/NGC PID Distributions", 100, 0, 1000, 900)
c3_protons_pid.Divide(2,3)
c3_protons_pid.cd(1)
gPad.SetLogz()
P_hgcer_vs_aero_npe_protons_uncut.Draw("COLZ")
c3_protons_pid.cd(2)
gPad.SetLogz()
P_hgcer_vs_aero_npe_protons_cut.Draw("COLZ")
c3_protons_pid.cd(3)
gPad.SetLogz()
P_ngcer_vs_hgcer_npe_protons_uncut.Draw("COLZ")
c3_protons_pid.cd(4)
gPad.SetLogz()
P_ngcer_vs_hgcer_npe_protons_cut.Draw("COLZ")
c3_protons_pid.cd(5)
gPad.SetLogz()
P_ngcer_vs_aero_npe_protons_uncut.Draw("COLZ")
c3_protons_pid.cd(6)
gPad.SetLogz()
P_ngcer_vs_aero_npe_protons_cut.Draw("COLZ")
c3_protons_pid.Print(Proton_Analysis_Distributions)

c1_protons_MM = TCanvas("c1_protons_MM", "Electron-Proton CTime/Missing Mass Distributions", 100, 0, 1000, 900)
c1_protons_MM.Divide(3,2)
c1_protons_MM.cd(1)
epCoinTime_protons_uncut.SetLineColor(4)
epCoinTime_protons_uncut.Draw()
epCoinTime_protons_cut_prompt.SetLineColor(6)
epCoinTime_protons_cut_prompt.Draw("same")
epCoinTime_protons_cut_randm.SetLineColor(8)
epCoinTime_protons_cut_randm.Draw("same")
legend31_protons = ROOT.TLegend(0.1, 0.815, 0.48, 0.9)
legend31_protons.AddEntry("epCoinTime_protons_uncut", "CT_without cuts", "l")
legend31_protons.AddEntry("epCoinTime_protons_cut_prompt", "CT_prompt with cuts (acpt/RF/PID)", "l")
legend31_protons.AddEntry("epCoinTime_protons_cut_randm", "CT_randoms with cuts (acpt/RF/PID)", "l")
legend31_protons.Draw("same")
c1_protons_MM.cd(2)
epCoinTime_protons_cut.SetLineColor(4)
epCoinTime_protons_cut.Draw()
epCoinTime_protons_cut_prompt.SetLineColor(6)
epCoinTime_protons_cut_prompt.Draw("same")
epCoinTime_protons_cut_randm.SetLineColor(8)
epCoinTime_protons_cut_randm.Draw("same")
legend32_protons = ROOT.TLegend(0.1, 0.815, 0.48, 0.9)
legend32_protons.AddEntry("epCoinTime_protons_cut", "CT_with cuts (acpt/RF/PID)", "l")
legend32_protons.AddEntry("epCoinTime_protons_cut_prompt", "CT_prompt with cuts (acpt/RF/PID)", "l")
legend32_protons.AddEntry("epCoinTime_protons_cut_randm", "CT_randoms with cuts (acpt/RF/PID)", "l")
legend32_protons.Draw("same")
c1_protons_MM.cd(3)
P_MMp_protons_uncut.Draw()
# Section for Neutron Peak Events Selection
#shadedpeak_protons = P_MMp_protons_uncut.Clone()
#shadedpeak_protons.SetFillColor(2)
#shadedpeak_protons.SetFillStyle(3244)
#shadedpeak_protons.GetXaxis().SetRangeUser(minbin, maxbin)
#shadedpeak_protons.Draw("samehist")
#NeutronEvt_protons = TPaveText(0.58934,0.675,0.95,0.75,"NDC")
#BinLow_protons = P_MMp_protons_uncut.GetXaxis().FindBin(minbin)
#BinHigh_protons = P_MMp_protons_uncut.GetXaxis().FindBin(maxbin)
#BinIntegral_protons = int(P_MMp_protons_uncut.Integral(BinLow_protons, BinHigh_protons))
#NeutronEvt_protons.SetLineColor(2)
#NeutronEvt_protons.AddText("e p n Events: %i" %(BinIntegral_protons))
#NeutronEvt_protons.Draw()
c1_protons_MM.cd(4)
P_MMp_protons_cut.SetLineColor(4)
P_MMp_protons_cut.Draw()
P_MMp_protons_cut_prompt.SetLineColor(6)
P_MMp_protons_cut_prompt.Draw("same")
P_MMp_protons_cut_randm.SetLineColor(8)
P_MMp_protons_cut_randm.Draw("same")
legend33_protons = ROOT.TLegend(0.4, 0.815, 0.78, 0.9)
legend33_protons.AddEntry("P_MMp_protons_cut", "MM with cuts (acpt/RF/PID)", "l")
legend33_protons.AddEntry("P_MMp_protons_cut_prompt", "MM_prompt with cuts (acpt/RF/PID)", "l")
legend33_protons.AddEntry("P_MMp_protons_cut_randm", "MM_randoms with cuts (acpt/RF/PID)", "l")
legend33_protons.Draw("same")
c1_protons_MM.cd(5)
P_MMp_vs_beta_protons_uncut.Draw("COLZ")
c1_protons_MM.cd(6)
P_MMp_vs_beta_protons_cut.Draw("COLZ")
c1_protons_MM.Print(Proton_Analysis_Distributions)

c1_protons_CT = TCanvas("c1_protons_CT", "Electron-Proton CTime Distributions", 100, 0, 1000, 900)
c1_protons_CT.Divide(2,2)
c1_protons_CT.cd(1)
epCoinTime_vs_beta_protons_uncut.Draw("COLZ")
# TLine (x1, y1, x2, y2)
LowerPrompt1_protons = TLine(PromptWindow[0],gPad.GetUymin(),PromptWindow[0],2)
LowerPrompt1_protons.SetLineColor(2)
LowerPrompt1_protons.SetLineWidth(2)
LowerPrompt1_protons.Draw("same")
UpperPrompt1_protons = TLine(PromptWindow[1],gPad.GetUymin(),PromptWindow[1],2)
UpperPrompt1_protons.SetLineColor(2)
UpperPrompt1_protons.SetLineWidth(2)
UpperPrompt1_protons.Draw("same")
LowerRandomL1_protons = TLine(RandomWindows[0],gPad.GetUymin(),RandomWindows[0],2)
LowerRandomL1_protons.SetLineColor(8)
LowerRandomL1_protons.SetLineWidth(2)
LowerRandomL1_protons.Draw("same")
UpperRandomL1_protons = TLine(RandomWindows[1],gPad.GetUymin(),RandomWindows[1],2)
UpperRandomL1_protons.SetLineColor(8)
UpperRandomL1_protons.SetLineWidth(2)
UpperRandomL1_protons.Draw("same")
LowerRandomR1_protons = TLine(RandomWindows[2],gPad.GetUymin(),RandomWindows[2],2)
LowerRandomR1_protons.SetLineColor(8)
LowerRandomR1_protons.SetLineWidth(2)
LowerRandomR1_protons.Draw("same")
UpperRandomR1_protons = TLine(RandomWindows[3],gPad.GetUymin(),RandomWindows[3],2)
UpperRandomR1_protons.SetLineColor(8)
UpperRandomR1_protons.SetLineWidth(2)
UpperRandomR1_protons.Draw("same")
c1_protons_CT.cd(2)
epCoinTime_vs_beta_protons_cut.Draw("COLZ")
c1_protons_CT.cd(3)
epCoinTime_vs_MMp_protons_uncut.Draw("COLZ")
LowerPrompt2_protons = TLine(PromptWindow[0],gPad.GetUymin(),PromptWindow[0],2)
LowerPrompt2_protons.SetLineColor(2)
LowerPrompt2_protons.SetLineWidth(2)
LowerPrompt2_protons.Draw("same")
UpperPrompt2_protons = TLine(PromptWindow[1],gPad.GetUymin(),PromptWindow[1],2)
UpperPrompt2_protons.SetLineColor(2)
UpperPrompt2_protons.SetLineWidth(2)
UpperPrompt2_protons.Draw("same")
LowerRandomL2_protons = TLine(RandomWindows[0],gPad.GetUymin(),RandomWindows[0],2)
LowerRandomL2_protons.SetLineColor(8)
LowerRandomL2_protons.SetLineWidth(2)
LowerRandomL2_protons.Draw("same")
UpperRandomL2_protons = TLine(RandomWindows[1],gPad.GetUymin(),RandomWindows[1],2)
UpperRandomL2_protons.SetLineColor(8)
UpperRandomL2_protons.SetLineWidth(2)
UpperRandomL2_protons.Draw("same")
LowerRandomR2_protons = TLine(RandomWindows[2],gPad.GetUymin(),RandomWindows[2],2)
LowerRandomR2_protons.SetLineColor(8)
LowerRandomR2_protons.SetLineWidth(2)
LowerRandomR2_protons.Draw("same")
UpperRandomR2_protons = TLine(RandomWindows[3],gPad.GetUymin(),RandomWindows[3],2)
UpperRandomR2_protons.SetLineColor(8)
UpperRandomR2_protons.SetLineWidth(2)
UpperRandomR2_protons.Draw("same")
c1_protons_CT.cd(4)
epCoinTime_vs_MMp_protons_cut.Draw("COLZ")
c1_protons_CT.Print(Proton_Analysis_Distributions)

c1_protons_delta = TCanvas("c1_protons_delta", "Delta Debugging", 100, 0, 1000, 900)
c1_protons_delta.Divide(2,2)
c1_protons_delta.cd(1)
H_dp_vs_beta_protons_uncut.Draw("COLZ")
c1_protons_delta.cd(2)
H_dp_vs_beta_protons_cut.Draw("COLZ")
c1_protons_delta.cd(3)
P_dp_vs_beta_protons_uncut.Draw("COLZ")
c1_protons_delta.cd(4)
P_dp_vs_beta_protons_cut.Draw("COLZ")
c1_protons_delta.Print(Proton_Analysis_Distributions)

c1_protons_fpH = TCanvas("c1_protons_fpH", "HMS Focal Plane and Beta", 100, 0, 1000, 900)
c1_protons_fpH.Divide(2,2)
c1_protons_fpH.cd(1)
H_xfp_vs_beta_protons_uncut.Draw("COLZ")
c1_protons_fpH.cd(2)
H_xfp_vs_beta_protons_cut.Draw("COLZ")
c1_protons_fpH.cd(3)
H_yfp_vs_beta_protons_uncut.Draw("COLZ")
c1_protons_fpH.cd(4)
H_yfp_vs_beta_protons_cut.Draw("COLZ")
c1_protons_fpH.Print(Proton_Analysis_Distributions)

c1_protons_fpP = TCanvas("c1_protons_fpP", "SHMS Focal Plane and Beta", 100, 0, 1000, 900)
c1_protons_fpP.Divide(2,2)
c1_protons_fpP.cd(1)
P_xfp_vs_beta_protons_uncut.Draw("COLZ")
c1_protons_fpP.cd(2)
P_xfp_vs_beta_protons_cut.Draw("COLZ")
c1_protons_fpP.cd(3)
P_yfp_vs_beta_protons_uncut.Draw("COLZ")
c1_protons_fpP.cd(4)
P_yfp_vs_beta_protons_cut.Draw("COLZ")
c1_protons_fpP.Print(Proton_Analysis_Distributions)

c1_protons_proj = TCanvas("c1_protons_proj", "HGC/NGC/Aero XY Projection", 100, 0, 1000, 900)
c1_protons_proj.Divide(2,3)
c1_protons_proj.cd(1)
HGC_proj_yx_protons_uncut.Draw("COLZ")
c1_protons_proj.cd(2)
HGC_proj_yx_protons_cut.Draw("COLZ")
c1_protons_proj.cd(3)
NGC_proj_yx_protons_uncut.Draw("COLZ")
c1_protons_proj.cd(4)
NGC_proj_yx_protons_cut.Draw("COLZ")
c1_protons_proj.cd(5)
Aero_proj_yx_protons_uncut.Draw("COLZ")
c1_protons_proj.cd(6)
Aero_proj_yx_protons_cut.Draw("COLZ")
c1_protons_proj.Print(Proton_Analysis_Distributions + ')')

#############################################################################################################################################

# Making directories in output file
if (FilenameOverride == False): # Standard running condition, construct file name from run number and max events e.t.c.
       outHistFile = ROOT.TFile.Open("%s/%s_%s_Output_Data.root" % (OUTPATH, runNum, MaxEvent), "RECREATE")
elif (FilenameOverride != False): # Special condition, with 4th arg, use 4th arg as file name
       outHistFile = ROOT.TFile.Open("%s/%s_%s_Output_Data.root" % (OUTPATH, (FilenameOverride.split("_Analysed_Data.root",1)[0]), MaxEvent), "RECREATE")                                                         

d_Uncut_Pion_Events = outHistFile.mkdir("Uncut_Pion_Events")
d_Cut_Pion_Events_All = outHistFile.mkdir("Cut_Pion_Events_All")
d_Cut_Pion_Events_Prompt = outHistFile.mkdir("Cut_Pion_Events_Prompt")
d_Cut_Pion_Events_Random = outHistFile.mkdir("Cut_Pion_Events_Random")

d_Uncut_Kaon_Events = outHistFile.mkdir("Uncut_Kaon_Events")
d_Cut_Kaon_Events_All = outHistFile.mkdir("Cut_Kaon_Events_All")
d_Cut_Kaon_Events_Prompt = outHistFile.mkdir("Cut_Kaon_Events_Prompt")
d_Cut_Kaon_Events_Random = outHistFile.mkdir("Cut_Kaon_Events_Random")

d_Uncut_Proton_Events = outHistFile.mkdir("Uncut_Proton_Events")
d_Cut_Proton_Events_All = outHistFile.mkdir("Cut_Proton_Events_All")
d_Cut_Proton_Events_Prompt = outHistFile.mkdir("Cut_Proton_Events_Prompt")
d_Cut_Proton_Events_Random = outHistFile.mkdir("Cut_Proton_Events_Random")

# Writing Histograms for pions                                                               
d_Uncut_Pion_Events.cd()
H_beta_pions_uncut.Write()
H_xp_pions_uncut.Write()
H_yp_pions_uncut.Write()
H_dp_pions_uncut.Write()
H_hod_goodscinhit_pions_uncut.Write()
H_hod_goodstarttime_pions_uncut.Write()
H_cal_etotnorm_pions_uncut.Write()
H_cal_etottracknorm_pions_uncut.Write()
H_cer_npe_pions_uncut.Write()
H_RFTime_pions_uncut.Write()
P_beta_pions_uncut.Write()
P_xp_pions_uncut.Write()
P_yp_pions_uncut.Write()
P_dp_pions_uncut.Write()
P_p_pions_uncut.Write()
P_hod_goodscinhit_pions_uncut.Write()
P_hod_goodstarttime_pions_uncut.Write()
P_cal_etotnorm_pions_uncut.Write()
P_cal_etottracknorm_pions_uncut.Write()
P_hgcer_npe_pions_uncut.Write()
P_xhgcer_pions_uncut.Write()
P_yhgcer_pions_uncut.Write()
P_aero_npe_pions_uncut.Write()
P_xaero_pions_uncut.Write()
P_yaero_pions_uncut.Write()
P_ngcer_npe_pions_uncut.Write()
P_xngcer_pions_uncut.Write()
P_yngcer_pions_uncut.Write()
P_MMpi_pions_uncut.Write()
P_RFTime_pions_uncut.Write()
ePiCoinTime_pions_uncut.Write()
Q2_pions_uncut.Write()
W_pions_uncut.Write()
epsilon_pions_uncut.Write()
phiq_pions_uncut.Write()
t_pions_uncut.Write()
H_cal_etottracknorm_vs_cer_npe_pions_uncut.Write()
P_hgcer_vs_aero_npe_pions_uncut.Write()
ePiCoinTime_vs_MMpi_pions_uncut.Write()
P_hgcer_yx_pions_uncut.Write()
P_aero_yx_pions_uncut.Write()
ePiCoinTime_vs_beta_pions_uncut.Write()
P_RFTime_vs_MMpi_pions_uncut.Write()
P_cal_etottracknorm_vs_ngcer_npe_pions_uncut.Write()
P_ngcer_yx_pions_uncut.Write()
P_ngcer_vs_hgcer_npe_pions_uncut.Write()
P_ngcer_vs_aero_npe_pions_uncut.Write()
H_dp_vs_beta_pions_uncut.Write()
P_dp_vs_beta_pions_uncut.Write()
H_xfp_vs_beta_pions_uncut.Write()
H_xpfp_vs_beta_pions_uncut.Write()
P_xfp_vs_beta_pions_uncut.Write()
P_xpfp_vs_beta_pions_uncut.Write()
H_yfp_vs_beta_pions_uncut.Write()
H_ypfp_vs_beta_pions_uncut.Write()
P_yfp_vs_beta_pions_uncut.Write()
P_ypfp_vs_beta_pions_uncut.Write()
P_MMpi_vs_beta_pions_uncut.Write()
HGC_proj_yx_pions_uncut.Write()
NGC_proj_yx_pions_uncut.Write()
Aero_proj_yx_pions_uncut.Write()
P_HGC_xy_npe_pions_uncut.Write()
P_Aero_xy_npe_pions_uncut.Write()
P_NGC_xy_npe_pions_uncut.Write()

d_Cut_Pion_Events_All.cd()
H_beta_pions_cut.Write()
H_xp_pions_cut.Write()
H_yp_pions_cut.Write()
H_dp_pions_cut.Write()
H_hod_goodscinhit_pions_cut.Write()
H_hod_goodstarttime_pions_cut.Write()
H_cal_etotnorm_pions_cut.Write()
H_cal_etottracknorm_pions_cut.Write()
H_cer_npe_pions_cut.Write()
H_RFTime_pions_cut.Write()
P_beta_pions_cut.Write()
P_xp_pions_cut.Write()
P_yp_pions_cut.Write()
P_dp_pions_cut.Write()
P_p_pions_cut.Write()
P_hod_goodscinhit_pions_cut.Write()
P_hod_goodstarttime_pions_cut.Write()
P_cal_etotnorm_pions_cut.Write()
P_cal_etottracknorm_pions_cut.Write()
P_hgcer_npe_pions_cut.Write()
P_xhgcer_pions_cut.Write()
P_yhgcer_pions_cut.Write()
P_aero_npe_pions_cut.Write()
P_xaero_pions_cut.Write()
P_yaero_pions_cut.Write()
P_ngcer_npe_pions_cut.Write()
P_xngcer_pions_cut.Write()
P_yngcer_pions_cut.Write()
P_MMpi_pions_cut.Write()
P_RFTime_pions_cut.Write()
ePiCoinTime_pions_cut.Write()
Q2_pions_cut.Write()
W_pions_cut.Write()
epsilon_pions_cut.Write()
phiq_pions_cut.Write()
t_pions_cut.Write()
Q2vsW_pions_cut.Write()
phiqvst_pions_cut.Write()
H_cal_etottracknorm_vs_cer_npe_pions_cut.Write()
P_hgcer_vs_aero_npe_pions_cut.Write()
ePiCoinTime_vs_MMpi_pions_cut.Write()
P_hgcer_yx_pions_cut.Write()
P_aero_yx_pions_cut.Write()
ePiCoinTime_vs_beta_pions_cut.Write()
P_RFTime_vs_MMpi_pions_cut.Write()
P_MMpi_pions_cut_randm_sub.Write()
P_cal_etottracknorm_vs_ngcer_npe_pions_cut.Write()
P_ngcer_yx_pions_cut.Write()
P_ngcer_vs_hgcer_npe_pions_cut.Write()
P_ngcer_vs_aero_npe_pions_cut.Write()
H_dp_vs_beta_pions_cut.Write()
P_dp_vs_beta_pions_cut.Write()
H_xfp_vs_beta_pions_cut.Write()
H_xpfp_vs_beta_pions_cut.Write()
P_xfp_vs_beta_pions_cut.Write()
P_xpfp_vs_beta_pions_cut.Write()
H_yfp_vs_beta_pions_cut.Write()
H_ypfp_vs_beta_pions_cut.Write()
P_yfp_vs_beta_pions_cut.Write()
P_ypfp_vs_beta_pions_cut.Write()
P_MMpi_vs_beta_pions_cut.Write()
P_HGC_xy_npe_pions_cut.Write()
P_Aero_xy_npe_pions_cut.Write()
P_NGC_xy_npe_pions_cut.Write()
HGC_proj_yx_pions_cut.Write()
NGC_proj_yx_pions_cut.Write()
Aero_proj_yx_pions_cut.Write()

d_Cut_Pion_Events_Prompt.cd()
P_beta_pions_cut_prompt.Write()
P_RFTime_pions_cut_prompt.Write()
ePiCoinTime_pions_cut_prompt.Write()
P_MMpi_pions_cut_prompt.Write()
MMpi_vs_ePiCoinTime_pions_cut_prompt.Write()

d_Cut_Pion_Events_Random.cd()
P_beta_pions_cut_randm.Write()
P_RFTime_pions_cut_randm.Write()
ePiCoinTime_pions_cut_randm.Write()
P_MMpi_pions_cut_randm.Write()

# Writing Histograms for kaons                                                         
d_Uncut_Kaon_Events.cd()
H_beta_kaons_uncut.Write()
H_xp_kaons_uncut.Write()
H_yp_kaons_uncut.Write()
H_dp_kaons_uncut.Write()
H_hod_goodscinhit_kaons_uncut.Write()
H_hod_goodstarttime_kaons_uncut.Write()
H_cal_etotnorm_kaons_uncut.Write()
H_cal_etottracknorm_kaons_uncut.Write()
H_cer_npe_kaons_uncut.Write()
H_RFTime_kaons_uncut.Write()
P_beta_kaons_uncut.Write()
P_xp_kaons_uncut.Write()
P_yp_kaons_uncut.Write()
P_dp_kaons_uncut.Write()
P_p_kaons_uncut.Write()
P_hod_goodscinhit_kaons_uncut.Write()
P_hod_goodstarttime_kaons_uncut.Write()
P_cal_etotnorm_kaons_uncut.Write()
P_cal_etottracknorm_kaons_uncut.Write()
P_hgcer_npe_kaons_uncut.Write()
P_xhgcer_kaons_uncut.Write()
P_yhgcer_kaons_uncut.Write()
P_aero_npe_kaons_uncut.Write()
P_xaero_kaons_uncut.Write()
P_yaero_kaons_uncut.Write()
P_ngcer_npe_kaons_uncut.Write()
P_xngcer_kaons_uncut.Write()
P_yngcer_kaons_uncut.Write()
P_MMK_kaons_uncut.Write()
P_RFTime_kaons_uncut.Write()
eKCoinTime_kaons_uncut.Write()
Q2_kaons_uncut.Write()
W_kaons_uncut.Write()
epsilon_kaons_uncut.Write()
phiq_kaons_uncut.Write()
t_kaons_uncut.Write()
H_cal_etottracknorm_vs_cer_npe_kaons_uncut.Write()
P_hgcer_vs_aero_npe_kaons_uncut.Write()
eKCoinTime_vs_MMK_kaons_uncut.Write()
P_hgcer_yx_kaons_uncut.Write()
P_aero_yx_kaons_uncut.Write()
eKCoinTime_vs_beta_kaons_uncut.Write()
P_RFTime_vs_MMK_kaons_uncut.Write()
P_cal_etottracknorm_vs_ngcer_npe_kaons_uncut.Write()
P_ngcer_yx_kaons_uncut.Write()
P_ngcer_vs_hgcer_npe_kaons_uncut.Write()
P_ngcer_vs_aero_npe_kaons_uncut.Write()
H_dp_vs_beta_kaons_uncut.Write()
P_dp_vs_beta_kaons_uncut.Write()
H_xfp_vs_beta_kaons_uncut.Write()
H_xpfp_vs_beta_kaons_uncut.Write()
P_xfp_vs_beta_kaons_uncut.Write()
P_xpfp_vs_beta_kaons_uncut.Write()
H_yfp_vs_beta_kaons_uncut.Write()
H_ypfp_vs_beta_kaons_uncut.Write()
P_yfp_vs_beta_kaons_uncut.Write()
P_ypfp_vs_beta_kaons_uncut.Write()
P_MMK_vs_beta_kaons_uncut.Write()
HGC_proj_yx_kaons_uncut.Write()
NGC_proj_yx_kaons_uncut.Write()
Aero_proj_yx_kaons_uncut.Write()
P_HGC_xy_npe_kaons_uncut.Write()
P_Aero_xy_npe_kaons_uncut.Write()
P_NGC_xy_npe_kaons_uncut.Write()

d_Cut_Kaon_Events_All.cd()
H_beta_kaons_cut.Write()
H_xp_kaons_cut.Write()
H_yp_kaons_cut.Write()
H_dp_kaons_cut.Write()
H_hod_goodscinhit_kaons_cut.Write()
H_hod_goodstarttime_kaons_cut.Write()
H_cal_etotnorm_kaons_cut.Write()
H_cal_etottracknorm_kaons_cut.Write()
H_cer_npe_kaons_cut.Write()
H_RFTime_kaons_cut.Write()
P_beta_kaons_cut.Write()
P_xp_kaons_cut.Write()
P_yp_kaons_cut.Write()
P_dp_kaons_cut.Write()
P_p_kaons_cut.Write()
P_hod_goodscinhit_kaons_cut.Write()
P_hod_goodstarttime_kaons_cut.Write()
P_cal_etotnorm_kaons_cut.Write()
P_cal_etottracknorm_kaons_cut.Write()
P_hgcer_npe_kaons_cut.Write()
P_xhgcer_kaons_cut.Write()
P_yhgcer_kaons_cut.Write()
P_aero_npe_kaons_cut.Write()
P_xaero_kaons_cut.Write()
P_yaero_kaons_cut.Write()
P_ngcer_npe_kaons_cut.Write()
P_xngcer_kaons_cut.Write()
P_yngcer_kaons_cut.Write()
P_MMK_kaons_cut.Write()
P_RFTime_kaons_cut.Write()
eKCoinTime_kaons_cut.Write()
Q2_kaons_cut.Write()
W_kaons_cut.Write()
epsilon_kaons_cut.Write()
phiq_kaons_cut.Write()
t_kaons_cut.Write()
Q2vsW_kaons_cut.Write()
phiqvst_kaons_cut.Write()
H_cal_etottracknorm_vs_cer_npe_kaons_cut.Write()
P_hgcer_vs_aero_npe_kaons_cut.Write()
eKCoinTime_vs_MMK_kaons_cut.Write()
P_hgcer_yx_kaons_cut.Write()
P_aero_yx_kaons_cut.Write()
eKCoinTime_vs_beta_kaons_cut.Write()
P_RFTime_vs_MMK_kaons_cut.Write()
P_MMK_kaons_cut_randm_sub.Write()
P_cal_etottracknorm_vs_ngcer_npe_kaons_cut.Write()
P_ngcer_yx_kaons_cut.Write()
P_ngcer_vs_hgcer_npe_kaons_cut.Write()
P_ngcer_vs_aero_npe_kaons_cut.Write()
H_dp_vs_beta_kaons_cut.Write()
P_dp_vs_beta_kaons_cut.Write()
H_xfp_vs_beta_kaons_cut.Write()
H_xpfp_vs_beta_kaons_cut.Write()
P_xfp_vs_beta_kaons_cut.Write()
P_xpfp_vs_beta_kaons_cut.Write()
H_yfp_vs_beta_kaons_cut.Write()
H_ypfp_vs_beta_kaons_cut.Write()
P_yfp_vs_beta_kaons_cut.Write()
P_ypfp_vs_beta_kaons_cut.Write()
P_MMK_vs_beta_kaons_cut.Write()
P_HGC_xy_npe_kaons_cut.Write()
P_Aero_xy_npe_kaons_cut.Write()
P_NGC_xy_npe_kaons_cut.Write()
HGC_proj_yx_kaons_cut.Write()
NGC_proj_yx_kaons_cut.Write()
Aero_proj_yx_kaons_cut.Write()

d_Cut_Kaon_Events_Prompt.cd()
P_beta_kaons_cut_prompt.Write()
P_RFTime_kaons_cut_prompt.Write()
eKCoinTime_kaons_cut_prompt.Write()
P_MMK_kaons_cut_prompt.Write()
MMK_vs_eKCoinTime_kaons_cut_prompt.Write()

d_Cut_Kaon_Events_Random.cd()
P_beta_kaons_cut_randm.Write()
P_RFTime_kaons_cut_randm.Write()
eKCoinTime_kaons_cut_randm.Write()
P_MMK_kaons_cut_randm.Write()

# Writing Histograms for protons                                                                  
d_Uncut_Proton_Events.cd()
H_beta_protons_uncut.Write()
H_xp_protons_uncut.Write()
H_yp_protons_uncut.Write()
H_dp_protons_uncut.Write()
H_hod_goodscinhit_protons_uncut.Write()
H_hod_goodstarttime_protons_uncut.Write()
H_cal_etotnorm_protons_uncut.Write()
H_cal_etottracknorm_protons_uncut.Write()
H_cer_npe_protons_uncut.Write()
H_RFTime_protons_uncut.Write()
P_beta_protons_uncut.Write()
P_xp_protons_uncut.Write()
P_yp_protons_uncut.Write()
P_dp_protons_uncut.Write()
P_p_protons_uncut.Write()
P_hod_goodscinhit_protons_uncut.Write()
P_hod_goodstarttime_protons_uncut.Write()
P_cal_etotnorm_protons_uncut.Write()
P_cal_etottracknorm_protons_uncut.Write()
P_hgcer_npe_protons_uncut.Write()
P_xhgcer_protons_uncut.Write()
P_yhgcer_protons_uncut.Write()
P_aero_npe_protons_uncut.Write()
P_xaero_protons_uncut.Write()
P_yaero_protons_uncut.Write()
P_ngcer_npe_protons_uncut.Write()
P_xngcer_protons_uncut.Write()
P_yngcer_protons_uncut.Write()
P_MMp_protons_uncut.Write()
P_RFTime_protons_uncut.Write()
epCoinTime_protons_uncut.Write()
Q2_protons_uncut.Write()
W_protons_uncut.Write()
epsilon_protons_uncut.Write()
phiq_protons_uncut.Write()
#t_protons_uncut.Write()
H_cal_etottracknorm_vs_cer_npe_protons_uncut.Write()
P_hgcer_vs_aero_npe_protons_uncut.Write()
epCoinTime_vs_MMp_protons_uncut.Write()
P_hgcer_yx_protons_uncut.Write()
P_aero_yx_protons_uncut.Write()
epCoinTime_vs_beta_protons_uncut.Write()
P_RFTime_vs_MMp_protons_uncut.Write()
P_cal_etottracknorm_vs_ngcer_npe_protons_uncut.Write()
P_ngcer_yx_protons_uncut.Write()
P_ngcer_vs_hgcer_npe_protons_uncut.Write()
P_ngcer_vs_aero_npe_protons_uncut.Write()
H_dp_vs_beta_protons_uncut.Write()
P_dp_vs_beta_protons_uncut.Write()
H_xfp_vs_beta_protons_uncut.Write()
H_xpfp_vs_beta_protons_uncut.Write()
P_xfp_vs_beta_protons_uncut.Write()
P_xpfp_vs_beta_protons_uncut.Write()
H_yfp_vs_beta_protons_uncut.Write()
H_ypfp_vs_beta_protons_uncut.Write()
P_yfp_vs_beta_protons_uncut.Write()
P_ypfp_vs_beta_protons_uncut.Write()
P_MMp_vs_beta_protons_uncut.Write()
HGC_proj_yx_protons_uncut.Write()
NGC_proj_yx_protons_uncut.Write()
Aero_proj_yx_protons_uncut.Write()
P_HGC_xy_npe_protons_uncut.Write()
P_Aero_xy_npe_protons_uncut.Write()
P_NGC_xy_npe_protons_uncut.Write()

d_Cut_Proton_Events_All.cd()
H_beta_protons_cut.Write()
H_xp_protons_cut.Write()
H_yp_protons_cut.Write()
H_dp_protons_cut.Write()
H_hod_goodscinhit_protons_cut.Write()
H_hod_goodstarttime_protons_cut.Write()
H_cal_etotnorm_protons_cut.Write()
H_cal_etottracknorm_protons_cut.Write()
H_cer_npe_protons_cut.Write()
H_RFTime_protons_cut.Write()
P_beta_protons_cut.Write()
P_xp_protons_cut.Write()
P_yp_protons_cut.Write()
P_dp_protons_cut.Write()
P_p_protons_cut.Write()
P_hod_goodscinhit_protons_cut.Write()
P_hod_goodstarttime_protons_cut.Write()
P_cal_etotnorm_protons_cut.Write()
P_cal_etottracknorm_protons_cut.Write()
P_hgcer_npe_protons_cut.Write()
P_xhgcer_protons_cut.Write()
P_yhgcer_protons_cut.Write()
P_aero_npe_protons_cut.Write()
P_xaero_protons_cut.Write()
P_yaero_protons_cut.Write()
P_ngcer_npe_protons_cut.Write()
P_xngcer_protons_cut.Write()
P_yngcer_protons_cut.Write()
P_MMp_protons_cut.Write()
P_RFTime_protons_cut.Write()
epCoinTime_protons_cut.Write()
Q2_protons_cut.Write()
W_protons_cut.Write()
epsilon_protons_cut.Write()
phiq_protons_cut.Write()
#t_protons_cut.Write()
Q2vsW_protons_cut.Write()
#phiqvst_protons_cut.Write()
H_cal_etottracknorm_vs_cer_npe_protons_cut.Write()
P_hgcer_vs_aero_npe_protons_cut.Write()
epCoinTime_vs_MMp_protons_cut.Write()
P_hgcer_yx_protons_cut.Write()
P_aero_yx_protons_cut.Write()
epCoinTime_vs_beta_protons_cut.Write()
P_RFTime_vs_MMp_protons_cut.Write()
P_MMp_protons_cut_randm_sub.Write()
P_cal_etottracknorm_vs_ngcer_npe_protons_cut.Write()
P_ngcer_yx_protons_cut.Write()
P_ngcer_vs_hgcer_npe_protons_cut.Write()
P_ngcer_vs_aero_npe_protons_cut.Write()
H_dp_vs_beta_protons_cut.Write()
P_dp_vs_beta_protons_cut.Write()
H_xfp_vs_beta_protons_cut.Write()
H_xpfp_vs_beta_protons_cut.Write()
P_xfp_vs_beta_protons_cut.Write()
P_xpfp_vs_beta_protons_cut.Write()
H_yfp_vs_beta_protons_cut.Write()
H_ypfp_vs_beta_protons_cut.Write()
P_yfp_vs_beta_protons_cut.Write()
P_ypfp_vs_beta_protons_cut.Write()
P_MMp_vs_beta_protons_cut.Write()
P_HGC_xy_npe_protons_cut.Write()
P_Aero_xy_npe_protons_cut.Write()
P_NGC_xy_npe_protons_cut.Write()
HGC_proj_yx_protons_cut.Write()
NGC_proj_yx_protons_cut.Write()
Aero_proj_yx_protons_cut.Write()

d_Cut_Proton_Events_Prompt.cd()
P_beta_protons_cut_prompt.Write()
P_RFTime_protons_cut_prompt.Write()
epCoinTime_protons_cut_prompt.Write()
P_MMp_protons_cut_prompt.Write()
MMp_vs_epCoinTime_protons_cut_prompt.Write()

d_Cut_Proton_Events_Random.cd()
P_beta_protons_cut_randm.Write()
P_RFTime_protons_cut_randm.Write()
epCoinTime_protons_cut_randm.Write()
P_MMp_protons_cut_randm.Write()

outHistFile.Close()
infile.Close() 
print ("Processing Complete")
